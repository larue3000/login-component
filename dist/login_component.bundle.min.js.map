{"version":3,"sources":["webpack://login-component/webpack/universalModuleDefinition","webpack://login-component/webpack/bootstrap","webpack://login-component/./node_modules/buffer/index.js","webpack://login-component/./node_modules/crypto-js/core.js","webpack://login-component/./node_modules/js-cookie/src/js.cookie.js","webpack://login-component/./node_modules/crypto-js/hmac-sha256.js","webpack://login-component/./node_modules/crypto-js/sha256.js","webpack://login-component/./node_modules/crypto-js/enc-base64.js","webpack://login-component/./node_modules/crypto-js/lib-typedarrays.js","webpack://login-component/(webpack)/buildin/global.js","webpack://login-component/./node_modules/base64-js/index.js","webpack://login-component/./node_modules/ieee754/index.js","webpack://login-component/./node_modules/isarray/index.js","webpack://login-component/./node_modules/crypto-js/hmac.js","webpack://login-component/./node_modules/amazon-cognito-identity-js/es/AuthenticationDetails.js","webpack://login-component/./node_modules/amazon-cognito-identity-js/es/BigInteger.js","webpack://login-component/./node_modules/amazon-cognito-identity-js/es/AuthenticationHelper.js","webpack://login-component/./node_modules/amazon-cognito-identity-js/es/CognitoJwtToken.js","webpack://login-component/./node_modules/amazon-cognito-identity-js/es/CognitoAccessToken.js","webpack://login-component/./node_modules/amazon-cognito-identity-js/es/CognitoIdToken.js","webpack://login-component/./node_modules/amazon-cognito-identity-js/es/CognitoRefreshToken.js","webpack://login-component/./node_modules/amazon-cognito-identity-js/es/CognitoUserSession.js","webpack://login-component/./node_modules/amazon-cognito-identity-js/es/DateHelper.js","webpack://login-component/./node_modules/amazon-cognito-identity-js/es/CognitoUserAttribute.js","webpack://login-component/./node_modules/amazon-cognito-identity-js/es/StorageHelper.js","webpack://login-component/./node_modules/amazon-cognito-identity-js/es/CognitoUser.js","webpack://login-component/./node_modules/amazon-cognito-identity-js/es/UserAgent.js","webpack://login-component/./node_modules/amazon-cognito-identity-js/es/Client.js","webpack://login-component/./node_modules/amazon-cognito-identity-js/es/CognitoUserPool.js","webpack://login-component/./node_modules/amazon-cognito-identity-js/es/CookieStorage.js","webpack://login-component/./node_modules/lit-html/lib/directive.js","webpack://login-component/./node_modules/lit-html/lib/dom.js","webpack://login-component/./node_modules/lit-html/lib/part.js","webpack://login-component/./node_modules/lit-html/lib/template.js","webpack://login-component/./node_modules/lit-html/lib/template-instance.js","webpack://login-component/./node_modules/lit-html/lib/template-result.js","webpack://login-component/./node_modules/lit-html/lib/parts.js","webpack://login-component/./node_modules/lit-html/lib/default-template-processor.js","webpack://login-component/./node_modules/lit-html/lib/template-factory.js","webpack://login-component/./node_modules/lit-html/lib/render.js","webpack://login-component/./node_modules/lit-html/lit-html.js","webpack://login-component/./node_modules/lit-html/lib/modify-template.js","webpack://login-component/./node_modules/lit-html/lib/shady-render.js","webpack://login-component/./node_modules/lit-element/lib/updating-element.js","webpack://login-component/./node_modules/lit-element/lib/decorators.js","webpack://login-component/./node_modules/lit-element/lib/css-tag.js","webpack://login-component/./node_modules/lit-element/lit-element.js","webpack://login-component/./src/login-component.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","global","base64","ieee754","isArray","kMaxLength","Buffer","TYPED_ARRAY_SUPPORT","createBuffer","that","length","RangeError","Uint8Array","__proto__","arg","encodingOrOffset","this","Error","allocUnsafe","from","TypeError","ArrayBuffer","array","byteOffset","byteLength","undefined","fromArrayLike","fromArrayBuffer","string","encoding","isEncoding","actual","write","slice","fromString","obj","isBuffer","len","checked","copy","buffer","val","type","data","fromObject","assertSize","size","toString","isView","loweredCase","utf8ToBytes","base64ToBytes","toLowerCase","swap","b","bidirectionalIndexOf","dir","isNaN","arrayIndexOf","indexOf","lastIndexOf","arr","indexSize","arrLength","valLength","String","read","buf","readUInt16BE","foundIndex","found","j","hexWrite","offset","Number","remaining","strLen","parsed","parseInt","substr","utf8Write","blitBuffer","asciiWrite","str","byteArray","push","charCodeAt","asciiToBytes","latin1Write","base64Write","ucs2Write","units","hi","lo","utf16leToBytes","base64Slice","start","end","fromByteArray","utf8Slice","Math","min","res","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","codePoint","bytesPerSequence","codePoints","MAX_ARGUMENTS_LENGTH","fromCharCode","apply","decodeCodePointsArray","SlowBuffer","alloc","INSPECT_MAX_BYTES","foo","subarray","e","typedArraySupport","poolSize","_augment","species","configurable","fill","allocUnsafeSlow","_isBuffer","compare","a","x","y","concat","list","pos","swap16","swap32","swap64","arguments","hexSlice","asciiSlice","latin1Slice","utf16leSlice","equals","inspect","max","match","join","target","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","toJSON","Array","_arr","ret","out","toHex","bytes","checkOffset","ext","checkInt","objectWriteUInt16","littleEndian","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","writeDouble","newBuf","sliceLen","readUIntLE","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","pow","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","writeUIntBE","writeUInt8","floor","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","set","code","INVALID_BASE64_RE","Infinity","leadSurrogate","toByteArray","trim","replace","stringtrim","base64clean","src","dst","CryptoJS","F","subtype","C","C_lib","lib","Base","extend","overrides","mixIn","init","$super","instance","properties","propertyName","clone","WordArray","words","sigBytes","encoder","Hex","stringify","wordArray","thisWords","thatWords","thisSigBytes","thatSigBytes","clamp","thatByte","ceil","random","nBytes","rcache","m_w","m_z","mask","result","_r","C_enc","enc","hexChars","bite","parse","hexStr","hexStrLength","Latin1","latin1Chars","latin1Str","latin1StrLength","Utf8","decodeURIComponent","escape","utf8Str","unescape","encodeURIComponent","BufferedBlockAlgorithm","reset","_data","_nDataBytes","_append","_process","doFlush","dataWords","dataSigBytes","blockSize","blockSizeBytes","nBlocksReady","nWordsReady","_minBufferSize","nBytesReady","_doProcessBlock","processedWords","splice","C_algo","Hasher","cfg","_doReset","update","messageUpdate","finalize","hash","_doFinalize","_createHelper","hasher","message","_createHmacHelper","HMAC","algo","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_RESULT__","OldCookies","Cookies","api","noConflict","attributes","converter","document","path","defaults","expires","Date","setMilliseconds","getMilliseconds","toUTCString","JSON","test","stringifiedAttributes","attributeName","cookie","cookies","split","rdecode","parts","json","charAt","getJSON","remove","withConverter","HmacSHA256","H","K","isPrime","sqrtN","sqrt","factor","getFractionalBits","nPrime","W","SHA256","_hash","M","f","g","h","gamma0x","gamma0","gamma1x","gamma1","maj","sigma0","t1","nBitsTotal","nBitsLeft","Base64","map","_map","base64Chars","triplet","paddingChar","base64Str","base64StrLength","reverseMap","_reverseMap","paddingIndex","bits1","bits2","parseLoop","superInit","typedArray","Int8Array","Uint8ClampedArray","Int16Array","Uint16Array","Int32Array","Uint32Array","Float32Array","Float64Array","typedArrayByteLength","Function","b64","lens","getLens","validLen","placeHoldersLen","tmp","Arr","_byteLength","curByte","revLookup","uint8","extraBytes","len2","encodeChunk","lookup","num","output","isLE","mLen","eLen","eMax","eBias","nBits","NaN","rt","abs","log","LN2","_hasher","hasherBlockSize","hasherBlockSizeBytes","oKey","_oKey","iKey","_iKey","oKeyWords","iKeyWords","innerHash","hmac","dbits","es_AuthenticationDetails","AuthenticationDetails","Constructor","_classCallCheck","_ref","ValidationData","Username","Password","AuthParameters","validationData","authParameters","username","password","getUsername","getPassword","getValidationData","getAuthParameters","BigInteger","BigInteger_BigInteger","nbi","inBrowser","navigator","appName","am","w","xl","xh","v","DB","DM","DV","FV","F1","F2","rr","vv","BI_RM","BI_RC","int2char","intAt","nbv","fromInt","nbits","Montgomery","mp","invDigit","mpl","mph","um","mt2","convert","dlShiftTo","divRemTo","compareTo","ZERO","subTo","revert","copyTo","reduce","u0","drShiftTo","mulTo","multiplyTo","sqrTo","squareTo","k","mi","sh","lShiftTo","bs","cbs","bm","ds","rShiftTo","q","pm","pt","ts","ms","nsh","ys","y0","yt","d1","d2","ONE","qd","addTo","negate","km","bitLength","mod","add","subtract","multiply","divide","modPow","callback","z","k1","g2","is1","r2","AuthenticationHelper_randomBytes","core_default","initN","es_AuthenticationHelper","AuthenticationHelper","PoolName","AuthenticationHelper_classCallCheck","N","hexHash","smallAValue","generateRandomSmallA","getLargeAValue","infoBits","poolName","getSmallAValue","_this","largeAValue","calculateA","err","hexRandom","generateRandomString","getRandomPassword","randomPassword","getSaltDevices","SaltToHashDevices","getVerifierDevices","verifierDevices","generateHashDevice","deviceGroupKey","_this2","combinedString","hashedString","padHex","verifierDevicesNotPadded","_this3","A","calculateU","B","UHexHash","hashHex","sha256_default","computehkdf","ikm","salt","infoBitsWordArray","ikmWordArray","saltWordArray","prk","hmac_sha256_default","getPasswordAuthenticationKey","serverBValue","_this4","UValue","usernamePassword","usernamePasswordHash","xValue","calculateS","sValue","hkdf","_this5","gModPowXN","err2","getNewPasswordRequiredChallengeUserAttributePrefix","bigInt","hashStr","es_CognitoJwtToken","CognitoJwtToken","token","CognitoJwtToken_classCallCheck","jwtToken","payload","decodePayload","getJwtToken","getExpiration","exp","getIssuedAt","iat","es_CognitoAccessToken","_CognitoJwtToken","CognitoAccessToken","AccessToken","CognitoAccessToken_classCallCheck","self","ReferenceError","_possibleConstructorReturn","subClass","superClass","constructor","writable","setPrototypeOf","_inherits","es_CognitoIdToken","CognitoIdToken","IdToken","CognitoIdToken_classCallCheck","CognitoIdToken_possibleConstructorReturn","CognitoIdToken_inherits","es_CognitoRefreshToken","CognitoRefreshToken","RefreshToken","CognitoRefreshToken_classCallCheck","getToken","es_CognitoUserSession","CognitoUserSession","ClockDrift","CognitoUserSession_classCallCheck","idToken","refreshToken","accessToken","clockDrift","calculateClockDrift","getIdToken","getRefreshToken","getAccessToken","getClockDrift","isValid","adjusted","monthNames","weekNames","es_DateHelper","DateHelper","DateHelper_classCallCheck","getNowString","now","weekDay","getUTCDay","month","getUTCMonth","day","getUTCDate","hours","getUTCHours","minutes","getUTCMinutes","seconds","getUTCSeconds","getUTCFullYear","es_CognitoUserAttribute","CognitoUserAttribute","Name","Value","CognitoUserAttribute_classCallCheck","getValue","setValue","getName","setName","StorageHelper_classCallCheck","dataMemory","MemoryStorage","setItem","getItem","removeItem","clear","es_StorageHelper","StorageHelper","storageWindow","localStorage","exception","getStorage","es_CognitoUser","CognitoUser","CognitoUser_classCallCheck","Pool","pool","Session","client","signInUserSession","authenticationFlowType","storage","Storage","keyPrefix","getClientId","userDataKey","setSignInUserSession","clearCachedUserData","cacheTokens","getSignInUserSession","getAuthenticationFlowType","setAuthenticationFlowType","initiateAuth","authDetails","USERNAME","jsonReq","AuthFlow","ClientId","ClientMetadata","getUserContextData","UserContextData","request","onFailure","challengeName","ChallengeName","challengeParameters","ChallengeParameters","customChallenge","getCognitoUserSession","AuthenticationResult","onSuccess","authenticateUser","authenticateUserPlainUsernamePassword","authenticateUserDefaultAuth","authenticationHelper","getUserPoolId","dateHelper","deviceKey","DEVICE_KEY","errOnAValue","aValue","SRP_A","CHALLENGE_NAME","USER_ID_FOR_SRP","SRP_B","SALT","getCachedDeviceKeyAndPassword","errOnHkdf","dateNow","SECRET_BLOCK","signatureString","enc_base64_default","challengeResponses","PASSWORD_CLAIM_SECRET_BLOCK","TIMESTAMP","PASSWORD_CLAIM_SIGNATURE","jsonReqResp","ChallengeResponses","respondToAuthChallenge","challenge","challengeCallback","errChallenge","dataChallenge","clearCachedDeviceKeyAndPassword","errAuthenticate","dataAuthenticate","authenticateUserInternal","PASSWORD","authResult","mfaRequired","selectMFAType","mfaSetup","totpRequired","userAttributes","rawRequiredAttributes","requiredAttributes","userAttributesPrefix","newPasswordRequired","newDeviceMetadata","NewDeviceMetadata","DeviceGroupKey","DeviceKey","errGenHash","deviceSecretVerifierConfig","Salt","PasswordVerifier","DeviceSecretVerifierConfig","DeviceName","userAgent","errConfirm","dataConfirm","cacheDeviceKeyAndPassword","UserConfirmationNecessary","getDeviceResponse","completeNewPasswordChallenge","newPassword","requiredAttributeData","finalUserAttributes","keys","forEach","NEW_PASSWORD","_this6","errAValue","errHkdf","confirmRegistration","confirmationCode","forceAliasCreation","ConfirmationCode","ForceAliasCreation","sendCustomChallengeAnswer","answerChallenge","_this7","ANSWER","sendMFACode","mfaType","_this8","SMS_MFA_CODE","mfaTypeSelection","SOFTWARE_TOKEN_MFA_CODE","changePassword","oldUserPassword","newUserPassword","PreviousPassword","ProposedPassword","enableMFA","mfaOptions","DeliveryMedium","AttributeName","MFAOptions","setUserMfaPreference","smsMfaSettings","softwareTokenMfaSettings","SMSMfaSettings","SoftwareTokenMfaSettings","disableMFA","deleteUser","_this9","clearCachedUser","updateAttributes","UserAttributes","getUserAttributes","userData","attributeList","attribute","userAttribute","getMFAOptions","getUserData","params","_this10","bypassCache","cacheUserData","deleteAttributes","UserAttributeNames","resendConfirmationCode","getSession","idTokenKey","accessTokenKey","refreshTokenKey","clockDriftKey","cachedSession","refreshSession","_this11","REFRESH_TOKEN","lastUserKey","deviceKeyKey","authenticationResult","clearCachedTokens","randomPasswordKey","deviceGroupKeyKey","forgotPassword","inputVerificationCode","confirmPassword","getAttributeVerificationCode","verifyAttribute","Code","getDevice","forgetSpecificDevice","forgetDevice","_this12","setDeviceStatusRemembered","DeviceRememberedStatus","setDeviceStatusNotRemembered","listDevices","paginationToken","Limit","PaginationToken","globalSignOut","_this13","signOut","sendMFASelectionAnswer","_this14","associateSoftwareToken","_this15","associateSecretCode","SecretCode","verifySoftwareToken","totpCode","friendlyDeviceName","_this16","UserCode","FriendlyDeviceName","errRespond","dataRespond","UserAgent","UserAgent_UserAgent","es_Client","Client","region","endpoint","Client_classCallCheck","operation","options","headers","Content-Type","X-Amz-Target","X-Amz-User-Agent","method","cache","body","response","fetch","then","resp","catch","ok","__type","pop","error","Message","_error","statusCode","status","ex","es_CognitoUserPool","CognitoUserPool","CognitoUserPool_classCallCheck","UserPoolId","AdvancedSecurityDataCollectionFlag","userPoolId","clientId","advancedSecurityDataCollectionFlag","signUp","cognitoUser","returnData","user","userConfirmed","UserConfirmed","userSub","UserSub","getCurrentUser","lastAuthUser","AmazonCognitoAdvancedSecurityData","amazonCognitoAdvancedSecurityDataConst","advancedSecurityData","getData","EncodedData","CookieStorage","CookieStorage_classCallCheck","domain","secure","js_cookie","index","directives","WeakMap","isDirective","has","isCEPolyfill","customElements","polyfillWrapFlushCallback","removeNodes","container","startNode","endNode","node","nextSibling","removeChild","noChange","nothing","marker","nodeMarker","markerRegex","RegExp","boundAttributeSuffix","Template","[object Object]","element","partIndex","nodesToRemove","_prepareTemplate","template","content","walker","createTreeWalker","lastPartIndex","nextNode","currentNode","nodeType","hasAttributes","count","stringForPart","strings","lastAttributeNameRegex","exec","attributeLookupName","getAttribute","removeAttribute","tagName","parent","parentNode","lastIndex","insertBefore","createMarker","createTextNode","previousSibling","isTemplatePartActive","part","createComment","template_instance_TemplateInstance","processor","_parts","values","commit","fragment","cloneNode","importNode","nodeIndex","_prepareInstance","handleTextExpression","insertAfterNode","handleAttributeExpressions","nodeName","adoptNode","upgrade","template_result_TemplateResult","endIndex","html","createElement","innerHTML","getHTML","isPrimitive","AttributeCommitter","dirty","_createPart","parts_AttributePart","text","iterator","setAttribute","_getValue","comitter","committer","directive","parts_NodePart","_pendingValue","appendChild","ref","_insert","_commitText","_commitTemplateResult","Node","_commitNode","_commitIterable","templateFactory","_clone","itemParts","itemPart","item","appendIntoPart","insertAfterPart","parts_BooleanAttributePart","PropertyCommitter","super","single","PropertyPart","eventOptionsSupported","capture","addEventListener","removeEventListener","_e","parts_EventPart","eventName","eventContext","_boundHandleEvent","handleEvent","newListener","oldListener","shouldRemoveListener","once","passive","shouldAddListener","_options","getOptions","event","defaultTemplateProcessor","prefix","templateCache","templateCaches","stringsArray","keyString","Map","getTemplateElement","render_parts","lit_html_html","walkerNodeFilter","removeNodesFromTemplate","nextActiveIndexInTemplateParts","removeCount","nodesToRemoveInTemplate","currentRemovingNode","countNodes","startIndex","getTemplateCacheKey","scopeName","compatibleShadyCSSVersion","ShadyCSS","prepareTemplateDom","console","warn","shadyTemplateFactory","cacheKey","TEMPLATE_TYPES","shadyRenderSet","Set","prepareTemplateStyles","renderedDOM","styles","querySelectorAll","condensedStyle","style","textContent","templates","removeStylesFromLitTemplates","refNode","insertCount","walkerIndex","insertNodeIntoTemplate","firstChild","nativeShadow","querySelector","removes","JSCompiler_renameProperty","prop","_obj","defaultConverter","Boolean","notEqual","old","defaultPropertyDeclaration","reflect","hasChanged","microtaskPromise","Promise","resolve","STATE_HAS_UPDATED","STATE_UPDATE_REQUESTED","STATE_IS_REFLECTING_TO_ATTRIBUTE","STATE_IS_REFLECTING_TO_PROPERTY","STATE_HAS_CONNECTED","UpdatingElement","HTMLElement","_updateState","_instanceProperties","_updatePromise","_hasConnectedResolver","_changedProperties","_reflectingProperties","initialize","observedAttributes","_classProperties","attr","_attributeNameForProperty","_attributeToPropertyMap","superProperties","getPrototypeOf","_ensureClassProperties","noAccessor","oldValue","_requestUpdate","finalized","superCtor","props","propKeys","getOwnPropertyNames","getOwnPropertySymbols","createProperty","fromAttribute","toAttribute","_saveInstanceProperties","_v","_attributeToProperty","ctor","attrValue","_propertyValueToAttribute","propName","_propertyValueFromAttribute","shouldRequestUpdate","_valueHasChanged","_hasRequestedUpdate","_enqueueUpdate","updateComplete","reject","previousUpdatePromise","rej","_hasConnected","performUpdate","hasUpdated","_applyInstanceProperties","shouldUpdate","changedProperties","_markUpdated","firstUpdated","updated","_propertyToAttribute","supportsAdoptingStyleSheets","Document","CSSStyleSheet","constructionToken","CSSResult","cssText","safeToken","styleSheet","_styleSheet","replaceSync","css","acc","idx","textFromCSSResult","flattenStyles","flat","arrayFlat","lit_element_LitElement","_styles","_getUniqueStyles","userStyles","reduceRight","unshift","renderRoot","createRenderRoot","ShadowRoot","adoptStyles","attachShadow","adoptedStyleSheets","_needsShimAdoptedStyleSheets","ScopingShim","prepareAdoptedCssText","localName","connectedCallback","styleElement","templateResult","render","hasRendered","needsScoping","firstScopeRender","renderContainer","createDocumentFragment","assign","appendInto","delete","host","redirectUrl","errorMessage","handleUsername","handlePassword","clickHandler","oldval","newval","attributeChangedCallback","poolData","userPool","authenicationData","authenicationDetails","location","href"],"mappings":"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","file":"login_component.bundle.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"login-component\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"login-component\"] = factory();\n\telse\n\t\troot[\"login-component\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 12);\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory();\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\troot.CryptoJS = factory();\n\t}\n}(this, function () {\n\n\t/**\n\t * CryptoJS core components.\n\t */\n\tvar CryptoJS = CryptoJS || (function (Math, undefined) {\n\t    /*\n\t     * Local polyfil of Object.create\n\t     */\n\t    var create = Object.create || (function () {\n\t        function F() {};\n\n\t        return function (obj) {\n\t            var subtype;\n\n\t            F.prototype = obj;\n\n\t            subtype = new F();\n\n\t            F.prototype = null;\n\n\t            return subtype;\n\t        };\n\t    }())\n\n\t    /**\n\t     * CryptoJS namespace.\n\t     */\n\t    var C = {};\n\n\t    /**\n\t     * Library namespace.\n\t     */\n\t    var C_lib = C.lib = {};\n\n\t    /**\n\t     * Base object for prototypal inheritance.\n\t     */\n\t    var Base = C_lib.Base = (function () {\n\n\n\t        return {\n\t            /**\n\t             * Creates a new object that inherits from this object.\n\t             *\n\t             * @param {Object} overrides Properties to copy into the new object.\n\t             *\n\t             * @return {Object} The new object.\n\t             *\n\t             * @static\n\t             *\n\t             * @example\n\t             *\n\t             *     var MyType = CryptoJS.lib.Base.extend({\n\t             *         field: 'value',\n\t             *\n\t             *         method: function () {\n\t             *         }\n\t             *     });\n\t             */\n\t            extend: function (overrides) {\n\t                // Spawn\n\t                var subtype = create(this);\n\n\t                // Augment\n\t                if (overrides) {\n\t                    subtype.mixIn(overrides);\n\t                }\n\n\t                // Create default initializer\n\t                if (!subtype.hasOwnProperty('init') || this.init === subtype.init) {\n\t                    subtype.init = function () {\n\t                        subtype.$super.init.apply(this, arguments);\n\t                    };\n\t                }\n\n\t                // Initializer's prototype is the subtype object\n\t                subtype.init.prototype = subtype;\n\n\t                // Reference supertype\n\t                subtype.$super = this;\n\n\t                return subtype;\n\t            },\n\n\t            /**\n\t             * Extends this object and runs the init method.\n\t             * Arguments to create() will be passed to init().\n\t             *\n\t             * @return {Object} The new object.\n\t             *\n\t             * @static\n\t             *\n\t             * @example\n\t             *\n\t             *     var instance = MyType.create();\n\t             */\n\t            create: function () {\n\t                var instance = this.extend();\n\t                instance.init.apply(instance, arguments);\n\n\t                return instance;\n\t            },\n\n\t            /**\n\t             * Initializes a newly created object.\n\t             * Override this method to add some logic when your objects are created.\n\t             *\n\t             * @example\n\t             *\n\t             *     var MyType = CryptoJS.lib.Base.extend({\n\t             *         init: function () {\n\t             *             // ...\n\t             *         }\n\t             *     });\n\t             */\n\t            init: function () {\n\t            },\n\n\t            /**\n\t             * Copies properties into this object.\n\t             *\n\t             * @param {Object} properties The properties to mix in.\n\t             *\n\t             * @example\n\t             *\n\t             *     MyType.mixIn({\n\t             *         field: 'value'\n\t             *     });\n\t             */\n\t            mixIn: function (properties) {\n\t                for (var propertyName in properties) {\n\t                    if (properties.hasOwnProperty(propertyName)) {\n\t                        this[propertyName] = properties[propertyName];\n\t                    }\n\t                }\n\n\t                // IE won't copy toString using the loop above\n\t                if (properties.hasOwnProperty('toString')) {\n\t                    this.toString = properties.toString;\n\t                }\n\t            },\n\n\t            /**\n\t             * Creates a copy of this object.\n\t             *\n\t             * @return {Object} The clone.\n\t             *\n\t             * @example\n\t             *\n\t             *     var clone = instance.clone();\n\t             */\n\t            clone: function () {\n\t                return this.init.prototype.extend(this);\n\t            }\n\t        };\n\t    }());\n\n\t    /**\n\t     * An array of 32-bit words.\n\t     *\n\t     * @property {Array} words The array of 32-bit words.\n\t     * @property {number} sigBytes The number of significant bytes in this word array.\n\t     */\n\t    var WordArray = C_lib.WordArray = Base.extend({\n\t        /**\n\t         * Initializes a newly created word array.\n\t         *\n\t         * @param {Array} words (Optional) An array of 32-bit words.\n\t         * @param {number} sigBytes (Optional) The number of significant bytes in the words.\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.lib.WordArray.create();\n\t         *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607]);\n\t         *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607], 6);\n\t         */\n\t        init: function (words, sigBytes) {\n\t            words = this.words = words || [];\n\n\t            if (sigBytes != undefined) {\n\t                this.sigBytes = sigBytes;\n\t            } else {\n\t                this.sigBytes = words.length * 4;\n\t            }\n\t        },\n\n\t        /**\n\t         * Converts this word array to a string.\n\t         *\n\t         * @param {Encoder} encoder (Optional) The encoding strategy to use. Default: CryptoJS.enc.Hex\n\t         *\n\t         * @return {string} The stringified word array.\n\t         *\n\t         * @example\n\t         *\n\t         *     var string = wordArray + '';\n\t         *     var string = wordArray.toString();\n\t         *     var string = wordArray.toString(CryptoJS.enc.Utf8);\n\t         */\n\t        toString: function (encoder) {\n\t            return (encoder || Hex).stringify(this);\n\t        },\n\n\t        /**\n\t         * Concatenates a word array to this word array.\n\t         *\n\t         * @param {WordArray} wordArray The word array to append.\n\t         *\n\t         * @return {WordArray} This word array.\n\t         *\n\t         * @example\n\t         *\n\t         *     wordArray1.concat(wordArray2);\n\t         */\n\t        concat: function (wordArray) {\n\t            // Shortcuts\n\t            var thisWords = this.words;\n\t            var thatWords = wordArray.words;\n\t            var thisSigBytes = this.sigBytes;\n\t            var thatSigBytes = wordArray.sigBytes;\n\n\t            // Clamp excess bits\n\t            this.clamp();\n\n\t            // Concat\n\t            if (thisSigBytes % 4) {\n\t                // Copy one byte at a time\n\t                for (var i = 0; i < thatSigBytes; i++) {\n\t                    var thatByte = (thatWords[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n\t                    thisWords[(thisSigBytes + i) >>> 2] |= thatByte << (24 - ((thisSigBytes + i) % 4) * 8);\n\t                }\n\t            } else {\n\t                // Copy one word at a time\n\t                for (var i = 0; i < thatSigBytes; i += 4) {\n\t                    thisWords[(thisSigBytes + i) >>> 2] = thatWords[i >>> 2];\n\t                }\n\t            }\n\t            this.sigBytes += thatSigBytes;\n\n\t            // Chainable\n\t            return this;\n\t        },\n\n\t        /**\n\t         * Removes insignificant bits.\n\t         *\n\t         * @example\n\t         *\n\t         *     wordArray.clamp();\n\t         */\n\t        clamp: function () {\n\t            // Shortcuts\n\t            var words = this.words;\n\t            var sigBytes = this.sigBytes;\n\n\t            // Clamp\n\t            words[sigBytes >>> 2] &= 0xffffffff << (32 - (sigBytes % 4) * 8);\n\t            words.length = Math.ceil(sigBytes / 4);\n\t        },\n\n\t        /**\n\t         * Creates a copy of this word array.\n\t         *\n\t         * @return {WordArray} The clone.\n\t         *\n\t         * @example\n\t         *\n\t         *     var clone = wordArray.clone();\n\t         */\n\t        clone: function () {\n\t            var clone = Base.clone.call(this);\n\t            clone.words = this.words.slice(0);\n\n\t            return clone;\n\t        },\n\n\t        /**\n\t         * Creates a word array filled with random bytes.\n\t         *\n\t         * @param {number} nBytes The number of random bytes to generate.\n\t         *\n\t         * @return {WordArray} The random word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.lib.WordArray.random(16);\n\t         */\n\t        random: function (nBytes) {\n\t            var words = [];\n\n\t            var r = (function (m_w) {\n\t                var m_w = m_w;\n\t                var m_z = 0x3ade68b1;\n\t                var mask = 0xffffffff;\n\n\t                return function () {\n\t                    m_z = (0x9069 * (m_z & 0xFFFF) + (m_z >> 0x10)) & mask;\n\t                    m_w = (0x4650 * (m_w & 0xFFFF) + (m_w >> 0x10)) & mask;\n\t                    var result = ((m_z << 0x10) + m_w) & mask;\n\t                    result /= 0x100000000;\n\t                    result += 0.5;\n\t                    return result * (Math.random() > .5 ? 1 : -1);\n\t                }\n\t            });\n\n\t            for (var i = 0, rcache; i < nBytes; i += 4) {\n\t                var _r = r((rcache || Math.random()) * 0x100000000);\n\n\t                rcache = _r() * 0x3ade67b7;\n\t                words.push((_r() * 0x100000000) | 0);\n\t            }\n\n\t            return new WordArray.init(words, nBytes);\n\t        }\n\t    });\n\n\t    /**\n\t     * Encoder namespace.\n\t     */\n\t    var C_enc = C.enc = {};\n\n\t    /**\n\t     * Hex encoding strategy.\n\t     */\n\t    var Hex = C_enc.Hex = {\n\t        /**\n\t         * Converts a word array to a hex string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The hex string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var hexString = CryptoJS.enc.Hex.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            // Shortcuts\n\t            var words = wordArray.words;\n\t            var sigBytes = wordArray.sigBytes;\n\n\t            // Convert\n\t            var hexChars = [];\n\t            for (var i = 0; i < sigBytes; i++) {\n\t                var bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n\t                hexChars.push((bite >>> 4).toString(16));\n\t                hexChars.push((bite & 0x0f).toString(16));\n\t            }\n\n\t            return hexChars.join('');\n\t        },\n\n\t        /**\n\t         * Converts a hex string to a word array.\n\t         *\n\t         * @param {string} hexStr The hex string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Hex.parse(hexString);\n\t         */\n\t        parse: function (hexStr) {\n\t            // Shortcut\n\t            var hexStrLength = hexStr.length;\n\n\t            // Convert\n\t            var words = [];\n\t            for (var i = 0; i < hexStrLength; i += 2) {\n\t                words[i >>> 3] |= parseInt(hexStr.substr(i, 2), 16) << (24 - (i % 8) * 4);\n\t            }\n\n\t            return new WordArray.init(words, hexStrLength / 2);\n\t        }\n\t    };\n\n\t    /**\n\t     * Latin1 encoding strategy.\n\t     */\n\t    var Latin1 = C_enc.Latin1 = {\n\t        /**\n\t         * Converts a word array to a Latin1 string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The Latin1 string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var latin1String = CryptoJS.enc.Latin1.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            // Shortcuts\n\t            var words = wordArray.words;\n\t            var sigBytes = wordArray.sigBytes;\n\n\t            // Convert\n\t            var latin1Chars = [];\n\t            for (var i = 0; i < sigBytes; i++) {\n\t                var bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n\t                latin1Chars.push(String.fromCharCode(bite));\n\t            }\n\n\t            return latin1Chars.join('');\n\t        },\n\n\t        /**\n\t         * Converts a Latin1 string to a word array.\n\t         *\n\t         * @param {string} latin1Str The Latin1 string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Latin1.parse(latin1String);\n\t         */\n\t        parse: function (latin1Str) {\n\t            // Shortcut\n\t            var latin1StrLength = latin1Str.length;\n\n\t            // Convert\n\t            var words = [];\n\t            for (var i = 0; i < latin1StrLength; i++) {\n\t                words[i >>> 2] |= (latin1Str.charCodeAt(i) & 0xff) << (24 - (i % 4) * 8);\n\t            }\n\n\t            return new WordArray.init(words, latin1StrLength);\n\t        }\n\t    };\n\n\t    /**\n\t     * UTF-8 encoding strategy.\n\t     */\n\t    var Utf8 = C_enc.Utf8 = {\n\t        /**\n\t         * Converts a word array to a UTF-8 string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The UTF-8 string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var utf8String = CryptoJS.enc.Utf8.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            try {\n\t                return decodeURIComponent(escape(Latin1.stringify(wordArray)));\n\t            } catch (e) {\n\t                throw new Error('Malformed UTF-8 data');\n\t            }\n\t        },\n\n\t        /**\n\t         * Converts a UTF-8 string to a word array.\n\t         *\n\t         * @param {string} utf8Str The UTF-8 string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Utf8.parse(utf8String);\n\t         */\n\t        parse: function (utf8Str) {\n\t            return Latin1.parse(unescape(encodeURIComponent(utf8Str)));\n\t        }\n\t    };\n\n\t    /**\n\t     * Abstract buffered block algorithm template.\n\t     *\n\t     * The property blockSize must be implemented in a concrete subtype.\n\t     *\n\t     * @property {number} _minBufferSize The number of blocks that should be kept unprocessed in the buffer. Default: 0\n\t     */\n\t    var BufferedBlockAlgorithm = C_lib.BufferedBlockAlgorithm = Base.extend({\n\t        /**\n\t         * Resets this block algorithm's data buffer to its initial state.\n\t         *\n\t         * @example\n\t         *\n\t         *     bufferedBlockAlgorithm.reset();\n\t         */\n\t        reset: function () {\n\t            // Initial values\n\t            this._data = new WordArray.init();\n\t            this._nDataBytes = 0;\n\t        },\n\n\t        /**\n\t         * Adds new data to this block algorithm's buffer.\n\t         *\n\t         * @param {WordArray|string} data The data to append. Strings are converted to a WordArray using UTF-8.\n\t         *\n\t         * @example\n\t         *\n\t         *     bufferedBlockAlgorithm._append('data');\n\t         *     bufferedBlockAlgorithm._append(wordArray);\n\t         */\n\t        _append: function (data) {\n\t            // Convert string to WordArray, else assume WordArray already\n\t            if (typeof data == 'string') {\n\t                data = Utf8.parse(data);\n\t            }\n\n\t            // Append\n\t            this._data.concat(data);\n\t            this._nDataBytes += data.sigBytes;\n\t        },\n\n\t        /**\n\t         * Processes available data blocks.\n\t         *\n\t         * This method invokes _doProcessBlock(offset), which must be implemented by a concrete subtype.\n\t         *\n\t         * @param {boolean} doFlush Whether all blocks and partial blocks should be processed.\n\t         *\n\t         * @return {WordArray} The processed data.\n\t         *\n\t         * @example\n\t         *\n\t         *     var processedData = bufferedBlockAlgorithm._process();\n\t         *     var processedData = bufferedBlockAlgorithm._process(!!'flush');\n\t         */\n\t        _process: function (doFlush) {\n\t            // Shortcuts\n\t            var data = this._data;\n\t            var dataWords = data.words;\n\t            var dataSigBytes = data.sigBytes;\n\t            var blockSize = this.blockSize;\n\t            var blockSizeBytes = blockSize * 4;\n\n\t            // Count blocks ready\n\t            var nBlocksReady = dataSigBytes / blockSizeBytes;\n\t            if (doFlush) {\n\t                // Round up to include partial blocks\n\t                nBlocksReady = Math.ceil(nBlocksReady);\n\t            } else {\n\t                // Round down to include only full blocks,\n\t                // less the number of blocks that must remain in the buffer\n\t                nBlocksReady = Math.max((nBlocksReady | 0) - this._minBufferSize, 0);\n\t            }\n\n\t            // Count words ready\n\t            var nWordsReady = nBlocksReady * blockSize;\n\n\t            // Count bytes ready\n\t            var nBytesReady = Math.min(nWordsReady * 4, dataSigBytes);\n\n\t            // Process blocks\n\t            if (nWordsReady) {\n\t                for (var offset = 0; offset < nWordsReady; offset += blockSize) {\n\t                    // Perform concrete-algorithm logic\n\t                    this._doProcessBlock(dataWords, offset);\n\t                }\n\n\t                // Remove processed words\n\t                var processedWords = dataWords.splice(0, nWordsReady);\n\t                data.sigBytes -= nBytesReady;\n\t            }\n\n\t            // Return processed words\n\t            return new WordArray.init(processedWords, nBytesReady);\n\t        },\n\n\t        /**\n\t         * Creates a copy of this object.\n\t         *\n\t         * @return {Object} The clone.\n\t         *\n\t         * @example\n\t         *\n\t         *     var clone = bufferedBlockAlgorithm.clone();\n\t         */\n\t        clone: function () {\n\t            var clone = Base.clone.call(this);\n\t            clone._data = this._data.clone();\n\n\t            return clone;\n\t        },\n\n\t        _minBufferSize: 0\n\t    });\n\n\t    /**\n\t     * Abstract hasher template.\n\t     *\n\t     * @property {number} blockSize The number of 32-bit words this hasher operates on. Default: 16 (512 bits)\n\t     */\n\t    var Hasher = C_lib.Hasher = BufferedBlockAlgorithm.extend({\n\t        /**\n\t         * Configuration options.\n\t         */\n\t        cfg: Base.extend(),\n\n\t        /**\n\t         * Initializes a newly created hasher.\n\t         *\n\t         * @param {Object} cfg (Optional) The configuration options to use for this hash computation.\n\t         *\n\t         * @example\n\t         *\n\t         *     var hasher = CryptoJS.algo.SHA256.create();\n\t         */\n\t        init: function (cfg) {\n\t            // Apply config defaults\n\t            this.cfg = this.cfg.extend(cfg);\n\n\t            // Set initial values\n\t            this.reset();\n\t        },\n\n\t        /**\n\t         * Resets this hasher to its initial state.\n\t         *\n\t         * @example\n\t         *\n\t         *     hasher.reset();\n\t         */\n\t        reset: function () {\n\t            // Reset data buffer\n\t            BufferedBlockAlgorithm.reset.call(this);\n\n\t            // Perform concrete-hasher logic\n\t            this._doReset();\n\t        },\n\n\t        /**\n\t         * Updates this hasher with a message.\n\t         *\n\t         * @param {WordArray|string} messageUpdate The message to append.\n\t         *\n\t         * @return {Hasher} This hasher.\n\t         *\n\t         * @example\n\t         *\n\t         *     hasher.update('message');\n\t         *     hasher.update(wordArray);\n\t         */\n\t        update: function (messageUpdate) {\n\t            // Append\n\t            this._append(messageUpdate);\n\n\t            // Update the hash\n\t            this._process();\n\n\t            // Chainable\n\t            return this;\n\t        },\n\n\t        /**\n\t         * Finalizes the hash computation.\n\t         * Note that the finalize operation is effectively a destructive, read-once operation.\n\t         *\n\t         * @param {WordArray|string} messageUpdate (Optional) A final message update.\n\t         *\n\t         * @return {WordArray} The hash.\n\t         *\n\t         * @example\n\t         *\n\t         *     var hash = hasher.finalize();\n\t         *     var hash = hasher.finalize('message');\n\t         *     var hash = hasher.finalize(wordArray);\n\t         */\n\t        finalize: function (messageUpdate) {\n\t            // Final message update\n\t            if (messageUpdate) {\n\t                this._append(messageUpdate);\n\t            }\n\n\t            // Perform concrete-hasher logic\n\t            var hash = this._doFinalize();\n\n\t            return hash;\n\t        },\n\n\t        blockSize: 512/32,\n\n\t        /**\n\t         * Creates a shortcut function to a hasher's object interface.\n\t         *\n\t         * @param {Hasher} hasher The hasher to create a helper for.\n\t         *\n\t         * @return {Function} The shortcut function.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var SHA256 = CryptoJS.lib.Hasher._createHelper(CryptoJS.algo.SHA256);\n\t         */\n\t        _createHelper: function (hasher) {\n\t            return function (message, cfg) {\n\t                return new hasher.init(cfg).finalize(message);\n\t            };\n\t        },\n\n\t        /**\n\t         * Creates a shortcut function to the HMAC's object interface.\n\t         *\n\t         * @param {Hasher} hasher The hasher to use in this HMAC helper.\n\t         *\n\t         * @return {Function} The shortcut function.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var HmacSHA256 = CryptoJS.lib.Hasher._createHmacHelper(CryptoJS.algo.SHA256);\n\t         */\n\t        _createHmacHelper: function (hasher) {\n\t            return function (message, key) {\n\t                return new C_algo.HMAC.init(hasher, key).finalize(message);\n\t            };\n\t        }\n\t    });\n\n\t    /**\n\t     * Algorithm namespace.\n\t     */\n\t    var C_algo = C.algo = {};\n\n\t    return C;\n\t}(Math));\n\n\n\treturn CryptoJS;\n\n}));","/*!\n * JavaScript Cookie v2.2.0\n * https://github.com/js-cookie/js-cookie\n *\n * Copyright 2006, 2015 Klaus Hartl & Fagner Brack\n * Released under the MIT license\n */\n;(function (factory) {\n\tvar registeredInModuleLoader = false;\n\tif (typeof define === 'function' && define.amd) {\n\t\tdefine(factory);\n\t\tregisteredInModuleLoader = true;\n\t}\n\tif (typeof exports === 'object') {\n\t\tmodule.exports = factory();\n\t\tregisteredInModuleLoader = true;\n\t}\n\tif (!registeredInModuleLoader) {\n\t\tvar OldCookies = window.Cookies;\n\t\tvar api = window.Cookies = factory();\n\t\tapi.noConflict = function () {\n\t\t\twindow.Cookies = OldCookies;\n\t\t\treturn api;\n\t\t};\n\t}\n}(function () {\n\tfunction extend () {\n\t\tvar i = 0;\n\t\tvar result = {};\n\t\tfor (; i < arguments.length; i++) {\n\t\t\tvar attributes = arguments[ i ];\n\t\t\tfor (var key in attributes) {\n\t\t\t\tresult[key] = attributes[key];\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\tfunction init (converter) {\n\t\tfunction api (key, value, attributes) {\n\t\t\tvar result;\n\t\t\tif (typeof document === 'undefined') {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Write\n\n\t\t\tif (arguments.length > 1) {\n\t\t\t\tattributes = extend({\n\t\t\t\t\tpath: '/'\n\t\t\t\t}, api.defaults, attributes);\n\n\t\t\t\tif (typeof attributes.expires === 'number') {\n\t\t\t\t\tvar expires = new Date();\n\t\t\t\t\texpires.setMilliseconds(expires.getMilliseconds() + attributes.expires * 864e+5);\n\t\t\t\t\tattributes.expires = expires;\n\t\t\t\t}\n\n\t\t\t\t// We're using \"expires\" because \"max-age\" is not supported by IE\n\t\t\t\tattributes.expires = attributes.expires ? attributes.expires.toUTCString() : '';\n\n\t\t\t\ttry {\n\t\t\t\t\tresult = JSON.stringify(value);\n\t\t\t\t\tif (/^[\\{\\[]/.test(result)) {\n\t\t\t\t\t\tvalue = result;\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {}\n\n\t\t\t\tif (!converter.write) {\n\t\t\t\t\tvalue = encodeURIComponent(String(value))\n\t\t\t\t\t\t.replace(/%(23|24|26|2B|3A|3C|3E|3D|2F|3F|40|5B|5D|5E|60|7B|7D|7C)/g, decodeURIComponent);\n\t\t\t\t} else {\n\t\t\t\t\tvalue = converter.write(value, key);\n\t\t\t\t}\n\n\t\t\t\tkey = encodeURIComponent(String(key));\n\t\t\t\tkey = key.replace(/%(23|24|26|2B|5E|60|7C)/g, decodeURIComponent);\n\t\t\t\tkey = key.replace(/[\\(\\)]/g, escape);\n\n\t\t\t\tvar stringifiedAttributes = '';\n\n\t\t\t\tfor (var attributeName in attributes) {\n\t\t\t\t\tif (!attributes[attributeName]) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tstringifiedAttributes += '; ' + attributeName;\n\t\t\t\t\tif (attributes[attributeName] === true) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tstringifiedAttributes += '=' + attributes[attributeName];\n\t\t\t\t}\n\t\t\t\treturn (document.cookie = key + '=' + value + stringifiedAttributes);\n\t\t\t}\n\n\t\t\t// Read\n\n\t\t\tif (!key) {\n\t\t\t\tresult = {};\n\t\t\t}\n\n\t\t\t// To prevent the for loop in the first place assign an empty array\n\t\t\t// in case there are no cookies at all. Also prevents odd result when\n\t\t\t// calling \"get()\"\n\t\t\tvar cookies = document.cookie ? document.cookie.split('; ') : [];\n\t\t\tvar rdecode = /(%[0-9A-Z]{2})+/g;\n\t\t\tvar i = 0;\n\n\t\t\tfor (; i < cookies.length; i++) {\n\t\t\t\tvar parts = cookies[i].split('=');\n\t\t\t\tvar cookie = parts.slice(1).join('=');\n\n\t\t\t\tif (!this.json && cookie.charAt(0) === '\"') {\n\t\t\t\t\tcookie = cookie.slice(1, -1);\n\t\t\t\t}\n\n\t\t\t\ttry {\n\t\t\t\t\tvar name = parts[0].replace(rdecode, decodeURIComponent);\n\t\t\t\t\tcookie = converter.read ?\n\t\t\t\t\t\tconverter.read(cookie, name) : converter(cookie, name) ||\n\t\t\t\t\t\tcookie.replace(rdecode, decodeURIComponent);\n\n\t\t\t\t\tif (this.json) {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tcookie = JSON.parse(cookie);\n\t\t\t\t\t\t} catch (e) {}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (key === name) {\n\t\t\t\t\t\tresult = cookie;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!key) {\n\t\t\t\t\t\tresult[name] = cookie;\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {}\n\t\t\t}\n\n\t\t\treturn result;\n\t\t}\n\n\t\tapi.set = api;\n\t\tapi.get = function (key) {\n\t\t\treturn api.call(api, key);\n\t\t};\n\t\tapi.getJSON = function () {\n\t\t\treturn api.apply({\n\t\t\t\tjson: true\n\t\t\t}, [].slice.call(arguments));\n\t\t};\n\t\tapi.defaults = {};\n\n\t\tapi.remove = function (key, attributes) {\n\t\t\tapi(key, '', extend(attributes, {\n\t\t\t\texpires: -1\n\t\t\t}));\n\t\t};\n\n\t\tapi.withConverter = init;\n\n\t\treturn api;\n\t}\n\n\treturn init(function () {});\n}));\n",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./sha256\"), require(\"./hmac\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./sha256\", \"./hmac\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\treturn CryptoJS.HmacSHA256;\n\n}));",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function (Math) {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var Hasher = C_lib.Hasher;\n\t    var C_algo = C.algo;\n\n\t    // Initialization and round constants tables\n\t    var H = [];\n\t    var K = [];\n\n\t    // Compute constants\n\t    (function () {\n\t        function isPrime(n) {\n\t            var sqrtN = Math.sqrt(n);\n\t            for (var factor = 2; factor <= sqrtN; factor++) {\n\t                if (!(n % factor)) {\n\t                    return false;\n\t                }\n\t            }\n\n\t            return true;\n\t        }\n\n\t        function getFractionalBits(n) {\n\t            return ((n - (n | 0)) * 0x100000000) | 0;\n\t        }\n\n\t        var n = 2;\n\t        var nPrime = 0;\n\t        while (nPrime < 64) {\n\t            if (isPrime(n)) {\n\t                if (nPrime < 8) {\n\t                    H[nPrime] = getFractionalBits(Math.pow(n, 1 / 2));\n\t                }\n\t                K[nPrime] = getFractionalBits(Math.pow(n, 1 / 3));\n\n\t                nPrime++;\n\t            }\n\n\t            n++;\n\t        }\n\t    }());\n\n\t    // Reusable object\n\t    var W = [];\n\n\t    /**\n\t     * SHA-256 hash algorithm.\n\t     */\n\t    var SHA256 = C_algo.SHA256 = Hasher.extend({\n\t        _doReset: function () {\n\t            this._hash = new WordArray.init(H.slice(0));\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\t            // Shortcut\n\t            var H = this._hash.words;\n\n\t            // Working variables\n\t            var a = H[0];\n\t            var b = H[1];\n\t            var c = H[2];\n\t            var d = H[3];\n\t            var e = H[4];\n\t            var f = H[5];\n\t            var g = H[6];\n\t            var h = H[7];\n\n\t            // Computation\n\t            for (var i = 0; i < 64; i++) {\n\t                if (i < 16) {\n\t                    W[i] = M[offset + i] | 0;\n\t                } else {\n\t                    var gamma0x = W[i - 15];\n\t                    var gamma0  = ((gamma0x << 25) | (gamma0x >>> 7))  ^\n\t                                  ((gamma0x << 14) | (gamma0x >>> 18)) ^\n\t                                   (gamma0x >>> 3);\n\n\t                    var gamma1x = W[i - 2];\n\t                    var gamma1  = ((gamma1x << 15) | (gamma1x >>> 17)) ^\n\t                                  ((gamma1x << 13) | (gamma1x >>> 19)) ^\n\t                                   (gamma1x >>> 10);\n\n\t                    W[i] = gamma0 + W[i - 7] + gamma1 + W[i - 16];\n\t                }\n\n\t                var ch  = (e & f) ^ (~e & g);\n\t                var maj = (a & b) ^ (a & c) ^ (b & c);\n\n\t                var sigma0 = ((a << 30) | (a >>> 2)) ^ ((a << 19) | (a >>> 13)) ^ ((a << 10) | (a >>> 22));\n\t                var sigma1 = ((e << 26) | (e >>> 6)) ^ ((e << 21) | (e >>> 11)) ^ ((e << 7)  | (e >>> 25));\n\n\t                var t1 = h + sigma1 + ch + K[i] + W[i];\n\t                var t2 = sigma0 + maj;\n\n\t                h = g;\n\t                g = f;\n\t                f = e;\n\t                e = (d + t1) | 0;\n\t                d = c;\n\t                c = b;\n\t                b = a;\n\t                a = (t1 + t2) | 0;\n\t            }\n\n\t            // Intermediate hash value\n\t            H[0] = (H[0] + a) | 0;\n\t            H[1] = (H[1] + b) | 0;\n\t            H[2] = (H[2] + c) | 0;\n\t            H[3] = (H[3] + d) | 0;\n\t            H[4] = (H[4] + e) | 0;\n\t            H[5] = (H[5] + f) | 0;\n\t            H[6] = (H[6] + g) | 0;\n\t            H[7] = (H[7] + h) | 0;\n\t        },\n\n\t        _doFinalize: function () {\n\t            // Shortcuts\n\t            var data = this._data;\n\t            var dataWords = data.words;\n\n\t            var nBitsTotal = this._nDataBytes * 8;\n\t            var nBitsLeft = data.sigBytes * 8;\n\n\t            // Add padding\n\t            dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = Math.floor(nBitsTotal / 0x100000000);\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 15] = nBitsTotal;\n\t            data.sigBytes = dataWords.length * 4;\n\n\t            // Hash final blocks\n\t            this._process();\n\n\t            // Return final computed hash\n\t            return this._hash;\n\t        },\n\n\t        clone: function () {\n\t            var clone = Hasher.clone.call(this);\n\t            clone._hash = this._hash.clone();\n\n\t            return clone;\n\t        }\n\t    });\n\n\t    /**\n\t     * Shortcut function to the hasher's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     *\n\t     * @return {WordArray} The hash.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hash = CryptoJS.SHA256('message');\n\t     *     var hash = CryptoJS.SHA256(wordArray);\n\t     */\n\t    C.SHA256 = Hasher._createHelper(SHA256);\n\n\t    /**\n\t     * Shortcut function to the HMAC's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     * @param {WordArray|string} key The secret key.\n\t     *\n\t     * @return {WordArray} The HMAC.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hmac = CryptoJS.HmacSHA256(message, key);\n\t     */\n\t    C.HmacSHA256 = Hasher._createHmacHelper(SHA256);\n\t}(Math));\n\n\n\treturn CryptoJS.SHA256;\n\n}));",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var C_enc = C.enc;\n\n\t    /**\n\t     * Base64 encoding strategy.\n\t     */\n\t    var Base64 = C_enc.Base64 = {\n\t        /**\n\t         * Converts a word array to a Base64 string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The Base64 string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var base64String = CryptoJS.enc.Base64.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            // Shortcuts\n\t            var words = wordArray.words;\n\t            var sigBytes = wordArray.sigBytes;\n\t            var map = this._map;\n\n\t            // Clamp excess bits\n\t            wordArray.clamp();\n\n\t            // Convert\n\t            var base64Chars = [];\n\t            for (var i = 0; i < sigBytes; i += 3) {\n\t                var byte1 = (words[i >>> 2]       >>> (24 - (i % 4) * 8))       & 0xff;\n\t                var byte2 = (words[(i + 1) >>> 2] >>> (24 - ((i + 1) % 4) * 8)) & 0xff;\n\t                var byte3 = (words[(i + 2) >>> 2] >>> (24 - ((i + 2) % 4) * 8)) & 0xff;\n\n\t                var triplet = (byte1 << 16) | (byte2 << 8) | byte3;\n\n\t                for (var j = 0; (j < 4) && (i + j * 0.75 < sigBytes); j++) {\n\t                    base64Chars.push(map.charAt((triplet >>> (6 * (3 - j))) & 0x3f));\n\t                }\n\t            }\n\n\t            // Add padding\n\t            var paddingChar = map.charAt(64);\n\t            if (paddingChar) {\n\t                while (base64Chars.length % 4) {\n\t                    base64Chars.push(paddingChar);\n\t                }\n\t            }\n\n\t            return base64Chars.join('');\n\t        },\n\n\t        /**\n\t         * Converts a Base64 string to a word array.\n\t         *\n\t         * @param {string} base64Str The Base64 string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Base64.parse(base64String);\n\t         */\n\t        parse: function (base64Str) {\n\t            // Shortcuts\n\t            var base64StrLength = base64Str.length;\n\t            var map = this._map;\n\t            var reverseMap = this._reverseMap;\n\n\t            if (!reverseMap) {\n\t                    reverseMap = this._reverseMap = [];\n\t                    for (var j = 0; j < map.length; j++) {\n\t                        reverseMap[map.charCodeAt(j)] = j;\n\t                    }\n\t            }\n\n\t            // Ignore padding\n\t            var paddingChar = map.charAt(64);\n\t            if (paddingChar) {\n\t                var paddingIndex = base64Str.indexOf(paddingChar);\n\t                if (paddingIndex !== -1) {\n\t                    base64StrLength = paddingIndex;\n\t                }\n\t            }\n\n\t            // Convert\n\t            return parseLoop(base64Str, base64StrLength, reverseMap);\n\n\t        },\n\n\t        _map: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/='\n\t    };\n\n\t    function parseLoop(base64Str, base64StrLength, reverseMap) {\n\t      var words = [];\n\t      var nBytes = 0;\n\t      for (var i = 0; i < base64StrLength; i++) {\n\t          if (i % 4) {\n\t              var bits1 = reverseMap[base64Str.charCodeAt(i - 1)] << ((i % 4) * 2);\n\t              var bits2 = reverseMap[base64Str.charCodeAt(i)] >>> (6 - (i % 4) * 2);\n\t              words[nBytes >>> 2] |= (bits1 | bits2) << (24 - (nBytes % 4) * 8);\n\t              nBytes++;\n\t          }\n\t      }\n\t      return WordArray.create(words, nBytes);\n\t    }\n\t}());\n\n\n\treturn CryptoJS.enc.Base64;\n\n}));",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Check if typed arrays are supported\n\t    if (typeof ArrayBuffer != 'function') {\n\t        return;\n\t    }\n\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\n\t    // Reference original init\n\t    var superInit = WordArray.init;\n\n\t    // Augment WordArray.init to handle typed arrays\n\t    var subInit = WordArray.init = function (typedArray) {\n\t        // Convert buffers to uint8\n\t        if (typedArray instanceof ArrayBuffer) {\n\t            typedArray = new Uint8Array(typedArray);\n\t        }\n\n\t        // Convert other array views to uint8\n\t        if (\n\t            typedArray instanceof Int8Array ||\n\t            (typeof Uint8ClampedArray !== \"undefined\" && typedArray instanceof Uint8ClampedArray) ||\n\t            typedArray instanceof Int16Array ||\n\t            typedArray instanceof Uint16Array ||\n\t            typedArray instanceof Int32Array ||\n\t            typedArray instanceof Uint32Array ||\n\t            typedArray instanceof Float32Array ||\n\t            typedArray instanceof Float64Array\n\t        ) {\n\t            typedArray = new Uint8Array(typedArray.buffer, typedArray.byteOffset, typedArray.byteLength);\n\t        }\n\n\t        // Handle Uint8Array\n\t        if (typedArray instanceof Uint8Array) {\n\t            // Shortcut\n\t            var typedArrayByteLength = typedArray.byteLength;\n\n\t            // Extract bytes\n\t            var words = [];\n\t            for (var i = 0; i < typedArrayByteLength; i++) {\n\t                words[i >>> 2] |= typedArray[i] << (24 - (i % 4) * 8);\n\t            }\n\n\t            // Initialize this word array\n\t            superInit.call(this, words, typedArrayByteLength);\n\t        } else {\n\t            // Else call normal init\n\t            superInit.apply(this, arguments);\n\t        }\n\t    };\n\n\t    subInit.prototype = WordArray;\n\t}());\n\n\n\treturn CryptoJS.lib.WordArray;\n\n}));","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  for (var i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n    ))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var Base = C_lib.Base;\n\t    var C_enc = C.enc;\n\t    var Utf8 = C_enc.Utf8;\n\t    var C_algo = C.algo;\n\n\t    /**\n\t     * HMAC algorithm.\n\t     */\n\t    var HMAC = C_algo.HMAC = Base.extend({\n\t        /**\n\t         * Initializes a newly created HMAC.\n\t         *\n\t         * @param {Hasher} hasher The hash algorithm to use.\n\t         * @param {WordArray|string} key The secret key.\n\t         *\n\t         * @example\n\t         *\n\t         *     var hmacHasher = CryptoJS.algo.HMAC.create(CryptoJS.algo.SHA256, key);\n\t         */\n\t        init: function (hasher, key) {\n\t            // Init hasher\n\t            hasher = this._hasher = new hasher.init();\n\n\t            // Convert string to WordArray, else assume WordArray already\n\t            if (typeof key == 'string') {\n\t                key = Utf8.parse(key);\n\t            }\n\n\t            // Shortcuts\n\t            var hasherBlockSize = hasher.blockSize;\n\t            var hasherBlockSizeBytes = hasherBlockSize * 4;\n\n\t            // Allow arbitrary length keys\n\t            if (key.sigBytes > hasherBlockSizeBytes) {\n\t                key = hasher.finalize(key);\n\t            }\n\n\t            // Clamp excess bits\n\t            key.clamp();\n\n\t            // Clone key for inner and outer pads\n\t            var oKey = this._oKey = key.clone();\n\t            var iKey = this._iKey = key.clone();\n\n\t            // Shortcuts\n\t            var oKeyWords = oKey.words;\n\t            var iKeyWords = iKey.words;\n\n\t            // XOR keys with pad constants\n\t            for (var i = 0; i < hasherBlockSize; i++) {\n\t                oKeyWords[i] ^= 0x5c5c5c5c;\n\t                iKeyWords[i] ^= 0x36363636;\n\t            }\n\t            oKey.sigBytes = iKey.sigBytes = hasherBlockSizeBytes;\n\n\t            // Set initial values\n\t            this.reset();\n\t        },\n\n\t        /**\n\t         * Resets this HMAC to its initial state.\n\t         *\n\t         * @example\n\t         *\n\t         *     hmacHasher.reset();\n\t         */\n\t        reset: function () {\n\t            // Shortcut\n\t            var hasher = this._hasher;\n\n\t            // Reset\n\t            hasher.reset();\n\t            hasher.update(this._iKey);\n\t        },\n\n\t        /**\n\t         * Updates this HMAC with a message.\n\t         *\n\t         * @param {WordArray|string} messageUpdate The message to append.\n\t         *\n\t         * @return {HMAC} This HMAC instance.\n\t         *\n\t         * @example\n\t         *\n\t         *     hmacHasher.update('message');\n\t         *     hmacHasher.update(wordArray);\n\t         */\n\t        update: function (messageUpdate) {\n\t            this._hasher.update(messageUpdate);\n\n\t            // Chainable\n\t            return this;\n\t        },\n\n\t        /**\n\t         * Finalizes the HMAC computation.\n\t         * Note that the finalize operation is effectively a destructive, read-once operation.\n\t         *\n\t         * @param {WordArray|string} messageUpdate (Optional) A final message update.\n\t         *\n\t         * @return {WordArray} The HMAC.\n\t         *\n\t         * @example\n\t         *\n\t         *     var hmac = hmacHasher.finalize();\n\t         *     var hmac = hmacHasher.finalize('message');\n\t         *     var hmac = hmacHasher.finalize(wordArray);\n\t         */\n\t        finalize: function (messageUpdate) {\n\t            // Shortcut\n\t            var hasher = this._hasher;\n\n\t            // Compute HMAC\n\t            var innerHash = hasher.finalize(messageUpdate);\n\t            hasher.reset();\n\t            var hmac = hasher.finalize(this._oKey.clone().concat(innerHash));\n\n\t            return hmac;\n\t        }\n\t    });\n\t}());\n\n\n}));","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/*!\n * Copyright 2016 Amazon.com,\n * Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Amazon Software License (the \"License\").\n * You may not use this file except in compliance with the\n * License. A copy of the License is located at\n *\n *     http://aws.amazon.com/asl/\n *\n * or in the \"license\" file accompanying this file. This file is\n * distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, express or implied. See the License\n * for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @class */\nvar AuthenticationDetails = function () {\n  /**\n   * Constructs a new AuthenticationDetails object\n   * @param {object=} data Creation options.\n   * @param {string} data.Username User being authenticated.\n   * @param {string} data.Password Plain-text password to authenticate with.\n   * @param {(AttributeArg[])?} data.ValidationData Application extra metadata.\n   * @param {(AttributeArg[])?} data.AuthParamaters Authentication paramaters for custom auth.\n   */\n  function AuthenticationDetails(data) {\n    _classCallCheck(this, AuthenticationDetails);\n\n    var _ref = data || {},\n        ValidationData = _ref.ValidationData,\n        Username = _ref.Username,\n        Password = _ref.Password,\n        AuthParameters = _ref.AuthParameters;\n\n    this.validationData = ValidationData || {};\n    this.authParameters = AuthParameters || {};\n    this.username = Username;\n    this.password = Password;\n  }\n\n  /**\n   * @returns {string} the record's username\n   */\n\n\n  AuthenticationDetails.prototype.getUsername = function getUsername() {\n    return this.username;\n  };\n\n  /**\n   * @returns {string} the record's password\n   */\n\n\n  AuthenticationDetails.prototype.getPassword = function getPassword() {\n    return this.password;\n  };\n\n  /**\n   * @returns {Array} the record's validationData\n   */\n\n\n  AuthenticationDetails.prototype.getValidationData = function getValidationData() {\n    return this.validationData;\n  };\n\n  /**\n   * @returns {Array} the record's authParameters\n   */\n\n\n  AuthenticationDetails.prototype.getAuthParameters = function getAuthParameters() {\n    return this.authParameters;\n  };\n\n  return AuthenticationDetails;\n}();\n\nexport default AuthenticationDetails;","// A small implementation of BigInteger based on http://www-cs-students.stanford.edu/~tjw/jsbn/\n//\n// All public methods have been removed except the following:\n//   new BigInteger(a, b) (only radix 2, 4, 8, 16 and 32 supported)\n//   toString (only radix 2, 4, 8, 16 and 32 supported)\n//   negate\n//   abs\n//   compareTo\n//   bitLength\n//   mod\n//   equals\n//   add\n//   subtract\n//   multiply\n//   divide\n//   modPow\n\nexport default BigInteger;\n\n/*\n * Copyright (c) 2003-2005  Tom Wu\n * All Rights Reserved.\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS-IS\" AND WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS, IMPLIED OR OTHERWISE, INCLUDING WITHOUT LIMITATION, ANY\n * WARRANTY OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.\n *\n * IN NO EVENT SHALL TOM WU BE LIABLE FOR ANY SPECIAL, INCIDENTAL,\n * INDIRECT OR CONSEQUENTIAL DAMAGES OF ANY KIND, OR ANY DAMAGES WHATSOEVER\n * RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER OR NOT ADVISED OF\n * THE POSSIBILITY OF DAMAGE, AND ON ANY THEORY OF LIABILITY, ARISING OUT\n * OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n *\n * In addition, the following condition applies:\n *\n * All redistributions must retain an intact copy of this copyright notice\n * and disclaimer.\n */\n\n// (public) Constructor\nfunction BigInteger(a, b) {\n  if (a != null) this.fromString(a, b);\n}\n\n// return new, unset BigInteger\nfunction nbi() {\n  return new BigInteger(null);\n}\n\n// Bits per digit\nvar dbits;\n\n// JavaScript engine analysis\nvar canary = 0xdeadbeefcafe;\nvar j_lm = (canary & 0xffffff) == 0xefcafe;\n\n// am: Compute w_j += (x*this_i), propagate carries,\n// c is initial carry, returns final carry.\n// c < 3*dvalue, x < 2*dvalue, this_i < dvalue\n// We need to select the fastest one that works in this environment.\n\n// am1: use a single mult and divide to get the high bits,\n// max digit bits should be 26 because\n// max internal value = 2*dvalue^2-2*dvalue (< 2^53)\nfunction am1(i, x, w, j, c, n) {\n  while (--n >= 0) {\n    var v = x * this[i++] + w[j] + c;\n    c = Math.floor(v / 0x4000000);\n    w[j++] = v & 0x3ffffff;\n  }\n  return c;\n}\n// am2 avoids a big mult-and-extract completely.\n// Max digit bits should be <= 30 because we do bitwise ops\n// on values up to 2*hdvalue^2-hdvalue-1 (< 2^31)\nfunction am2(i, x, w, j, c, n) {\n  var xl = x & 0x7fff,\n      xh = x >> 15;\n  while (--n >= 0) {\n    var l = this[i] & 0x7fff;\n    var h = this[i++] >> 15;\n    var m = xh * l + h * xl;\n    l = xl * l + ((m & 0x7fff) << 15) + w[j] + (c & 0x3fffffff);\n    c = (l >>> 30) + (m >>> 15) + xh * h + (c >>> 30);\n    w[j++] = l & 0x3fffffff;\n  }\n  return c;\n}\n// Alternately, set max digit bits to 28 since some\n// browsers slow down when dealing with 32-bit numbers.\nfunction am3(i, x, w, j, c, n) {\n  var xl = x & 0x3fff,\n      xh = x >> 14;\n  while (--n >= 0) {\n    var l = this[i] & 0x3fff;\n    var h = this[i++] >> 14;\n    var m = xh * l + h * xl;\n    l = xl * l + ((m & 0x3fff) << 14) + w[j] + c;\n    c = (l >> 28) + (m >> 14) + xh * h;\n    w[j++] = l & 0xfffffff;\n  }\n  return c;\n}\nvar inBrowser = typeof navigator !== \"undefined\";\nif (inBrowser && j_lm && navigator.appName == \"Microsoft Internet Explorer\") {\n  BigInteger.prototype.am = am2;\n  dbits = 30;\n} else if (inBrowser && j_lm && navigator.appName != \"Netscape\") {\n  BigInteger.prototype.am = am1;\n  dbits = 26;\n} else {\n  // Mozilla/Netscape seems to prefer am3\n  BigInteger.prototype.am = am3;\n  dbits = 28;\n}\n\nBigInteger.prototype.DB = dbits;\nBigInteger.prototype.DM = (1 << dbits) - 1;\nBigInteger.prototype.DV = 1 << dbits;\n\nvar BI_FP = 52;\nBigInteger.prototype.FV = Math.pow(2, BI_FP);\nBigInteger.prototype.F1 = BI_FP - dbits;\nBigInteger.prototype.F2 = 2 * dbits - BI_FP;\n\n// Digit conversions\nvar BI_RM = \"0123456789abcdefghijklmnopqrstuvwxyz\";\nvar BI_RC = new Array();\nvar rr, vv;\nrr = \"0\".charCodeAt(0);\nfor (vv = 0; vv <= 9; ++vv) {\n  BI_RC[rr++] = vv;\n}rr = \"a\".charCodeAt(0);\nfor (vv = 10; vv < 36; ++vv) {\n  BI_RC[rr++] = vv;\n}rr = \"A\".charCodeAt(0);\nfor (vv = 10; vv < 36; ++vv) {\n  BI_RC[rr++] = vv;\n}function int2char(n) {\n  return BI_RM.charAt(n);\n}\nfunction intAt(s, i) {\n  var c = BI_RC[s.charCodeAt(i)];\n  return c == null ? -1 : c;\n}\n\n// (protected) copy this to r\nfunction bnpCopyTo(r) {\n  for (var i = this.t - 1; i >= 0; --i) {\n    r[i] = this[i];\n  }r.t = this.t;\n  r.s = this.s;\n}\n\n// (protected) set from integer value x, -DV <= x < DV\nfunction bnpFromInt(x) {\n  this.t = 1;\n  this.s = x < 0 ? -1 : 0;\n  if (x > 0) this[0] = x;else if (x < -1) this[0] = x + this.DV;else this.t = 0;\n}\n\n// return bigint initialized to value\nfunction nbv(i) {\n  var r = nbi();\n\n  r.fromInt(i);\n\n  return r;\n}\n\n// (protected) set from string and radix\nfunction bnpFromString(s, b) {\n  var k;\n  if (b == 16) k = 4;else if (b == 8) k = 3;else if (b == 2) k = 1;else if (b == 32) k = 5;else if (b == 4) k = 2;else throw new Error(\"Only radix 2, 4, 8, 16, 32 are supported\");\n  this.t = 0;\n  this.s = 0;\n  var i = s.length,\n      mi = false,\n      sh = 0;\n  while (--i >= 0) {\n    var x = intAt(s, i);\n    if (x < 0) {\n      if (s.charAt(i) == \"-\") mi = true;\n      continue;\n    }\n    mi = false;\n    if (sh == 0) this[this.t++] = x;else if (sh + k > this.DB) {\n      this[this.t - 1] |= (x & (1 << this.DB - sh) - 1) << sh;\n      this[this.t++] = x >> this.DB - sh;\n    } else this[this.t - 1] |= x << sh;\n    sh += k;\n    if (sh >= this.DB) sh -= this.DB;\n  }\n  this.clamp();\n  if (mi) BigInteger.ZERO.subTo(this, this);\n}\n\n// (protected) clamp off excess high words\nfunction bnpClamp() {\n  var c = this.s & this.DM;\n  while (this.t > 0 && this[this.t - 1] == c) {\n    --this.t;\n  }\n}\n\n// (public) return string representation in given radix\nfunction bnToString(b) {\n  if (this.s < 0) return \"-\" + this.negate().toString();\n  var k;\n  if (b == 16) k = 4;else if (b == 8) k = 3;else if (b == 2) k = 1;else if (b == 32) k = 5;else if (b == 4) k = 2;else throw new Error(\"Only radix 2, 4, 8, 16, 32 are supported\");\n  var km = (1 << k) - 1,\n      d,\n      m = false,\n      r = \"\",\n      i = this.t;\n  var p = this.DB - i * this.DB % k;\n  if (i-- > 0) {\n    if (p < this.DB && (d = this[i] >> p) > 0) {\n      m = true;\n      r = int2char(d);\n    }\n    while (i >= 0) {\n      if (p < k) {\n        d = (this[i] & (1 << p) - 1) << k - p;\n        d |= this[--i] >> (p += this.DB - k);\n      } else {\n        d = this[i] >> (p -= k) & km;\n        if (p <= 0) {\n          p += this.DB;\n          --i;\n        }\n      }\n      if (d > 0) m = true;\n      if (m) r += int2char(d);\n    }\n  }\n  return m ? r : \"0\";\n}\n\n// (public) -this\nfunction bnNegate() {\n  var r = nbi();\n\n  BigInteger.ZERO.subTo(this, r);\n\n  return r;\n}\n\n// (public) |this|\nfunction bnAbs() {\n  return this.s < 0 ? this.negate() : this;\n}\n\n// (public) return + if this > a, - if this < a, 0 if equal\nfunction bnCompareTo(a) {\n  var r = this.s - a.s;\n  if (r != 0) return r;\n  var i = this.t;\n  r = i - a.t;\n  if (r != 0) return this.s < 0 ? -r : r;\n  while (--i >= 0) {\n    if ((r = this[i] - a[i]) != 0) return r;\n  }return 0;\n}\n\n// returns bit length of the integer x\nfunction nbits(x) {\n  var r = 1,\n      t;\n  if ((t = x >>> 16) != 0) {\n    x = t;\n    r += 16;\n  }\n  if ((t = x >> 8) != 0) {\n    x = t;\n    r += 8;\n  }\n  if ((t = x >> 4) != 0) {\n    x = t;\n    r += 4;\n  }\n  if ((t = x >> 2) != 0) {\n    x = t;\n    r += 2;\n  }\n  if ((t = x >> 1) != 0) {\n    x = t;\n    r += 1;\n  }\n  return r;\n}\n\n// (public) return the number of bits in \"this\"\nfunction bnBitLength() {\n  if (this.t <= 0) return 0;\n  return this.DB * (this.t - 1) + nbits(this[this.t - 1] ^ this.s & this.DM);\n}\n\n// (protected) r = this << n*DB\nfunction bnpDLShiftTo(n, r) {\n  var i;\n  for (i = this.t - 1; i >= 0; --i) {\n    r[i + n] = this[i];\n  }for (i = n - 1; i >= 0; --i) {\n    r[i] = 0;\n  }r.t = this.t + n;\n  r.s = this.s;\n}\n\n// (protected) r = this >> n*DB\nfunction bnpDRShiftTo(n, r) {\n  for (var i = n; i < this.t; ++i) {\n    r[i - n] = this[i];\n  }r.t = Math.max(this.t - n, 0);\n  r.s = this.s;\n}\n\n// (protected) r = this << n\nfunction bnpLShiftTo(n, r) {\n  var bs = n % this.DB;\n  var cbs = this.DB - bs;\n  var bm = (1 << cbs) - 1;\n  var ds = Math.floor(n / this.DB),\n      c = this.s << bs & this.DM,\n      i;\n  for (i = this.t - 1; i >= 0; --i) {\n    r[i + ds + 1] = this[i] >> cbs | c;\n    c = (this[i] & bm) << bs;\n  }\n  for (i = ds - 1; i >= 0; --i) {\n    r[i] = 0;\n  }r[ds] = c;\n  r.t = this.t + ds + 1;\n  r.s = this.s;\n  r.clamp();\n}\n\n// (protected) r = this >> n\nfunction bnpRShiftTo(n, r) {\n  r.s = this.s;\n  var ds = Math.floor(n / this.DB);\n  if (ds >= this.t) {\n    r.t = 0;\n    return;\n  }\n  var bs = n % this.DB;\n  var cbs = this.DB - bs;\n  var bm = (1 << bs) - 1;\n  r[0] = this[ds] >> bs;\n  for (var i = ds + 1; i < this.t; ++i) {\n    r[i - ds - 1] |= (this[i] & bm) << cbs;\n    r[i - ds] = this[i] >> bs;\n  }\n  if (bs > 0) r[this.t - ds - 1] |= (this.s & bm) << cbs;\n  r.t = this.t - ds;\n  r.clamp();\n}\n\n// (protected) r = this - a\nfunction bnpSubTo(a, r) {\n  var i = 0,\n      c = 0,\n      m = Math.min(a.t, this.t);\n  while (i < m) {\n    c += this[i] - a[i];\n    r[i++] = c & this.DM;\n    c >>= this.DB;\n  }\n  if (a.t < this.t) {\n    c -= a.s;\n    while (i < this.t) {\n      c += this[i];\n      r[i++] = c & this.DM;\n      c >>= this.DB;\n    }\n    c += this.s;\n  } else {\n    c += this.s;\n    while (i < a.t) {\n      c -= a[i];\n      r[i++] = c & this.DM;\n      c >>= this.DB;\n    }\n    c -= a.s;\n  }\n  r.s = c < 0 ? -1 : 0;\n  if (c < -1) r[i++] = this.DV + c;else if (c > 0) r[i++] = c;\n  r.t = i;\n  r.clamp();\n}\n\n// (protected) r = this * a, r != this,a (HAC 14.12)\n// \"this\" should be the larger one if appropriate.\nfunction bnpMultiplyTo(a, r) {\n  var x = this.abs(),\n      y = a.abs();\n  var i = x.t;\n  r.t = i + y.t;\n  while (--i >= 0) {\n    r[i] = 0;\n  }for (i = 0; i < y.t; ++i) {\n    r[i + x.t] = x.am(0, y[i], r, i, 0, x.t);\n  }r.s = 0;\n  r.clamp();\n  if (this.s != a.s) BigInteger.ZERO.subTo(r, r);\n}\n\n// (protected) r = this^2, r != this (HAC 14.16)\nfunction bnpSquareTo(r) {\n  var x = this.abs();\n  var i = r.t = 2 * x.t;\n  while (--i >= 0) {\n    r[i] = 0;\n  }for (i = 0; i < x.t - 1; ++i) {\n    var c = x.am(i, x[i], r, 2 * i, 0, 1);\n    if ((r[i + x.t] += x.am(i + 1, 2 * x[i], r, 2 * i + 1, c, x.t - i - 1)) >= x.DV) {\n      r[i + x.t] -= x.DV;\n      r[i + x.t + 1] = 1;\n    }\n  }\n  if (r.t > 0) r[r.t - 1] += x.am(i, x[i], r, 2 * i, 0, 1);\n  r.s = 0;\n  r.clamp();\n}\n\n// (protected) divide this by m, quotient and remainder to q, r (HAC 14.20)\n// r != q, this != m.  q or r may be null.\nfunction bnpDivRemTo(m, q, r) {\n  var pm = m.abs();\n  if (pm.t <= 0) return;\n  var pt = this.abs();\n  if (pt.t < pm.t) {\n    if (q != null) q.fromInt(0);\n    if (r != null) this.copyTo(r);\n    return;\n  }\n  if (r == null) r = nbi();\n  var y = nbi(),\n      ts = this.s,\n      ms = m.s;\n  var nsh = this.DB - nbits(pm[pm.t - 1]);\n  // normalize modulus\n  if (nsh > 0) {\n    pm.lShiftTo(nsh, y);\n    pt.lShiftTo(nsh, r);\n  } else {\n    pm.copyTo(y);\n    pt.copyTo(r);\n  }\n  var ys = y.t;\n  var y0 = y[ys - 1];\n  if (y0 == 0) return;\n  var yt = y0 * (1 << this.F1) + (ys > 1 ? y[ys - 2] >> this.F2 : 0);\n  var d1 = this.FV / yt,\n      d2 = (1 << this.F1) / yt,\n      e = 1 << this.F2;\n  var i = r.t,\n      j = i - ys,\n      t = q == null ? nbi() : q;\n  y.dlShiftTo(j, t);\n  if (r.compareTo(t) >= 0) {\n    r[r.t++] = 1;\n    r.subTo(t, r);\n  }\n  BigInteger.ONE.dlShiftTo(ys, t);\n  t.subTo(y, y);\n  // \"negative\" y so we can replace sub with am later\n  while (y.t < ys) {\n    y[y.t++] = 0;\n  }while (--j >= 0) {\n    // Estimate quotient digit\n    var qd = r[--i] == y0 ? this.DM : Math.floor(r[i] * d1 + (r[i - 1] + e) * d2);\n    if ((r[i] += y.am(0, qd, r, j, 0, ys)) < qd) {\n      // Try it out\n      y.dlShiftTo(j, t);\n      r.subTo(t, r);\n      while (r[i] < --qd) {\n        r.subTo(t, r);\n      }\n    }\n  }\n  if (q != null) {\n    r.drShiftTo(ys, q);\n    if (ts != ms) BigInteger.ZERO.subTo(q, q);\n  }\n  r.t = ys;\n  r.clamp();\n  if (nsh > 0) r.rShiftTo(nsh, r);\n  // Denormalize remainder\n  if (ts < 0) BigInteger.ZERO.subTo(r, r);\n}\n\n// (public) this mod a\nfunction bnMod(a) {\n  var r = nbi();\n  this.abs().divRemTo(a, null, r);\n  if (this.s < 0 && r.compareTo(BigInteger.ZERO) > 0) a.subTo(r, r);\n  return r;\n}\n\n// (protected) return \"-1/this % 2^DB\"; useful for Mont. reduction\n// justification:\n//         xy == 1 (mod m)\n//         xy =  1+km\n//   xy(2-xy) = (1+km)(1-km)\n// x[y(2-xy)] = 1-k^2m^2\n// x[y(2-xy)] == 1 (mod m^2)\n// if y is 1/x mod m, then y(2-xy) is 1/x mod m^2\n// should reduce x and y(2-xy) by m^2 at each step to keep size bounded.\n// JS multiply \"overflows\" differently from C/C++, so care is needed here.\nfunction bnpInvDigit() {\n  if (this.t < 1) return 0;\n  var x = this[0];\n  if ((x & 1) == 0) return 0;\n  var y = x & 3;\n  // y == 1/x mod 2^2\n  y = y * (2 - (x & 0xf) * y) & 0xf;\n  // y == 1/x mod 2^4\n  y = y * (2 - (x & 0xff) * y) & 0xff;\n  // y == 1/x mod 2^8\n  y = y * (2 - ((x & 0xffff) * y & 0xffff)) & 0xffff;\n  // y == 1/x mod 2^16\n  // last step - calculate inverse mod DV directly;\n  // assumes 16 < DB <= 32 and assumes ability to handle 48-bit ints\n  y = y * (2 - x * y % this.DV) % this.DV;\n  // y == 1/x mod 2^dbits\n  // we really want the negative inverse, and -DV < y < DV\n  return y > 0 ? this.DV - y : -y;\n}\n\nfunction bnEquals(a) {\n  return this.compareTo(a) == 0;\n}\n\n// (protected) r = this + a\nfunction bnpAddTo(a, r) {\n  var i = 0,\n      c = 0,\n      m = Math.min(a.t, this.t);\n  while (i < m) {\n    c += this[i] + a[i];\n    r[i++] = c & this.DM;\n    c >>= this.DB;\n  }\n  if (a.t < this.t) {\n    c += a.s;\n    while (i < this.t) {\n      c += this[i];\n      r[i++] = c & this.DM;\n      c >>= this.DB;\n    }\n    c += this.s;\n  } else {\n    c += this.s;\n    while (i < a.t) {\n      c += a[i];\n      r[i++] = c & this.DM;\n      c >>= this.DB;\n    }\n    c += a.s;\n  }\n  r.s = c < 0 ? -1 : 0;\n  if (c > 0) r[i++] = c;else if (c < -1) r[i++] = this.DV + c;\n  r.t = i;\n  r.clamp();\n}\n\n// (public) this + a\nfunction bnAdd(a) {\n  var r = nbi();\n\n  this.addTo(a, r);\n\n  return r;\n}\n\n// (public) this - a\nfunction bnSubtract(a) {\n  var r = nbi();\n\n  this.subTo(a, r);\n\n  return r;\n}\n\n// (public) this * a\nfunction bnMultiply(a) {\n  var r = nbi();\n\n  this.multiplyTo(a, r);\n\n  return r;\n}\n\n// (public) this / a\nfunction bnDivide(a) {\n  var r = nbi();\n\n  this.divRemTo(a, r, null);\n\n  return r;\n}\n\n// Montgomery reduction\nfunction Montgomery(m) {\n  this.m = m;\n  this.mp = m.invDigit();\n  this.mpl = this.mp & 0x7fff;\n  this.mph = this.mp >> 15;\n  this.um = (1 << m.DB - 15) - 1;\n  this.mt2 = 2 * m.t;\n}\n\n// xR mod m\nfunction montConvert(x) {\n  var r = nbi();\n  x.abs().dlShiftTo(this.m.t, r);\n  r.divRemTo(this.m, null, r);\n  if (x.s < 0 && r.compareTo(BigInteger.ZERO) > 0) this.m.subTo(r, r);\n  return r;\n}\n\n// x/R mod m\nfunction montRevert(x) {\n  var r = nbi();\n  x.copyTo(r);\n  this.reduce(r);\n  return r;\n}\n\n// x = x/R mod m (HAC 14.32)\nfunction montReduce(x) {\n  while (x.t <= this.mt2) {\n    // pad x so am has enough room later\n    x[x.t++] = 0;\n  }for (var i = 0; i < this.m.t; ++i) {\n    // faster way of calculating u0 = x[i]*mp mod DV\n    var j = x[i] & 0x7fff;\n    var u0 = j * this.mpl + ((j * this.mph + (x[i] >> 15) * this.mpl & this.um) << 15) & x.DM;\n    // use am to combine the multiply-shift-add into one call\n    j = i + this.m.t;\n    x[j] += this.m.am(0, u0, x, i, 0, this.m.t);\n    // propagate carry\n    while (x[j] >= x.DV) {\n      x[j] -= x.DV;\n      x[++j]++;\n    }\n  }\n  x.clamp();\n  x.drShiftTo(this.m.t, x);\n  if (x.compareTo(this.m) >= 0) x.subTo(this.m, x);\n}\n\n// r = \"x^2/R mod m\"; x != r\nfunction montSqrTo(x, r) {\n  x.squareTo(r);\n\n  this.reduce(r);\n}\n\n// r = \"xy/R mod m\"; x,y != r\nfunction montMulTo(x, y, r) {\n  x.multiplyTo(y, r);\n\n  this.reduce(r);\n}\n\nMontgomery.prototype.convert = montConvert;\nMontgomery.prototype.revert = montRevert;\nMontgomery.prototype.reduce = montReduce;\nMontgomery.prototype.mulTo = montMulTo;\nMontgomery.prototype.sqrTo = montSqrTo;\n\n// (public) this^e % m (HAC 14.85)\nfunction bnModPow(e, m, callback) {\n  var i = e.bitLength(),\n      k,\n      r = nbv(1),\n      z = new Montgomery(m);\n  if (i <= 0) return r;else if (i < 18) k = 1;else if (i < 48) k = 3;else if (i < 144) k = 4;else if (i < 768) k = 5;else k = 6;\n\n  // precomputation\n  var g = new Array(),\n      n = 3,\n      k1 = k - 1,\n      km = (1 << k) - 1;\n  g[1] = z.convert(this);\n  if (k > 1) {\n    var g2 = nbi();\n    z.sqrTo(g[1], g2);\n    while (n <= km) {\n      g[n] = nbi();\n      z.mulTo(g2, g[n - 2], g[n]);\n      n += 2;\n    }\n  }\n\n  var j = e.t - 1,\n      w,\n      is1 = true,\n      r2 = nbi(),\n      t;\n  i = nbits(e[j]) - 1;\n  while (j >= 0) {\n    if (i >= k1) w = e[j] >> i - k1 & km;else {\n      w = (e[j] & (1 << i + 1) - 1) << k1 - i;\n      if (j > 0) w |= e[j - 1] >> this.DB + i - k1;\n    }\n\n    n = k;\n    while ((w & 1) == 0) {\n      w >>= 1;\n      --n;\n    }\n    if ((i -= n) < 0) {\n      i += this.DB;\n      --j;\n    }\n    if (is1) {\n      // ret == 1, don't bother squaring or multiplying it\n      g[w].copyTo(r);\n      is1 = false;\n    } else {\n      while (n > 1) {\n        z.sqrTo(r, r2);\n        z.sqrTo(r2, r);\n        n -= 2;\n      }\n      if (n > 0) z.sqrTo(r, r2);else {\n        t = r;\n        r = r2;\n        r2 = t;\n      }\n      z.mulTo(r2, g[w], r);\n    }\n\n    while (j >= 0 && (e[j] & 1 << i) == 0) {\n      z.sqrTo(r, r2);\n      t = r;\n      r = r2;\n      r2 = t;\n      if (--i < 0) {\n        i = this.DB - 1;\n        --j;\n      }\n    }\n  }\n  var result = z.revert(r);\n  callback(null, result);\n  return result;\n}\n\n// protected\nBigInteger.prototype.copyTo = bnpCopyTo;\nBigInteger.prototype.fromInt = bnpFromInt;\nBigInteger.prototype.fromString = bnpFromString;\nBigInteger.prototype.clamp = bnpClamp;\nBigInteger.prototype.dlShiftTo = bnpDLShiftTo;\nBigInteger.prototype.drShiftTo = bnpDRShiftTo;\nBigInteger.prototype.lShiftTo = bnpLShiftTo;\nBigInteger.prototype.rShiftTo = bnpRShiftTo;\nBigInteger.prototype.subTo = bnpSubTo;\nBigInteger.prototype.multiplyTo = bnpMultiplyTo;\nBigInteger.prototype.squareTo = bnpSquareTo;\nBigInteger.prototype.divRemTo = bnpDivRemTo;\nBigInteger.prototype.invDigit = bnpInvDigit;\nBigInteger.prototype.addTo = bnpAddTo;\n\n// public\nBigInteger.prototype.toString = bnToString;\nBigInteger.prototype.negate = bnNegate;\nBigInteger.prototype.abs = bnAbs;\nBigInteger.prototype.compareTo = bnCompareTo;\nBigInteger.prototype.bitLength = bnBitLength;\nBigInteger.prototype.mod = bnMod;\nBigInteger.prototype.equals = bnEquals;\nBigInteger.prototype.add = bnAdd;\nBigInteger.prototype.subtract = bnSubtract;\nBigInteger.prototype.multiply = bnMultiply;\nBigInteger.prototype.divide = bnDivide;\nBigInteger.prototype.modPow = bnModPow;\n\n// \"constants\"\nBigInteger.ZERO = nbv(0);\nBigInteger.ONE = nbv(1);","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/*!\n * Copyright 2016 Amazon.com,\n * Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Amazon Software License (the \"License\").\n * You may not use this file except in compliance with the\n * License. A copy of the License is located at\n *\n *     http://aws.amazon.com/asl/\n *\n * or in the \"license\" file accompanying this file. This file is\n * distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, express or implied. See the License\n * for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Buffer } from 'buffer/';\nimport CryptoJS from 'crypto-js/core';\nimport 'crypto-js/lib-typedarrays'; // necessary for crypto js\nimport SHA256 from 'crypto-js/sha256';\nimport HmacSHA256 from 'crypto-js/hmac-sha256';\n\nvar randomBytes = function randomBytes(nBytes) {\n  return Buffer.from(CryptoJS.lib.WordArray.random(nBytes).toString(), 'hex');\n};\n\nimport BigInteger from './BigInteger';\n\nvar initN = 'FFFFFFFFFFFFFFFFC90FDAA22168C234C4C6628B80DC1CD1' + '29024E088A67CC74020BBEA63B139B22514A08798E3404DD' + 'EF9519B3CD3A431B302B0A6DF25F14374FE1356D6D51C245' + 'E485B576625E7EC6F44C42E9A637ED6B0BFF5CB6F406B7ED' + 'EE386BFB5A899FA5AE9F24117C4B1FE649286651ECE45B3D' + 'C2007CB8A163BF0598DA48361C55D39A69163FA8FD24CF5F' + '83655D23DCA3AD961C62F356208552BB9ED529077096966D' + '670C354E4ABC9804F1746C08CA18217C32905E462E36CE3B' + 'E39E772C180E86039B2783A2EC07A28FB5C55DF06F4C52C9' + 'DE2BCBF6955817183995497CEA956AE515D2261898FA0510' + '15728E5A8AAAC42DAD33170D04507A33A85521ABDF1CBA64' + 'ECFB850458DBEF0A8AEA71575D060C7DB3970F85A6E1E4C7' + 'ABF5AE8CDB0933D71E8C94E04A25619DCEE3D2261AD2EE6B' + 'F12FFA06D98A0864D87602733EC86A64521F2B18177B200C' + 'BBE117577A615D6C770988C0BAD946E208E24FA074E5AB31' + '43DB5BFCE0FD108E4B82D120A93AD2CAFFFFFFFFFFFFFFFF';\n\nvar newPasswordRequiredChallengeUserAttributePrefix = 'userAttributes.';\n\n/** @class */\n\nvar AuthenticationHelper = function () {\n  /**\n   * Constructs a new AuthenticationHelper object\n   * @param {string} PoolName Cognito user pool name.\n   */\n  function AuthenticationHelper(PoolName) {\n    _classCallCheck(this, AuthenticationHelper);\n\n    this.N = new BigInteger(initN, 16);\n    this.g = new BigInteger('2', 16);\n    this.k = new BigInteger(this.hexHash('00' + this.N.toString(16) + '0' + this.g.toString(16)), 16);\n\n    this.smallAValue = this.generateRandomSmallA();\n    this.getLargeAValue(function () {});\n\n    this.infoBits = Buffer.from('Caldera Derived Key', 'utf8');\n\n    this.poolName = PoolName;\n  }\n\n  /**\n   * @returns {BigInteger} small A, a random number\n   */\n\n\n  AuthenticationHelper.prototype.getSmallAValue = function getSmallAValue() {\n    return this.smallAValue;\n  };\n\n  /**\n   * @param {nodeCallback<BigInteger>} callback Called with (err, largeAValue)\n   * @returns {void}\n   */\n\n\n  AuthenticationHelper.prototype.getLargeAValue = function getLargeAValue(callback) {\n    var _this = this;\n\n    if (this.largeAValue) {\n      callback(null, this.largeAValue);\n    } else {\n      this.calculateA(this.smallAValue, function (err, largeAValue) {\n        if (err) {\n          callback(err, null);\n        }\n\n        _this.largeAValue = largeAValue;\n        callback(null, _this.largeAValue);\n      });\n    }\n  };\n\n  /**\n   * helper function to generate a random big integer\n   * @returns {BigInteger} a random value.\n   * @private\n   */\n\n\n  AuthenticationHelper.prototype.generateRandomSmallA = function generateRandomSmallA() {\n    var hexRandom = randomBytes(128).toString('hex');\n\n    var randomBigInt = new BigInteger(hexRandom, 16);\n    var smallABigInt = randomBigInt.mod(this.N);\n\n    return smallABigInt;\n  };\n\n  /**\n   * helper function to generate a random string\n   * @returns {string} a random value.\n   * @private\n   */\n\n\n  AuthenticationHelper.prototype.generateRandomString = function generateRandomString() {\n    return randomBytes(40).toString('base64');\n  };\n\n  /**\n   * @returns {string} Generated random value included in password hash.\n   */\n\n\n  AuthenticationHelper.prototype.getRandomPassword = function getRandomPassword() {\n    return this.randomPassword;\n  };\n\n  /**\n   * @returns {string} Generated random value included in devices hash.\n   */\n\n\n  AuthenticationHelper.prototype.getSaltDevices = function getSaltDevices() {\n    return this.SaltToHashDevices;\n  };\n\n  /**\n   * @returns {string} Value used to verify devices.\n   */\n\n\n  AuthenticationHelper.prototype.getVerifierDevices = function getVerifierDevices() {\n    return this.verifierDevices;\n  };\n\n  /**\n   * Generate salts and compute verifier.\n   * @param {string} deviceGroupKey Devices to generate verifier for.\n   * @param {string} username User to generate verifier for.\n   * @param {nodeCallback<null>} callback Called with (err, null)\n   * @returns {void}\n   */\n\n\n  AuthenticationHelper.prototype.generateHashDevice = function generateHashDevice(deviceGroupKey, username, callback) {\n    var _this2 = this;\n\n    this.randomPassword = this.generateRandomString();\n    var combinedString = '' + deviceGroupKey + username + ':' + this.randomPassword;\n    var hashedString = this.hash(combinedString);\n\n    var hexRandom = randomBytes(16).toString('hex');\n    this.SaltToHashDevices = this.padHex(new BigInteger(hexRandom, 16));\n\n    this.g.modPow(new BigInteger(this.hexHash(this.SaltToHashDevices + hashedString), 16), this.N, function (err, verifierDevicesNotPadded) {\n      if (err) {\n        callback(err, null);\n      }\n\n      _this2.verifierDevices = _this2.padHex(verifierDevicesNotPadded);\n      callback(null, null);\n    });\n  };\n\n  /**\n   * Calculate the client's public value A = g^a%N\n   * with the generated random number a\n   * @param {BigInteger} a Randomly generated small A.\n   * @param {nodeCallback<BigInteger>} callback Called with (err, largeAValue)\n   * @returns {void}\n   * @private\n   */\n\n\n  AuthenticationHelper.prototype.calculateA = function calculateA(a, callback) {\n    var _this3 = this;\n\n    this.g.modPow(a, this.N, function (err, A) {\n      if (err) {\n        callback(err, null);\n      }\n\n      if (A.mod(_this3.N).equals(BigInteger.ZERO)) {\n        callback(new Error('Illegal paramater. A mod N cannot be 0.'), null);\n      }\n\n      callback(null, A);\n    });\n  };\n\n  /**\n   * Calculate the client's value U which is the hash of A and B\n   * @param {BigInteger} A Large A value.\n   * @param {BigInteger} B Server B value.\n   * @returns {BigInteger} Computed U value.\n   * @private\n   */\n\n\n  AuthenticationHelper.prototype.calculateU = function calculateU(A, B) {\n    this.UHexHash = this.hexHash(this.padHex(A) + this.padHex(B));\n    var finalU = new BigInteger(this.UHexHash, 16);\n\n    return finalU;\n  };\n\n  /**\n   * Calculate a hash from a bitArray\n   * @param {Buffer} buf Value to hash.\n   * @returns {String} Hex-encoded hash.\n   * @private\n   */\n\n\n  AuthenticationHelper.prototype.hash = function hash(buf) {\n    var str = buf instanceof Buffer ? CryptoJS.lib.WordArray.create(buf) : buf;\n    var hashHex = SHA256(str).toString();\n\n    return new Array(64 - hashHex.length).join('0') + hashHex;\n  };\n\n  /**\n   * Calculate a hash from a hex string\n   * @param {String} hexStr Value to hash.\n   * @returns {String} Hex-encoded hash.\n   * @private\n   */\n\n\n  AuthenticationHelper.prototype.hexHash = function hexHash(hexStr) {\n    return this.hash(Buffer.from(hexStr, 'hex'));\n  };\n\n  /**\n   * Standard hkdf algorithm\n   * @param {Buffer} ikm Input key material.\n   * @param {Buffer} salt Salt value.\n   * @returns {Buffer} Strong key material.\n   * @private\n   */\n\n\n  AuthenticationHelper.prototype.computehkdf = function computehkdf(ikm, salt) {\n    var infoBitsWordArray = CryptoJS.lib.WordArray.create(Buffer.concat([this.infoBits, Buffer.from(String.fromCharCode(1), 'utf8')]));\n    var ikmWordArray = ikm instanceof Buffer ? CryptoJS.lib.WordArray.create(ikm) : ikm;\n    var saltWordArray = salt instanceof Buffer ? CryptoJS.lib.WordArray.create(salt) : salt;\n\n    var prk = HmacSHA256(ikmWordArray, saltWordArray);\n    var hmac = HmacSHA256(infoBitsWordArray, prk);\n    return Buffer.from(hmac.toString(), 'hex').slice(0, 16);\n  };\n\n  /**\n   * Calculates the final hkdf based on computed S value, and computed U value and the key\n   * @param {String} username Username.\n   * @param {String} password Password.\n   * @param {BigInteger} serverBValue Server B value.\n   * @param {BigInteger} salt Generated salt.\n   * @param {nodeCallback<Buffer>} callback Called with (err, hkdfValue)\n   * @returns {void}\n   */\n\n\n  AuthenticationHelper.prototype.getPasswordAuthenticationKey = function getPasswordAuthenticationKey(username, password, serverBValue, salt, callback) {\n    var _this4 = this;\n\n    if (serverBValue.mod(this.N).equals(BigInteger.ZERO)) {\n      throw new Error('B cannot be zero.');\n    }\n\n    this.UValue = this.calculateU(this.largeAValue, serverBValue);\n\n    if (this.UValue.equals(BigInteger.ZERO)) {\n      throw new Error('U cannot be zero.');\n    }\n\n    var usernamePassword = '' + this.poolName + username + ':' + password;\n    var usernamePasswordHash = this.hash(usernamePassword);\n\n    var xValue = new BigInteger(this.hexHash(this.padHex(salt) + usernamePasswordHash), 16);\n    this.calculateS(xValue, serverBValue, function (err, sValue) {\n      if (err) {\n        callback(err, null);\n      }\n\n      var hkdf = _this4.computehkdf(Buffer.from(_this4.padHex(sValue), 'hex'), Buffer.from(_this4.padHex(_this4.UValue.toString(16)), 'hex'));\n\n      callback(null, hkdf);\n    });\n  };\n\n  /**\n   * Calculates the S value used in getPasswordAuthenticationKey\n   * @param {BigInteger} xValue Salted password hash value.\n   * @param {BigInteger} serverBValue Server B value.\n   * @param {nodeCallback<string>} callback Called on success or error.\n   * @returns {void}\n   */\n\n\n  AuthenticationHelper.prototype.calculateS = function calculateS(xValue, serverBValue, callback) {\n    var _this5 = this;\n\n    this.g.modPow(xValue, this.N, function (err, gModPowXN) {\n      if (err) {\n        callback(err, null);\n      }\n\n      var intValue2 = serverBValue.subtract(_this5.k.multiply(gModPowXN));\n      intValue2.modPow(_this5.smallAValue.add(_this5.UValue.multiply(xValue)), _this5.N, function (err2, result) {\n        if (err2) {\n          callback(err2, null);\n        }\n\n        callback(null, result.mod(_this5.N));\n      });\n    });\n  };\n\n  /**\n  * Return constant newPasswordRequiredChallengeUserAttributePrefix\n  * @return {newPasswordRequiredChallengeUserAttributePrefix} constant prefix value\n  */\n\n\n  AuthenticationHelper.prototype.getNewPasswordRequiredChallengeUserAttributePrefix = function getNewPasswordRequiredChallengeUserAttributePrefix() {\n    return newPasswordRequiredChallengeUserAttributePrefix;\n  };\n\n  /**\n   * Converts a BigInteger (or hex string) to hex format padded with zeroes for hashing\n   * @param {BigInteger|String} bigInt Number or string to pad.\n   * @returns {String} Padded hex string.\n   */\n\n\n  AuthenticationHelper.prototype.padHex = function padHex(bigInt) {\n    var hashStr = bigInt.toString(16);\n    if (hashStr.length % 2 === 1) {\n      hashStr = '0' + hashStr;\n    } else if ('89ABCDEFabcdef'.indexOf(hashStr[0]) !== -1) {\n      hashStr = '00' + hashStr;\n    }\n    return hashStr;\n  };\n\n  return AuthenticationHelper;\n}();\n\nexport default AuthenticationHelper;","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/*!\n * Copyright 2016 Amazon.com,\n * Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Amazon Software License (the \"License\").\n * You may not use this file except in compliance with the\n * License. A copy of the License is located at\n *\n *     http://aws.amazon.com/asl/\n *\n * or in the \"license\" file accompanying this file. This file is\n * distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, express or implied. See the License\n * for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Buffer } from 'buffer/';\n\n/** @class */\n\nvar CognitoJwtToken = function () {\n  /**\n   * Constructs a new CognitoJwtToken object\n   * @param {string=} token The JWT token.\n   */\n  function CognitoJwtToken(token) {\n    _classCallCheck(this, CognitoJwtToken);\n\n    // Assign object\n    this.jwtToken = token || '';\n    this.payload = this.decodePayload();\n  }\n\n  /**\n   * @returns {string} the record's token.\n   */\n\n\n  CognitoJwtToken.prototype.getJwtToken = function getJwtToken() {\n    return this.jwtToken;\n  };\n\n  /**\n   * @returns {int} the token's expiration (exp member).\n   */\n\n\n  CognitoJwtToken.prototype.getExpiration = function getExpiration() {\n    return this.payload.exp;\n  };\n\n  /**\n   * @returns {int} the token's \"issued at\" (iat member).\n   */\n\n\n  CognitoJwtToken.prototype.getIssuedAt = function getIssuedAt() {\n    return this.payload.iat;\n  };\n\n  /**\n   * @returns {object} the token's payload.\n   */\n\n\n  CognitoJwtToken.prototype.decodePayload = function decodePayload() {\n    var payload = this.jwtToken.split('.')[1];\n    try {\n      return JSON.parse(Buffer.from(payload, 'base64').toString('utf8'));\n    } catch (err) {\n      return {};\n    }\n  };\n\n  return CognitoJwtToken;\n}();\n\nexport default CognitoJwtToken;","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/*\n * Copyright 2016 Amazon.com,\n * Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Amazon Software License (the \"License\").\n * You may not use this file except in compliance with the\n * License. A copy of the License is located at\n *\n *     http://aws.amazon.com/asl/\n *\n * or in the \"license\" file accompanying this file. This file is\n * distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, express or implied. See the License\n * for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport CognitoJwtToken from './CognitoJwtToken';\n\n/** @class */\n\nvar CognitoAccessToken = function (_CognitoJwtToken) {\n  _inherits(CognitoAccessToken, _CognitoJwtToken);\n\n  /**\n   * Constructs a new CognitoAccessToken object\n   * @param {string=} AccessToken The JWT access token.\n   */\n  function CognitoAccessToken() {\n    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        AccessToken = _ref.AccessToken;\n\n    _classCallCheck(this, CognitoAccessToken);\n\n    return _possibleConstructorReturn(this, _CognitoJwtToken.call(this, AccessToken || ''));\n  }\n\n  return CognitoAccessToken;\n}(CognitoJwtToken);\n\nexport default CognitoAccessToken;","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/*!\n * Copyright 2016 Amazon.com,\n * Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Amazon Software License (the \"License\").\n * You may not use this file except in compliance with the\n * License. A copy of the License is located at\n *\n *     http://aws.amazon.com/asl/\n *\n * or in the \"license\" file accompanying this file. This file is\n * distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, express or implied. See the License\n * for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport CognitoJwtToken from './CognitoJwtToken';\n\n/** @class */\n\nvar CognitoIdToken = function (_CognitoJwtToken) {\n  _inherits(CognitoIdToken, _CognitoJwtToken);\n\n  /**\n   * Constructs a new CognitoIdToken object\n   * @param {string=} IdToken The JWT Id token\n   */\n  function CognitoIdToken() {\n    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        IdToken = _ref.IdToken;\n\n    _classCallCheck(this, CognitoIdToken);\n\n    return _possibleConstructorReturn(this, _CognitoJwtToken.call(this, IdToken || ''));\n  }\n\n  return CognitoIdToken;\n}(CognitoJwtToken);\n\nexport default CognitoIdToken;","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/*!\n * Copyright 2016 Amazon.com,\n * Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Amazon Software License (the \"License\").\n * You may not use this file except in compliance with the\n * License. A copy of the License is located at\n *\n *     http://aws.amazon.com/asl/\n *\n * or in the \"license\" file accompanying this file. This file is\n * distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, express or implied. See the License\n * for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @class */\nvar CognitoRefreshToken = function () {\n  /**\n   * Constructs a new CognitoRefreshToken object\n   * @param {string=} RefreshToken The JWT refresh token.\n   */\n  function CognitoRefreshToken() {\n    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        RefreshToken = _ref.RefreshToken;\n\n    _classCallCheck(this, CognitoRefreshToken);\n\n    // Assign object\n    this.token = RefreshToken || '';\n  }\n\n  /**\n   * @returns {string} the record's token.\n   */\n\n\n  CognitoRefreshToken.prototype.getToken = function getToken() {\n    return this.token;\n  };\n\n  return CognitoRefreshToken;\n}();\n\nexport default CognitoRefreshToken;","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/*!\n * Copyright 2016 Amazon.com,\n * Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Amazon Software License (the \"License\").\n * You may not use this file except in compliance with the\n * License. A copy of the License is located at\n *\n *     http://aws.amazon.com/asl/\n *\n * or in the \"license\" file accompanying this file. This file is\n * distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, express or implied. See the License\n * for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @class */\nvar CognitoUserSession = function () {\n  /**\n   * Constructs a new CognitoUserSession object\n   * @param {CognitoIdToken} IdToken The session's Id token.\n   * @param {CognitoRefreshToken=} RefreshToken The session's refresh token.\n   * @param {CognitoAccessToken} AccessToken The session's access token.\n   * @param {int} ClockDrift The saved computer's clock drift or undefined to force calculation.\n   */\n  function CognitoUserSession() {\n    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        IdToken = _ref.IdToken,\n        RefreshToken = _ref.RefreshToken,\n        AccessToken = _ref.AccessToken,\n        ClockDrift = _ref.ClockDrift;\n\n    _classCallCheck(this, CognitoUserSession);\n\n    if (AccessToken == null || IdToken == null) {\n      throw new Error('Id token and Access Token must be present.');\n    }\n\n    this.idToken = IdToken;\n    this.refreshToken = RefreshToken;\n    this.accessToken = AccessToken;\n    this.clockDrift = ClockDrift === undefined ? this.calculateClockDrift() : ClockDrift;\n  }\n\n  /**\n   * @returns {CognitoIdToken} the session's Id token\n   */\n\n\n  CognitoUserSession.prototype.getIdToken = function getIdToken() {\n    return this.idToken;\n  };\n\n  /**\n   * @returns {CognitoRefreshToken} the session's refresh token\n   */\n\n\n  CognitoUserSession.prototype.getRefreshToken = function getRefreshToken() {\n    return this.refreshToken;\n  };\n\n  /**\n   * @returns {CognitoAccessToken} the session's access token\n   */\n\n\n  CognitoUserSession.prototype.getAccessToken = function getAccessToken() {\n    return this.accessToken;\n  };\n\n  /**\n   * @returns {int} the session's clock drift\n   */\n\n\n  CognitoUserSession.prototype.getClockDrift = function getClockDrift() {\n    return this.clockDrift;\n  };\n\n  /**\n   * @returns {int} the computer's clock drift\n   */\n\n\n  CognitoUserSession.prototype.calculateClockDrift = function calculateClockDrift() {\n    var now = Math.floor(new Date() / 1000);\n    var iat = Math.min(this.accessToken.getIssuedAt(), this.idToken.getIssuedAt());\n\n    return now - iat;\n  };\n\n  /**\n   * Checks to see if the session is still valid based on session expiry information found\n   * in tokens and the current time (adjusted with clock drift)\n   * @returns {boolean} if the session is still valid\n   */\n\n\n  CognitoUserSession.prototype.isValid = function isValid() {\n    var now = Math.floor(new Date() / 1000);\n    var adjusted = now - this.clockDrift;\n\n    return adjusted < this.accessToken.getExpiration() && adjusted < this.idToken.getExpiration();\n  };\n\n  return CognitoUserSession;\n}();\n\nexport default CognitoUserSession;","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/*!\n * Copyright 2016 Amazon.com,\n * Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Amazon Software License (the \"License\").\n * You may not use this file except in compliance with the\n * License. A copy of the License is located at\n *\n *     http://aws.amazon.com/asl/\n *\n * or in the \"license\" file accompanying this file. This file is\n * distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, express or implied. See the License\n * for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar monthNames = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\nvar weekNames = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n\n/** @class */\n\nvar DateHelper = function () {\n  function DateHelper() {\n    _classCallCheck(this, DateHelper);\n  }\n\n  /**\n   * @returns {string} The current time in \"ddd MMM D HH:mm:ss UTC YYYY\" format.\n   */\n  DateHelper.prototype.getNowString = function getNowString() {\n    var now = new Date();\n\n    var weekDay = weekNames[now.getUTCDay()];\n    var month = monthNames[now.getUTCMonth()];\n    var day = now.getUTCDate();\n\n    var hours = now.getUTCHours();\n    if (hours < 10) {\n      hours = '0' + hours;\n    }\n\n    var minutes = now.getUTCMinutes();\n    if (minutes < 10) {\n      minutes = '0' + minutes;\n    }\n\n    var seconds = now.getUTCSeconds();\n    if (seconds < 10) {\n      seconds = '0' + seconds;\n    }\n\n    var year = now.getUTCFullYear();\n\n    // ddd MMM D HH:mm:ss UTC YYYY\n    var dateNow = weekDay + ' ' + month + ' ' + day + ' ' + hours + ':' + minutes + ':' + seconds + ' UTC ' + year;\n\n    return dateNow;\n  };\n\n  return DateHelper;\n}();\n\nexport default DateHelper;","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/*!\n * Copyright 2016 Amazon.com,\n * Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Amazon Software License (the \"License\").\n * You may not use this file except in compliance with the\n * License. A copy of the License is located at\n *\n *     http://aws.amazon.com/asl/\n *\n * or in the \"license\" file accompanying this file. This file is\n * distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, express or implied. See the License\n * for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @class */\nvar CognitoUserAttribute = function () {\n  /**\n   * Constructs a new CognitoUserAttribute object\n   * @param {string=} Name The record's name\n   * @param {string=} Value The record's value\n   */\n  function CognitoUserAttribute() {\n    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        Name = _ref.Name,\n        Value = _ref.Value;\n\n    _classCallCheck(this, CognitoUserAttribute);\n\n    this.Name = Name || '';\n    this.Value = Value || '';\n  }\n\n  /**\n   * @returns {string} the record's value.\n   */\n\n\n  CognitoUserAttribute.prototype.getValue = function getValue() {\n    return this.Value;\n  };\n\n  /**\n   * Sets the record's value.\n   * @param {string} value The new value.\n   * @returns {CognitoUserAttribute} The record for method chaining.\n   */\n\n\n  CognitoUserAttribute.prototype.setValue = function setValue(value) {\n    this.Value = value;\n    return this;\n  };\n\n  /**\n   * @returns {string} the record's name.\n   */\n\n\n  CognitoUserAttribute.prototype.getName = function getName() {\n    return this.Name;\n  };\n\n  /**\n   * Sets the record's name\n   * @param {string} name The new name.\n   * @returns {CognitoUserAttribute} The record for method chaining.\n   */\n\n\n  CognitoUserAttribute.prototype.setName = function setName(name) {\n    this.Name = name;\n    return this;\n  };\n\n  /**\n   * @returns {string} a string representation of the record.\n   */\n\n\n  CognitoUserAttribute.prototype.toString = function toString() {\n    return JSON.stringify(this);\n  };\n\n  /**\n   * @returns {object} a flat object representing the record.\n   */\n\n\n  CognitoUserAttribute.prototype.toJSON = function toJSON() {\n    return {\n      Name: this.Name,\n      Value: this.Value\n    };\n  };\n\n  return CognitoUserAttribute;\n}();\n\nexport default CognitoUserAttribute;","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/*!\n * Copyright 2016 Amazon.com,\n * Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Amazon Software License (the \"License\").\n * You may not use this file except in compliance with the\n * License. A copy of the License is located at\n *\n *     http://aws.amazon.com/asl/\n *\n * or in the \"license\" file accompanying this file. This file is\n * distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, express or implied. See the License\n * for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar dataMemory = {};\n\n/** @class */\n\nvar MemoryStorage = function () {\n  function MemoryStorage() {\n    _classCallCheck(this, MemoryStorage);\n  }\n\n  /**\n   * This is used to set a specific item in storage\n   * @param {string} key - the key for the item\n   * @param {object} value - the value\n   * @returns {string} value that was set\n   */\n  MemoryStorage.setItem = function setItem(key, value) {\n    dataMemory[key] = value;\n    return dataMemory[key];\n  };\n\n  /**\n   * This is used to get a specific key from storage\n   * @param {string} key - the key for the item\n   * This is used to clear the storage\n   * @returns {string} the data item\n   */\n\n\n  MemoryStorage.getItem = function getItem(key) {\n    return Object.prototype.hasOwnProperty.call(dataMemory, key) ? dataMemory[key] : undefined;\n  };\n\n  /**\n   * This is used to remove an item from storage\n   * @param {string} key - the key being set\n   * @returns {string} value - value that was deleted\n   */\n\n\n  MemoryStorage.removeItem = function removeItem(key) {\n    return delete dataMemory[key];\n  };\n\n  /**\n   * This is used to clear the storage\n   * @returns {string} nothing\n   */\n\n\n  MemoryStorage.clear = function clear() {\n    dataMemory = {};\n    return dataMemory;\n  };\n\n  return MemoryStorage;\n}();\n\n/** @class */\n\n\nvar StorageHelper = function () {\n\n  /**\n   * This is used to get a storage object\n   * @returns {object} the storage\n   */\n  function StorageHelper() {\n    _classCallCheck(this, StorageHelper);\n\n    try {\n      this.storageWindow = window.localStorage;\n      this.storageWindow.setItem('aws.cognito.test-ls', 1);\n      this.storageWindow.removeItem('aws.cognito.test-ls');\n    } catch (exception) {\n      this.storageWindow = MemoryStorage;\n    }\n  }\n\n  /**\n   * This is used to return the storage\n   * @returns {object} the storage\n   */\n\n\n  StorageHelper.prototype.getStorage = function getStorage() {\n    return this.storageWindow;\n  };\n\n  return StorageHelper;\n}();\n\nexport default StorageHelper;","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/*!\n * Copyright 2016 Amazon.com,\n * Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Amazon Software License (the \"License\").\n * You may not use this file except in compliance with the\n * License. A copy of the License is located at\n *\n *     http://aws.amazon.com/asl/\n *\n * or in the \"license\" file accompanying this file. This file is\n * distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, express or implied. See the License\n * for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Buffer } from 'buffer/';\nimport CryptoJS from 'crypto-js/core';\nimport TypedArrays from 'crypto-js/lib-typedarrays'; // necessary for crypto js\nimport Base64 from 'crypto-js/enc-base64';\nimport HmacSHA256 from 'crypto-js/hmac-sha256';\n\nimport BigInteger from './BigInteger';\nimport AuthenticationHelper from './AuthenticationHelper';\nimport CognitoAccessToken from './CognitoAccessToken';\nimport CognitoIdToken from './CognitoIdToken';\nimport CognitoRefreshToken from './CognitoRefreshToken';\nimport CognitoUserSession from './CognitoUserSession';\nimport DateHelper from './DateHelper';\nimport CognitoUserAttribute from './CognitoUserAttribute';\nimport StorageHelper from './StorageHelper';\n\n/**\n * @callback nodeCallback\n * @template T result\n * @param {*} err The operation failure reason, or null.\n * @param {T} result The operation result.\n */\n\n/**\n * @callback onFailure\n * @param {*} err Failure reason.\n */\n\n/**\n * @callback onSuccess\n * @template T result\n * @param {T} result The operation result.\n */\n\n/**\n * @callback mfaRequired\n * @param {*} details MFA challenge details.\n */\n\n/**\n * @callback customChallenge\n * @param {*} details Custom challenge details.\n */\n\n/**\n * @callback inputVerificationCode\n * @param {*} data Server response.\n */\n\n/**\n * @callback authSuccess\n * @param {CognitoUserSession} session The new session.\n * @param {bool=} userConfirmationNecessary User must be confirmed.\n */\n\n/** @class */\n\nvar CognitoUser = function () {\n  /**\n   * Constructs a new CognitoUser object\n   * @param {object} data Creation options\n   * @param {string} data.Username The user's username.\n   * @param {CognitoUserPool} data.Pool Pool containing the user.\n   * @param {object} data.Storage Optional storage object.\n   */\n  function CognitoUser(data) {\n    _classCallCheck(this, CognitoUser);\n\n    if (data == null || data.Username == null || data.Pool == null) {\n      throw new Error('Username and pool information are required.');\n    }\n\n    this.username = data.Username || '';\n    this.pool = data.Pool;\n    this.Session = null;\n\n    this.client = data.Pool.client;\n\n    this.signInUserSession = null;\n    this.authenticationFlowType = 'USER_SRP_AUTH';\n\n    this.storage = data.Storage || new StorageHelper().getStorage();\n\n    this.keyPrefix = 'CognitoIdentityServiceProvider.' + this.pool.getClientId();\n    this.userDataKey = this.keyPrefix + '.' + this.username + '.userData';\n  }\n\n  /**\n   * Sets the session for this user\n   * @param {CognitoUserSession} signInUserSession the session\n   * @returns {void}\n   */\n\n\n  CognitoUser.prototype.setSignInUserSession = function setSignInUserSession(signInUserSession) {\n    this.clearCachedUserData();\n    this.signInUserSession = signInUserSession;\n    this.cacheTokens();\n  };\n\n  /**\n   * @returns {CognitoUserSession} the current session for this user\n   */\n\n\n  CognitoUser.prototype.getSignInUserSession = function getSignInUserSession() {\n    return this.signInUserSession;\n  };\n\n  /**\n   * @returns {string} the user's username\n   */\n\n\n  CognitoUser.prototype.getUsername = function getUsername() {\n    return this.username;\n  };\n\n  /**\n   * @returns {String} the authentication flow type\n   */\n\n\n  CognitoUser.prototype.getAuthenticationFlowType = function getAuthenticationFlowType() {\n    return this.authenticationFlowType;\n  };\n\n  /**\n   * sets authentication flow type\n   * @param {string} authenticationFlowType New value.\n   * @returns {void}\n   */\n\n\n  CognitoUser.prototype.setAuthenticationFlowType = function setAuthenticationFlowType(authenticationFlowType) {\n    this.authenticationFlowType = authenticationFlowType;\n  };\n\n  /**\n   * This is used for authenticating the user through the custom authentication flow.\n   * @param {AuthenticationDetails} authDetails Contains the authentication data\n   * @param {object} callback Result callback map.\n   * @param {onFailure} callback.onFailure Called on any error.\n   * @param {customChallenge} callback.customChallenge Custom challenge\n   *        response required to continue.\n   * @param {authSuccess} callback.onSuccess Called on success with the new session.\n   * @returns {void}\n   */\n\n\n  CognitoUser.prototype.initiateAuth = function initiateAuth(authDetails, callback) {\n    var _this = this;\n\n    var authParameters = authDetails.getAuthParameters();\n    authParameters.USERNAME = this.username;\n\n    var jsonReq = {\n      AuthFlow: 'CUSTOM_AUTH',\n      ClientId: this.pool.getClientId(),\n      AuthParameters: authParameters,\n      ClientMetadata: authDetails.getValidationData()\n    };\n    if (this.getUserContextData()) {\n      jsonReq.UserContextData = this.getUserContextData();\n    }\n\n    this.client.request('InitiateAuth', jsonReq, function (err, data) {\n      if (err) {\n        return callback.onFailure(err);\n      }\n      var challengeName = data.ChallengeName;\n      var challengeParameters = data.ChallengeParameters;\n\n      if (challengeName === 'CUSTOM_CHALLENGE') {\n        _this.Session = data.Session;\n        return callback.customChallenge(challengeParameters);\n      }\n      _this.signInUserSession = _this.getCognitoUserSession(data.AuthenticationResult);\n      _this.cacheTokens();\n      return callback.onSuccess(_this.signInUserSession);\n    });\n  };\n\n  /**\n   * This is used for authenticating the user.\n   * stuff\n   * @param {AuthenticationDetails} authDetails Contains the authentication data\n   * @param {object} callback Result callback map.\n   * @param {onFailure} callback.onFailure Called on any error.\n   * @param {newPasswordRequired} callback.newPasswordRequired new\n   *        password and any required attributes are required to continue\n   * @param {mfaRequired} callback.mfaRequired MFA code\n   *        required to continue.\n   * @param {customChallenge} callback.customChallenge Custom challenge\n   *        response required to continue.\n   * @param {authSuccess} callback.onSuccess Called on success with the new session.\n   * @returns {void}\n   */\n\n\n  CognitoUser.prototype.authenticateUser = function authenticateUser(authDetails, callback) {\n    if (this.authenticationFlowType === 'USER_PASSWORD_AUTH') {\n      return this.authenticateUserPlainUsernamePassword(authDetails, callback);\n    } else if (this.authenticationFlowType === 'USER_SRP_AUTH' || this.authenticationFlowType === 'CUSTOM_AUTH') {\n      return this.authenticateUserDefaultAuth(authDetails, callback);\n    }\n    return callback.onFailure(new Error('Authentication flow type is invalid.'));\n  };\n\n  /**\n   * PRIVATE ONLY: This is an internal only method and should not\n   * be directly called by the consumers.\n   * It calls the AuthenticationHelper for SRP related\n   * stuff\n   * @param {AuthenticationDetails} authDetails Contains the authentication data\n   * @param {object} callback Result callback map.\n   * @param {onFailure} callback.onFailure Called on any error.\n   * @param {newPasswordRequired} callback.newPasswordRequired new\n   *        password and any required attributes are required to continue\n   * @param {mfaRequired} callback.mfaRequired MFA code\n   *        required to continue.\n   * @param {customChallenge} callback.customChallenge Custom challenge\n   *        response required to continue.\n   * @param {authSuccess} callback.onSuccess Called on success with the new session.\n   * @returns {void}\n   */\n\n\n  CognitoUser.prototype.authenticateUserDefaultAuth = function authenticateUserDefaultAuth(authDetails, callback) {\n    var _this2 = this;\n\n    var authenticationHelper = new AuthenticationHelper(this.pool.getUserPoolId().split('_')[1]);\n    var dateHelper = new DateHelper();\n\n    var serverBValue = void 0;\n    var salt = void 0;\n    var authParameters = {};\n\n    if (this.deviceKey != null) {\n      authParameters.DEVICE_KEY = this.deviceKey;\n    }\n\n    authParameters.USERNAME = this.username;\n    authenticationHelper.getLargeAValue(function (errOnAValue, aValue) {\n      // getLargeAValue callback start\n      if (errOnAValue) {\n        callback.onFailure(errOnAValue);\n      }\n\n      authParameters.SRP_A = aValue.toString(16);\n\n      if (_this2.authenticationFlowType === 'CUSTOM_AUTH') {\n        authParameters.CHALLENGE_NAME = 'SRP_A';\n      }\n\n      var jsonReq = {\n        AuthFlow: _this2.authenticationFlowType,\n        ClientId: _this2.pool.getClientId(),\n        AuthParameters: authParameters,\n        ClientMetadata: authDetails.getValidationData()\n      };\n      if (_this2.getUserContextData(_this2.username)) {\n        jsonReq.UserContextData = _this2.getUserContextData(_this2.username);\n      }\n\n      _this2.client.request('InitiateAuth', jsonReq, function (err, data) {\n        if (err) {\n          return callback.onFailure(err);\n        }\n\n        var challengeParameters = data.ChallengeParameters;\n\n        _this2.username = challengeParameters.USER_ID_FOR_SRP;\n        serverBValue = new BigInteger(challengeParameters.SRP_B, 16);\n        salt = new BigInteger(challengeParameters.SALT, 16);\n        _this2.getCachedDeviceKeyAndPassword();\n\n        authenticationHelper.getPasswordAuthenticationKey(_this2.username, authDetails.getPassword(), serverBValue, salt, function (errOnHkdf, hkdf) {\n          // getPasswordAuthenticationKey callback start\n          if (errOnHkdf) {\n            callback.onFailure(errOnHkdf);\n          }\n\n          var dateNow = dateHelper.getNowString();\n\n          var message = CryptoJS.lib.WordArray.create(Buffer.concat([Buffer.from(_this2.pool.getUserPoolId().split('_')[1], 'utf8'), Buffer.from(_this2.username, 'utf8'), Buffer.from(challengeParameters.SECRET_BLOCK, 'base64'), Buffer.from(dateNow, 'utf8')]));\n          var key = CryptoJS.lib.WordArray.create(hkdf);\n          var signatureString = Base64.stringify(HmacSHA256(message, key));\n\n          var challengeResponses = {};\n\n          challengeResponses.USERNAME = _this2.username;\n          challengeResponses.PASSWORD_CLAIM_SECRET_BLOCK = challengeParameters.SECRET_BLOCK;\n          challengeResponses.TIMESTAMP = dateNow;\n          challengeResponses.PASSWORD_CLAIM_SIGNATURE = signatureString;\n\n          if (_this2.deviceKey != null) {\n            challengeResponses.DEVICE_KEY = _this2.deviceKey;\n          }\n\n          var respondToAuthChallenge = function respondToAuthChallenge(challenge, challengeCallback) {\n            return _this2.client.request('RespondToAuthChallenge', challenge, function (errChallenge, dataChallenge) {\n              if (errChallenge && errChallenge.code === 'ResourceNotFoundException' && errChallenge.message.toLowerCase().indexOf('device') !== -1) {\n                challengeResponses.DEVICE_KEY = null;\n                _this2.deviceKey = null;\n                _this2.randomPassword = null;\n                _this2.deviceGroupKey = null;\n                _this2.clearCachedDeviceKeyAndPassword();\n                return respondToAuthChallenge(challenge, challengeCallback);\n              }\n              return challengeCallback(errChallenge, dataChallenge);\n            });\n          };\n\n          var jsonReqResp = {\n            ChallengeName: 'PASSWORD_VERIFIER',\n            ClientId: _this2.pool.getClientId(),\n            ChallengeResponses: challengeResponses,\n            Session: data.Session\n          };\n          if (_this2.getUserContextData()) {\n            jsonReqResp.UserContextData = _this2.getUserContextData();\n          }\n          respondToAuthChallenge(jsonReqResp, function (errAuthenticate, dataAuthenticate) {\n            if (errAuthenticate) {\n              return callback.onFailure(errAuthenticate);\n            }\n\n            return _this2.authenticateUserInternal(dataAuthenticate, authenticationHelper, callback);\n          });\n          return undefined;\n          // getPasswordAuthenticationKey callback end\n        });\n        return undefined;\n      });\n      // getLargeAValue callback end\n    });\n  };\n\n  /**\n   * PRIVATE ONLY: This is an internal only method and should not\n   * be directly called by the consumers.\n   * @param {AuthenticationDetails} authDetails Contains the authentication data.\n   * @param {object} callback Result callback map.\n   * @param {onFailure} callback.onFailure Called on any error.\n   * @param {mfaRequired} callback.mfaRequired MFA code\n   *        required to continue.\n   * @param {authSuccess} callback.onSuccess Called on success with the new session.\n   * @returns {void}\n   */\n\n\n  CognitoUser.prototype.authenticateUserPlainUsernamePassword = function authenticateUserPlainUsernamePassword(authDetails, callback) {\n    var _this3 = this;\n\n    var authParameters = {};\n    authParameters.USERNAME = this.username;\n    authParameters.PASSWORD = authDetails.getPassword();\n    if (!authParameters.PASSWORD) {\n      callback.onFailure(new Error('PASSWORD parameter is required'));\n      return;\n    }\n    var authenticationHelper = new AuthenticationHelper(this.pool.getUserPoolId().split('_')[1]);\n    this.getCachedDeviceKeyAndPassword();\n    if (this.deviceKey != null) {\n      authParameters.DEVICE_KEY = this.deviceKey;\n    }\n\n    var jsonReq = {\n      AuthFlow: 'USER_PASSWORD_AUTH',\n      ClientId: this.pool.getClientId(),\n      AuthParameters: authParameters,\n      ClientMetadata: authDetails.getValidationData()\n    };\n    if (this.getUserContextData(this.username)) {\n      jsonReq.UserContextData = this.getUserContextData(this.username);\n    }\n    // USER_PASSWORD_AUTH happens in a single round-trip: client sends userName and password,\n    // Cognito UserPools verifies password and returns tokens.\n    this.client.request('InitiateAuth', jsonReq, function (err, authResult) {\n      if (err) {\n        return callback.onFailure(err);\n      }\n      return _this3.authenticateUserInternal(authResult, authenticationHelper, callback);\n    });\n  };\n\n  /**\n  * PRIVATE ONLY: This is an internal only method and should not\n  * be directly called by the consumers.\n  * @param {object} dataAuthenticate authentication data\n  * @param {object} authenticationHelper helper created\n  * @param {callback} callback passed on from caller\n  * @returns {void}\n  */\n\n\n  CognitoUser.prototype.authenticateUserInternal = function authenticateUserInternal(dataAuthenticate, authenticationHelper, callback) {\n    var _this4 = this;\n\n    var challengeName = dataAuthenticate.ChallengeName;\n    var challengeParameters = dataAuthenticate.ChallengeParameters;\n\n    if (challengeName === 'SMS_MFA') {\n      this.Session = dataAuthenticate.Session;\n      return callback.mfaRequired(challengeName, challengeParameters);\n    }\n\n    if (challengeName === 'SELECT_MFA_TYPE') {\n      this.Session = dataAuthenticate.Session;\n      return callback.selectMFAType(challengeName, challengeParameters);\n    }\n\n    if (challengeName === 'MFA_SETUP') {\n      this.Session = dataAuthenticate.Session;\n      return callback.mfaSetup(challengeName, challengeParameters);\n    }\n\n    if (challengeName === 'SOFTWARE_TOKEN_MFA') {\n      this.Session = dataAuthenticate.Session;\n      return callback.totpRequired(challengeName, challengeParameters);\n    }\n\n    if (challengeName === 'CUSTOM_CHALLENGE') {\n      this.Session = dataAuthenticate.Session;\n      return callback.customChallenge(challengeParameters);\n    }\n\n    if (challengeName === 'NEW_PASSWORD_REQUIRED') {\n      this.Session = dataAuthenticate.Session;\n\n      var userAttributes = null;\n      var rawRequiredAttributes = null;\n      var requiredAttributes = [];\n      var userAttributesPrefix = authenticationHelper.getNewPasswordRequiredChallengeUserAttributePrefix();\n\n      if (challengeParameters) {\n        userAttributes = JSON.parse(dataAuthenticate.ChallengeParameters.userAttributes);\n        rawRequiredAttributes = JSON.parse(dataAuthenticate.ChallengeParameters.requiredAttributes);\n      }\n\n      if (rawRequiredAttributes) {\n        for (var i = 0; i < rawRequiredAttributes.length; i++) {\n          requiredAttributes[i] = rawRequiredAttributes[i].substr(userAttributesPrefix.length);\n        }\n      }\n      return callback.newPasswordRequired(userAttributes, requiredAttributes);\n    }\n\n    if (challengeName === 'DEVICE_SRP_AUTH') {\n      this.getDeviceResponse(callback);\n      return undefined;\n    }\n\n    this.signInUserSession = this.getCognitoUserSession(dataAuthenticate.AuthenticationResult);\n    this.challengeName = challengeName;\n    this.cacheTokens();\n\n    var newDeviceMetadata = dataAuthenticate.AuthenticationResult.NewDeviceMetadata;\n    if (newDeviceMetadata == null) {\n      return callback.onSuccess(this.signInUserSession);\n    }\n\n    authenticationHelper.generateHashDevice(dataAuthenticate.AuthenticationResult.NewDeviceMetadata.DeviceGroupKey, dataAuthenticate.AuthenticationResult.NewDeviceMetadata.DeviceKey, function (errGenHash) {\n      if (errGenHash) {\n        return callback.onFailure(errGenHash);\n      }\n\n      var deviceSecretVerifierConfig = {\n        Salt: Buffer.from(authenticationHelper.getSaltDevices(), 'hex').toString('base64'),\n        PasswordVerifier: Buffer.from(authenticationHelper.getVerifierDevices(), 'hex').toString('base64')\n      };\n\n      _this4.verifierDevices = deviceSecretVerifierConfig.PasswordVerifier;\n      _this4.deviceGroupKey = newDeviceMetadata.DeviceGroupKey;\n      _this4.randomPassword = authenticationHelper.getRandomPassword();\n\n      _this4.client.request('ConfirmDevice', {\n        DeviceKey: newDeviceMetadata.DeviceKey,\n        AccessToken: _this4.signInUserSession.getAccessToken().getJwtToken(),\n        DeviceSecretVerifierConfig: deviceSecretVerifierConfig,\n        DeviceName: navigator.userAgent\n      }, function (errConfirm, dataConfirm) {\n        if (errConfirm) {\n          return callback.onFailure(errConfirm);\n        }\n\n        _this4.deviceKey = dataAuthenticate.AuthenticationResult.NewDeviceMetadata.DeviceKey;\n        _this4.cacheDeviceKeyAndPassword();\n        if (dataConfirm.UserConfirmationNecessary === true) {\n          return callback.onSuccess(_this4.signInUserSession, dataConfirm.UserConfirmationNecessary);\n        }\n        return callback.onSuccess(_this4.signInUserSession);\n      });\n      return undefined;\n    });\n    return undefined;\n  };\n\n  /**\n  * This method is user to complete the NEW_PASSWORD_REQUIRED challenge.\n  * Pass the new password with any new user attributes to be updated.\n  * User attribute keys must be of format userAttributes.<attribute_name>.\n  * @param {string} newPassword new password for this user\n  * @param {object} requiredAttributeData map with values for all required attributes\n  * @param {object} callback Result callback map.\n  * @param {onFailure} callback.onFailure Called on any error.\n  * @param {mfaRequired} callback.mfaRequired MFA code required to continue.\n  * @param {customChallenge} callback.customChallenge Custom challenge\n  *         response required to continue.\n  * @param {authSuccess} callback.onSuccess Called on success with the new session.\n  * @returns {void}\n  */\n\n\n  CognitoUser.prototype.completeNewPasswordChallenge = function completeNewPasswordChallenge(newPassword, requiredAttributeData, callback) {\n    var _this5 = this;\n\n    if (!newPassword) {\n      return callback.onFailure(new Error('New password is required.'));\n    }\n    var authenticationHelper = new AuthenticationHelper(this.pool.getUserPoolId().split('_')[1]);\n    var userAttributesPrefix = authenticationHelper.getNewPasswordRequiredChallengeUserAttributePrefix();\n\n    var finalUserAttributes = {};\n    if (requiredAttributeData) {\n      Object.keys(requiredAttributeData).forEach(function (key) {\n        finalUserAttributes[userAttributesPrefix + key] = requiredAttributeData[key];\n      });\n    }\n\n    finalUserAttributes.NEW_PASSWORD = newPassword;\n    finalUserAttributes.USERNAME = this.username;\n    var jsonReq = {\n      ChallengeName: 'NEW_PASSWORD_REQUIRED',\n      ClientId: this.pool.getClientId(),\n      ChallengeResponses: finalUserAttributes,\n      Session: this.Session\n    };\n    if (this.getUserContextData()) {\n      jsonReq.UserContextData = this.getUserContextData();\n    }\n\n    this.client.request('RespondToAuthChallenge', jsonReq, function (errAuthenticate, dataAuthenticate) {\n      if (errAuthenticate) {\n        return callback.onFailure(errAuthenticate);\n      }\n      return _this5.authenticateUserInternal(dataAuthenticate, authenticationHelper, callback);\n    });\n    return undefined;\n  };\n\n  /**\n   * This is used to get a session using device authentication. It is called at the end of user\n   * authentication\n   *\n   * @param {object} callback Result callback map.\n   * @param {onFailure} callback.onFailure Called on any error.\n   * @param {authSuccess} callback.onSuccess Called on success with the new session.\n   * @returns {void}\n   * @private\n   */\n\n\n  CognitoUser.prototype.getDeviceResponse = function getDeviceResponse(callback) {\n    var _this6 = this;\n\n    var authenticationHelper = new AuthenticationHelper(this.deviceGroupKey);\n    var dateHelper = new DateHelper();\n\n    var authParameters = {};\n\n    authParameters.USERNAME = this.username;\n    authParameters.DEVICE_KEY = this.deviceKey;\n    authenticationHelper.getLargeAValue(function (errAValue, aValue) {\n      // getLargeAValue callback start\n      if (errAValue) {\n        callback.onFailure(errAValue);\n      }\n\n      authParameters.SRP_A = aValue.toString(16);\n\n      var jsonReq = {\n        ChallengeName: 'DEVICE_SRP_AUTH',\n        ClientId: _this6.pool.getClientId(),\n        ChallengeResponses: authParameters\n      };\n      if (_this6.getUserContextData()) {\n        jsonReq.UserContextData = _this6.getUserContextData();\n      }\n      _this6.client.request('RespondToAuthChallenge', jsonReq, function (err, data) {\n        if (err) {\n          return callback.onFailure(err);\n        }\n\n        var challengeParameters = data.ChallengeParameters;\n\n        var serverBValue = new BigInteger(challengeParameters.SRP_B, 16);\n        var salt = new BigInteger(challengeParameters.SALT, 16);\n\n        authenticationHelper.getPasswordAuthenticationKey(_this6.deviceKey, _this6.randomPassword, serverBValue, salt, function (errHkdf, hkdf) {\n          // getPasswordAuthenticationKey callback start\n          if (errHkdf) {\n            return callback.onFailure(errHkdf);\n          }\n\n          var dateNow = dateHelper.getNowString();\n\n          var message = CryptoJS.lib.WordArray.create(Buffer.concat([Buffer.from(_this6.deviceGroupKey, 'utf8'), Buffer.from(_this6.deviceKey, 'utf8'), Buffer.from(challengeParameters.SECRET_BLOCK, 'base64'), Buffer.from(dateNow, 'utf8')]));\n          var key = CryptoJS.lib.WordArray.create(hkdf);\n          var signatureString = Base64.stringify(HmacSHA256(message, key));\n\n          var challengeResponses = {};\n\n          challengeResponses.USERNAME = _this6.username;\n          challengeResponses.PASSWORD_CLAIM_SECRET_BLOCK = challengeParameters.SECRET_BLOCK;\n          challengeResponses.TIMESTAMP = dateNow;\n          challengeResponses.PASSWORD_CLAIM_SIGNATURE = signatureString;\n          challengeResponses.DEVICE_KEY = _this6.deviceKey;\n\n          var jsonReqResp = {\n            ChallengeName: 'DEVICE_PASSWORD_VERIFIER',\n            ClientId: _this6.pool.getClientId(),\n            ChallengeResponses: challengeResponses,\n            Session: data.Session\n          };\n          if (_this6.getUserContextData()) {\n            jsonReqResp.UserContextData = _this6.getUserContextData();\n          }\n\n          _this6.client.request('RespondToAuthChallenge', jsonReqResp, function (errAuthenticate, dataAuthenticate) {\n            if (errAuthenticate) {\n              return callback.onFailure(errAuthenticate);\n            }\n\n            _this6.signInUserSession = _this6.getCognitoUserSession(dataAuthenticate.AuthenticationResult);\n            _this6.cacheTokens();\n\n            return callback.onSuccess(_this6.signInUserSession);\n          });\n          return undefined;\n          // getPasswordAuthenticationKey callback end\n        });\n        return undefined;\n      });\n      // getLargeAValue callback end\n    });\n  };\n\n  /**\n   * This is used for a certain user to confirm the registration by using a confirmation code\n   * @param {string} confirmationCode Code entered by user.\n   * @param {bool} forceAliasCreation Allow migrating from an existing email / phone number.\n   * @param {nodeCallback<string>} callback Called on success or error.\n   * @returns {void}\n   */\n\n\n  CognitoUser.prototype.confirmRegistration = function confirmRegistration(confirmationCode, forceAliasCreation, callback) {\n    var jsonReq = {\n      ClientId: this.pool.getClientId(),\n      ConfirmationCode: confirmationCode,\n      Username: this.username,\n      ForceAliasCreation: forceAliasCreation\n    };\n    if (this.getUserContextData()) {\n      jsonReq.UserContextData = this.getUserContextData();\n    }\n    this.client.request('ConfirmSignUp', jsonReq, function (err) {\n      if (err) {\n        return callback(err, null);\n      }\n      return callback(null, 'SUCCESS');\n    });\n  };\n\n  /**\n   * This is used by the user once he has the responses to a custom challenge\n   * @param {string} answerChallenge The custom challenge answer.\n   * @param {object} callback Result callback map.\n   * @param {onFailure} callback.onFailure Called on any error.\n   * @param {customChallenge} callback.customChallenge\n   *    Custom challenge response required to continue.\n   * @param {authSuccess} callback.onSuccess Called on success with the new session.\n   * @returns {void}\n   */\n\n\n  CognitoUser.prototype.sendCustomChallengeAnswer = function sendCustomChallengeAnswer(answerChallenge, callback) {\n    var _this7 = this;\n\n    var challengeResponses = {};\n    challengeResponses.USERNAME = this.username;\n    challengeResponses.ANSWER = answerChallenge;\n\n    var authenticationHelper = new AuthenticationHelper(this.pool.getUserPoolId().split('_')[1]);\n    this.getCachedDeviceKeyAndPassword();\n    if (this.deviceKey != null) {\n      challengeResponses.DEVICE_KEY = this.deviceKey;\n    }\n\n    var jsonReq = {\n      ChallengeName: 'CUSTOM_CHALLENGE',\n      ChallengeResponses: challengeResponses,\n      ClientId: this.pool.getClientId(),\n      Session: this.Session\n    };\n    if (this.getUserContextData()) {\n      jsonReq.UserContextData = this.getUserContextData();\n    }\n    this.client.request('RespondToAuthChallenge', jsonReq, function (err, data) {\n      if (err) {\n        return callback.onFailure(err);\n      }\n\n      return _this7.authenticateUserInternal(data, authenticationHelper, callback);\n    });\n  };\n\n  /**\n   * This is used by the user once he has an MFA code\n   * @param {string} confirmationCode The MFA code entered by the user.\n   * @param {object} callback Result callback map.\n   * @param {string} mfaType The mfa we are replying to.\n   * @param {onFailure} callback.onFailure Called on any error.\n   * @param {authSuccess} callback.onSuccess Called on success with the new session.\n   * @returns {void}\n   */\n\n\n  CognitoUser.prototype.sendMFACode = function sendMFACode(confirmationCode, callback, mfaType) {\n    var _this8 = this;\n\n    var challengeResponses = {};\n    challengeResponses.USERNAME = this.username;\n    challengeResponses.SMS_MFA_CODE = confirmationCode;\n    var mfaTypeSelection = mfaType || 'SMS_MFA';\n    if (mfaTypeSelection === 'SOFTWARE_TOKEN_MFA') {\n      challengeResponses.SOFTWARE_TOKEN_MFA_CODE = confirmationCode;\n    }\n\n    if (this.deviceKey != null) {\n      challengeResponses.DEVICE_KEY = this.deviceKey;\n    }\n\n    var jsonReq = {\n      ChallengeName: mfaTypeSelection,\n      ChallengeResponses: challengeResponses,\n      ClientId: this.pool.getClientId(),\n      Session: this.Session\n    };\n    if (this.getUserContextData()) {\n      jsonReq.UserContextData = this.getUserContextData();\n    }\n\n    this.client.request('RespondToAuthChallenge', jsonReq, function (err, dataAuthenticate) {\n      if (err) {\n        return callback.onFailure(err);\n      }\n\n      var challengeName = dataAuthenticate.ChallengeName;\n\n      if (challengeName === 'DEVICE_SRP_AUTH') {\n        _this8.getDeviceResponse(callback);\n        return undefined;\n      }\n\n      _this8.signInUserSession = _this8.getCognitoUserSession(dataAuthenticate.AuthenticationResult);\n      _this8.cacheTokens();\n\n      if (dataAuthenticate.AuthenticationResult.NewDeviceMetadata == null) {\n        return callback.onSuccess(_this8.signInUserSession);\n      }\n\n      var authenticationHelper = new AuthenticationHelper(_this8.pool.getUserPoolId().split('_')[1]);\n      authenticationHelper.generateHashDevice(dataAuthenticate.AuthenticationResult.NewDeviceMetadata.DeviceGroupKey, dataAuthenticate.AuthenticationResult.NewDeviceMetadata.DeviceKey, function (errGenHash) {\n        if (errGenHash) {\n          return callback.onFailure(errGenHash);\n        }\n\n        var deviceSecretVerifierConfig = {\n          Salt: Buffer.from(authenticationHelper.getSaltDevices(), 'hex').toString('base64'),\n          PasswordVerifier: Buffer.from(authenticationHelper.getVerifierDevices(), 'hex').toString('base64')\n        };\n\n        _this8.verifierDevices = deviceSecretVerifierConfig.PasswordVerifier;\n        _this8.deviceGroupKey = dataAuthenticate.AuthenticationResult.NewDeviceMetadata.DeviceGroupKey;\n        _this8.randomPassword = authenticationHelper.getRandomPassword();\n\n        _this8.client.request('ConfirmDevice', {\n          DeviceKey: dataAuthenticate.AuthenticationResult.NewDeviceMetadata.DeviceKey,\n          AccessToken: _this8.signInUserSession.getAccessToken().getJwtToken(),\n          DeviceSecretVerifierConfig: deviceSecretVerifierConfig,\n          DeviceName: navigator.userAgent\n        }, function (errConfirm, dataConfirm) {\n          if (errConfirm) {\n            return callback.onFailure(errConfirm);\n          }\n\n          _this8.deviceKey = dataAuthenticate.AuthenticationResult.NewDeviceMetadata.DeviceKey;\n          _this8.cacheDeviceKeyAndPassword();\n          if (dataConfirm.UserConfirmationNecessary === true) {\n            return callback.onSuccess(_this8.signInUserSession, dataConfirm.UserConfirmationNecessary);\n          }\n          return callback.onSuccess(_this8.signInUserSession);\n        });\n        return undefined;\n      });\n      return undefined;\n    });\n  };\n\n  /**\n   * This is used by an authenticated user to change the current password\n   * @param {string} oldUserPassword The current password.\n   * @param {string} newUserPassword The requested new password.\n   * @param {nodeCallback<string>} callback Called on success or error.\n   * @returns {void}\n   */\n\n\n  CognitoUser.prototype.changePassword = function changePassword(oldUserPassword, newUserPassword, callback) {\n    if (!(this.signInUserSession != null && this.signInUserSession.isValid())) {\n      return callback(new Error('User is not authenticated'), null);\n    }\n\n    this.client.request('ChangePassword', {\n      PreviousPassword: oldUserPassword,\n      ProposedPassword: newUserPassword,\n      AccessToken: this.signInUserSession.getAccessToken().getJwtToken()\n    }, function (err) {\n      if (err) {\n        return callback(err, null);\n      }\n      return callback(null, 'SUCCESS');\n    });\n    return undefined;\n  };\n\n  /**\n   * This is used by an authenticated user to enable MFA for itself\n   * @deprecated\n   * @param {nodeCallback<string>} callback Called on success or error.\n   * @returns {void}\n   */\n\n\n  CognitoUser.prototype.enableMFA = function enableMFA(callback) {\n    if (this.signInUserSession == null || !this.signInUserSession.isValid()) {\n      return callback(new Error('User is not authenticated'), null);\n    }\n\n    var mfaOptions = [];\n    var mfaEnabled = {\n      DeliveryMedium: 'SMS',\n      AttributeName: 'phone_number'\n    };\n    mfaOptions.push(mfaEnabled);\n\n    this.client.request('SetUserSettings', {\n      MFAOptions: mfaOptions,\n      AccessToken: this.signInUserSession.getAccessToken().getJwtToken()\n    }, function (err) {\n      if (err) {\n        return callback(err, null);\n      }\n      return callback(null, 'SUCCESS');\n    });\n    return undefined;\n  };\n\n  /**\n   * This is used by an authenticated user to enable MFA for itself\n   * @param {IMfaSettings} smsMfaSettings the sms mfa settings\n   * @param {IMFASettings} softwareTokenMfaSettings the software token mfa settings\n   * @param {nodeCallback<string>} callback Called on success or error.\n   * @returns {void}\n   */\n\n\n  CognitoUser.prototype.setUserMfaPreference = function setUserMfaPreference(smsMfaSettings, softwareTokenMfaSettings, callback) {\n    if (this.signInUserSession == null || !this.signInUserSession.isValid()) {\n      return callback(new Error('User is not authenticated'), null);\n    }\n\n    this.client.request('SetUserMFAPreference', {\n      SMSMfaSettings: smsMfaSettings,\n      SoftwareTokenMfaSettings: softwareTokenMfaSettings,\n      AccessToken: this.signInUserSession.getAccessToken().getJwtToken()\n    }, function (err) {\n      if (err) {\n        return callback(err, null);\n      }\n      return callback(null, 'SUCCESS');\n    });\n    return undefined;\n  };\n\n  /**\n   * This is used by an authenticated user to disable MFA for itself\n   * @deprecated\n   * @param {nodeCallback<string>} callback Called on success or error.\n   * @returns {void}\n   */\n\n\n  CognitoUser.prototype.disableMFA = function disableMFA(callback) {\n    if (this.signInUserSession == null || !this.signInUserSession.isValid()) {\n      return callback(new Error('User is not authenticated'), null);\n    }\n\n    var mfaOptions = [];\n\n    this.client.request('SetUserSettings', {\n      MFAOptions: mfaOptions,\n      AccessToken: this.signInUserSession.getAccessToken().getJwtToken()\n    }, function (err) {\n      if (err) {\n        return callback(err, null);\n      }\n      return callback(null, 'SUCCESS');\n    });\n    return undefined;\n  };\n\n  /**\n   * This is used by an authenticated user to delete itself\n   * @param {nodeCallback<string>} callback Called on success or error.\n   * @returns {void}\n   */\n\n\n  CognitoUser.prototype.deleteUser = function deleteUser(callback) {\n    var _this9 = this;\n\n    if (this.signInUserSession == null || !this.signInUserSession.isValid()) {\n      return callback(new Error('User is not authenticated'), null);\n    }\n\n    this.client.request('DeleteUser', {\n      AccessToken: this.signInUserSession.getAccessToken().getJwtToken()\n    }, function (err) {\n      if (err) {\n        return callback(err, null);\n      }\n      _this9.clearCachedUser();\n      return callback(null, 'SUCCESS');\n    });\n    return undefined;\n  };\n\n  /**\n   * @typedef {CognitoUserAttribute | { Name:string, Value:string }} AttributeArg\n   */\n  /**\n   * This is used by an authenticated user to change a list of attributes\n   * @param {AttributeArg[]} attributes A list of the new user attributes.\n   * @param {nodeCallback<string>} callback Called on success or error.\n   * @returns {void}\n   */\n\n\n  CognitoUser.prototype.updateAttributes = function updateAttributes(attributes, callback) {\n    if (this.signInUserSession == null || !this.signInUserSession.isValid()) {\n      return callback(new Error('User is not authenticated'), null);\n    }\n\n    this.client.request('UpdateUserAttributes', {\n      AccessToken: this.signInUserSession.getAccessToken().getJwtToken(),\n      UserAttributes: attributes\n    }, function (err) {\n      if (err) {\n        return callback(err, null);\n      }\n      return callback(null, 'SUCCESS');\n    });\n    return undefined;\n  };\n\n  /**\n   * This is used by an authenticated user to get a list of attributes\n   * @param {nodeCallback<CognitoUserAttribute[]>} callback Called on success or error.\n   * @returns {void}\n   */\n\n\n  CognitoUser.prototype.getUserAttributes = function getUserAttributes(callback) {\n    if (!(this.signInUserSession != null && this.signInUserSession.isValid())) {\n      return callback(new Error('User is not authenticated'), null);\n    }\n\n    this.client.request('GetUser', {\n      AccessToken: this.signInUserSession.getAccessToken().getJwtToken()\n    }, function (err, userData) {\n      if (err) {\n        return callback(err, null);\n      }\n\n      var attributeList = [];\n\n      for (var i = 0; i < userData.UserAttributes.length; i++) {\n        var attribute = {\n          Name: userData.UserAttributes[i].Name,\n          Value: userData.UserAttributes[i].Value\n        };\n        var userAttribute = new CognitoUserAttribute(attribute);\n        attributeList.push(userAttribute);\n      }\n\n      return callback(null, attributeList);\n    });\n    return undefined;\n  };\n\n  /**\n   * This is used by an authenticated user to get the MFAOptions\n   * @param {nodeCallback<MFAOptions>} callback Called on success or error.\n   * @returns {void}\n   */\n\n\n  CognitoUser.prototype.getMFAOptions = function getMFAOptions(callback) {\n    if (!(this.signInUserSession != null && this.signInUserSession.isValid())) {\n      return callback(new Error('User is not authenticated'), null);\n    }\n\n    this.client.request('GetUser', {\n      AccessToken: this.signInUserSession.getAccessToken().getJwtToken()\n    }, function (err, userData) {\n      if (err) {\n        return callback(err, null);\n      }\n\n      return callback(null, userData.MFAOptions);\n    });\n    return undefined;\n  };\n\n  /**\n   * This is used by an authenticated users to get the userData\n   * @param {nodeCallback<UserData>} callback Called on success or error.\n   * @returns {void}\n   */\n\n\n  CognitoUser.prototype.getUserData = function getUserData(callback, params) {\n    var _this10 = this;\n\n    if (!(this.signInUserSession != null && this.signInUserSession.isValid())) {\n      this.clearCachedUserData();\n      return callback(new Error('User is not authenticated'), null);\n    }\n\n    var bypassCache = params ? params.bypassCache : false;\n\n    var userData = this.storage.getItem(this.userDataKey);\n    // get the cached user data\n    if (!userData || bypassCache) {\n      this.client.request('GetUser', {\n        AccessToken: this.signInUserSession.getAccessToken().getJwtToken()\n      }, function (err, userData) {\n        if (err) {\n          return callback(err, null);\n        }\n        _this10.cacheUserData(userData);\n        return callback(null, userData);\n      });\n    } else {\n      try {\n        return callback(null, JSON.parse(userData));\n      } catch (err) {\n        this.clearCachedUserData();\n        return callback(err, null);\n      }\n    }\n    return undefined;\n  };\n\n  /**\n   * This is used by an authenticated user to delete a list of attributes\n   * @param {string[]} attributeList Names of the attributes to delete.\n   * @param {nodeCallback<string>} callback Called on success or error.\n   * @returns {void}\n   */\n\n\n  CognitoUser.prototype.deleteAttributes = function deleteAttributes(attributeList, callback) {\n    if (!(this.signInUserSession != null && this.signInUserSession.isValid())) {\n      return callback(new Error('User is not authenticated'), null);\n    }\n\n    this.client.request('DeleteUserAttributes', {\n      UserAttributeNames: attributeList,\n      AccessToken: this.signInUserSession.getAccessToken().getJwtToken()\n    }, function (err) {\n      if (err) {\n        return callback(err, null);\n      }\n      return callback(null, 'SUCCESS');\n    });\n    return undefined;\n  };\n\n  /**\n   * This is used by a user to resend a confirmation code\n   * @param {nodeCallback<string>} callback Called on success or error.\n   * @returns {void}\n   */\n\n\n  CognitoUser.prototype.resendConfirmationCode = function resendConfirmationCode(callback) {\n    var jsonReq = {\n      ClientId: this.pool.getClientId(),\n      Username: this.username\n    };\n\n    this.client.request('ResendConfirmationCode', jsonReq, function (err, result) {\n      if (err) {\n        return callback(err, null);\n      }\n      return callback(null, result);\n    });\n  };\n\n  /**\n   * This is used to get a session, either from the session object\n   * or from  the local storage, or by using a refresh token\n   *\n   * @param {nodeCallback<CognitoUserSession>} callback Called on success or error.\n   * @returns {void}\n   */\n\n\n  CognitoUser.prototype.getSession = function getSession(callback) {\n    if (this.username == null) {\n      return callback(new Error('Username is null. Cannot retrieve a new session'), null);\n    }\n\n    if (this.signInUserSession != null && this.signInUserSession.isValid()) {\n      return callback(null, this.signInUserSession);\n    }\n\n    var keyPrefix = 'CognitoIdentityServiceProvider.' + this.pool.getClientId() + '.' + this.username;\n    var idTokenKey = keyPrefix + '.idToken';\n    var accessTokenKey = keyPrefix + '.accessToken';\n    var refreshTokenKey = keyPrefix + '.refreshToken';\n    var clockDriftKey = keyPrefix + '.clockDrift';\n\n    if (this.storage.getItem(idTokenKey)) {\n      var idToken = new CognitoIdToken({\n        IdToken: this.storage.getItem(idTokenKey)\n      });\n      var accessToken = new CognitoAccessToken({\n        AccessToken: this.storage.getItem(accessTokenKey)\n      });\n      var refreshToken = new CognitoRefreshToken({\n        RefreshToken: this.storage.getItem(refreshTokenKey)\n      });\n      var clockDrift = parseInt(this.storage.getItem(clockDriftKey), 0) || 0;\n\n      var sessionData = {\n        IdToken: idToken,\n        AccessToken: accessToken,\n        RefreshToken: refreshToken,\n        ClockDrift: clockDrift\n      };\n      var cachedSession = new CognitoUserSession(sessionData);\n      if (cachedSession.isValid()) {\n        this.signInUserSession = cachedSession;\n        return callback(null, this.signInUserSession);\n      }\n\n      if (!refreshToken.getToken()) {\n        return callback(new Error('Cannot retrieve a new session. Please authenticate.'), null);\n      }\n\n      this.refreshSession(refreshToken, callback);\n    } else {\n      callback(new Error('Local storage is missing an ID Token, Please authenticate'), null);\n    }\n\n    return undefined;\n  };\n\n  /**\n   * This uses the refreshToken to retrieve a new session\n   * @param {CognitoRefreshToken} refreshToken A previous session's refresh token.\n   * @param {nodeCallback<CognitoUserSession>} callback Called on success or error.\n   * @returns {void}\n   */\n\n\n  CognitoUser.prototype.refreshSession = function refreshSession(refreshToken, callback) {\n    var _this11 = this;\n\n    var authParameters = {};\n    authParameters.REFRESH_TOKEN = refreshToken.getToken();\n    var keyPrefix = 'CognitoIdentityServiceProvider.' + this.pool.getClientId();\n    var lastUserKey = keyPrefix + '.LastAuthUser';\n\n    if (this.storage.getItem(lastUserKey)) {\n      this.username = this.storage.getItem(lastUserKey);\n      var deviceKeyKey = keyPrefix + '.' + this.username + '.deviceKey';\n      this.deviceKey = this.storage.getItem(deviceKeyKey);\n      authParameters.DEVICE_KEY = this.deviceKey;\n    }\n\n    var jsonReq = {\n      ClientId: this.pool.getClientId(),\n      AuthFlow: 'REFRESH_TOKEN_AUTH',\n      AuthParameters: authParameters\n    };\n    if (this.getUserContextData()) {\n      jsonReq.UserContextData = this.getUserContextData();\n    }\n    this.client.request('InitiateAuth', jsonReq, function (err, authResult) {\n      if (err) {\n        if (err.code === 'NotAuthorizedException') {\n          _this11.clearCachedUser();\n        }\n        return callback(err, null);\n      }\n      if (authResult) {\n        var authenticationResult = authResult.AuthenticationResult;\n        if (!Object.prototype.hasOwnProperty.call(authenticationResult, 'RefreshToken')) {\n          authenticationResult.RefreshToken = refreshToken.getToken();\n        }\n        _this11.signInUserSession = _this11.getCognitoUserSession(authenticationResult);\n        _this11.cacheTokens();\n        return callback(null, _this11.signInUserSession);\n      }\n      return undefined;\n    });\n  };\n\n  /**\n   * This is used to save the session tokens to local storage\n   * @returns {void}\n   */\n\n\n  CognitoUser.prototype.cacheTokens = function cacheTokens() {\n    var keyPrefix = 'CognitoIdentityServiceProvider.' + this.pool.getClientId();\n    var idTokenKey = keyPrefix + '.' + this.username + '.idToken';\n    var accessTokenKey = keyPrefix + '.' + this.username + '.accessToken';\n    var refreshTokenKey = keyPrefix + '.' + this.username + '.refreshToken';\n    var clockDriftKey = keyPrefix + '.' + this.username + '.clockDrift';\n    var lastUserKey = keyPrefix + '.LastAuthUser';\n\n    this.storage.setItem(idTokenKey, this.signInUserSession.getIdToken().getJwtToken());\n    this.storage.setItem(accessTokenKey, this.signInUserSession.getAccessToken().getJwtToken());\n    this.storage.setItem(refreshTokenKey, this.signInUserSession.getRefreshToken().getToken());\n    this.storage.setItem(clockDriftKey, '' + this.signInUserSession.getClockDrift());\n    this.storage.setItem(lastUserKey, this.username);\n  };\n\n  /**\n   * This is to cache user data\n   */\n\n\n  CognitoUser.prototype.cacheUserData = function cacheUserData(userData) {\n    this.storage.setItem(this.userDataKey, JSON.stringify(userData));\n  };\n\n  /**\n   * This is to remove cached user data\n   */\n\n\n  CognitoUser.prototype.clearCachedUserData = function clearCachedUserData() {\n    this.storage.removeItem(this.userDataKey);\n  };\n\n  CognitoUser.prototype.clearCachedUser = function clearCachedUser() {\n    this.clearCachedTokens();\n    this.clearCachedUserData();\n  };\n\n  /**\n   * This is used to cache the device key and device group and device password\n   * @returns {void}\n   */\n\n\n  CognitoUser.prototype.cacheDeviceKeyAndPassword = function cacheDeviceKeyAndPassword() {\n    var keyPrefix = 'CognitoIdentityServiceProvider.' + this.pool.getClientId() + '.' + this.username;\n    var deviceKeyKey = keyPrefix + '.deviceKey';\n    var randomPasswordKey = keyPrefix + '.randomPasswordKey';\n    var deviceGroupKeyKey = keyPrefix + '.deviceGroupKey';\n\n    this.storage.setItem(deviceKeyKey, this.deviceKey);\n    this.storage.setItem(randomPasswordKey, this.randomPassword);\n    this.storage.setItem(deviceGroupKeyKey, this.deviceGroupKey);\n  };\n\n  /**\n   * This is used to get current device key and device group and device password\n   * @returns {void}\n   */\n\n\n  CognitoUser.prototype.getCachedDeviceKeyAndPassword = function getCachedDeviceKeyAndPassword() {\n    var keyPrefix = 'CognitoIdentityServiceProvider.' + this.pool.getClientId() + '.' + this.username;\n    var deviceKeyKey = keyPrefix + '.deviceKey';\n    var randomPasswordKey = keyPrefix + '.randomPasswordKey';\n    var deviceGroupKeyKey = keyPrefix + '.deviceGroupKey';\n\n    if (this.storage.getItem(deviceKeyKey)) {\n      this.deviceKey = this.storage.getItem(deviceKeyKey);\n      this.randomPassword = this.storage.getItem(randomPasswordKey);\n      this.deviceGroupKey = this.storage.getItem(deviceGroupKeyKey);\n    }\n  };\n\n  /**\n   * This is used to clear the device key info from local storage\n   * @returns {void}\n   */\n\n\n  CognitoUser.prototype.clearCachedDeviceKeyAndPassword = function clearCachedDeviceKeyAndPassword() {\n    var keyPrefix = 'CognitoIdentityServiceProvider.' + this.pool.getClientId() + '.' + this.username;\n    var deviceKeyKey = keyPrefix + '.deviceKey';\n    var randomPasswordKey = keyPrefix + '.randomPasswordKey';\n    var deviceGroupKeyKey = keyPrefix + '.deviceGroupKey';\n\n    this.storage.removeItem(deviceKeyKey);\n    this.storage.removeItem(randomPasswordKey);\n    this.storage.removeItem(deviceGroupKeyKey);\n  };\n\n  /**\n   * This is used to clear the session tokens from local storage\n   * @returns {void}\n   */\n\n\n  CognitoUser.prototype.clearCachedTokens = function clearCachedTokens() {\n    var keyPrefix = 'CognitoIdentityServiceProvider.' + this.pool.getClientId();\n    var idTokenKey = keyPrefix + '.' + this.username + '.idToken';\n    var accessTokenKey = keyPrefix + '.' + this.username + '.accessToken';\n    var refreshTokenKey = keyPrefix + '.' + this.username + '.refreshToken';\n    var lastUserKey = keyPrefix + '.LastAuthUser';\n    var clockDriftKey = keyPrefix + '.' + this.username + '.clockDrift';\n\n    this.storage.removeItem(idTokenKey);\n    this.storage.removeItem(accessTokenKey);\n    this.storage.removeItem(refreshTokenKey);\n    this.storage.removeItem(lastUserKey);\n    this.storage.removeItem(clockDriftKey);\n  };\n\n  /**\n   * This is used to build a user session from tokens retrieved in the authentication result\n   * @param {object} authResult Successful auth response from server.\n   * @returns {CognitoUserSession} The new user session.\n   * @private\n   */\n\n\n  CognitoUser.prototype.getCognitoUserSession = function getCognitoUserSession(authResult) {\n    var idToken = new CognitoIdToken(authResult);\n    var accessToken = new CognitoAccessToken(authResult);\n    var refreshToken = new CognitoRefreshToken(authResult);\n\n    var sessionData = {\n      IdToken: idToken,\n      AccessToken: accessToken,\n      RefreshToken: refreshToken\n    };\n\n    return new CognitoUserSession(sessionData);\n  };\n\n  /**\n   * This is used to initiate a forgot password request\n   * @param {object} callback Result callback map.\n   * @param {onFailure} callback.onFailure Called on any error.\n   * @param {inputVerificationCode?} callback.inputVerificationCode\n   *    Optional callback raised instead of onSuccess with response data.\n   * @param {onSuccess} callback.onSuccess Called on success.\n   * @returns {void}\n   */\n\n\n  CognitoUser.prototype.forgotPassword = function forgotPassword(callback) {\n    var jsonReq = {\n      ClientId: this.pool.getClientId(),\n      Username: this.username\n    };\n    if (this.getUserContextData()) {\n      jsonReq.UserContextData = this.getUserContextData();\n    }\n    this.client.request('ForgotPassword', jsonReq, function (err, data) {\n      if (err) {\n        return callback.onFailure(err);\n      }\n      if (typeof callback.inputVerificationCode === 'function') {\n        return callback.inputVerificationCode(data);\n      }\n      return callback.onSuccess(data);\n    });\n  };\n\n  /**\n   * This is used to confirm a new password using a confirmationCode\n   * @param {string} confirmationCode Code entered by user.\n   * @param {string} newPassword Confirm new password.\n   * @param {object} callback Result callback map.\n   * @param {onFailure} callback.onFailure Called on any error.\n   * @param {onSuccess<void>} callback.onSuccess Called on success.\n   * @returns {void}\n   */\n\n\n  CognitoUser.prototype.confirmPassword = function confirmPassword(confirmationCode, newPassword, callback) {\n    var jsonReq = {\n      ClientId: this.pool.getClientId(),\n      Username: this.username,\n      ConfirmationCode: confirmationCode,\n      Password: newPassword\n    };\n    if (this.getUserContextData()) {\n      jsonReq.UserContextData = this.getUserContextData();\n    }\n    this.client.request('ConfirmForgotPassword', jsonReq, function (err) {\n      if (err) {\n        return callback.onFailure(err);\n      }\n      return callback.onSuccess();\n    });\n  };\n\n  /**\n   * This is used to initiate an attribute confirmation request\n   * @param {string} attributeName User attribute that needs confirmation.\n   * @param {object} callback Result callback map.\n   * @param {onFailure} callback.onFailure Called on any error.\n   * @param {inputVerificationCode} callback.inputVerificationCode Called on success.\n   * @returns {void}\n   */\n\n\n  CognitoUser.prototype.getAttributeVerificationCode = function getAttributeVerificationCode(attributeName, callback) {\n    if (this.signInUserSession == null || !this.signInUserSession.isValid()) {\n      return callback.onFailure(new Error('User is not authenticated'));\n    }\n\n    this.client.request('GetUserAttributeVerificationCode', {\n      AttributeName: attributeName,\n      AccessToken: this.signInUserSession.getAccessToken().getJwtToken()\n    }, function (err, data) {\n      if (err) {\n        return callback.onFailure(err);\n      }\n      if (typeof callback.inputVerificationCode === 'function') {\n        return callback.inputVerificationCode(data);\n      }\n      return callback.onSuccess();\n    });\n    return undefined;\n  };\n\n  /**\n   * This is used to confirm an attribute using a confirmation code\n   * @param {string} attributeName Attribute being confirmed.\n   * @param {string} confirmationCode Code entered by user.\n   * @param {object} callback Result callback map.\n   * @param {onFailure} callback.onFailure Called on any error.\n   * @param {onSuccess<string>} callback.onSuccess Called on success.\n   * @returns {void}\n   */\n\n\n  CognitoUser.prototype.verifyAttribute = function verifyAttribute(attributeName, confirmationCode, callback) {\n    if (this.signInUserSession == null || !this.signInUserSession.isValid()) {\n      return callback.onFailure(new Error('User is not authenticated'));\n    }\n\n    this.client.request('VerifyUserAttribute', {\n      AttributeName: attributeName,\n      Code: confirmationCode,\n      AccessToken: this.signInUserSession.getAccessToken().getJwtToken()\n    }, function (err) {\n      if (err) {\n        return callback.onFailure(err);\n      }\n      return callback.onSuccess('SUCCESS');\n    });\n    return undefined;\n  };\n\n  /**\n   * This is used to get the device information using the current device key\n   * @param {object} callback Result callback map.\n   * @param {onFailure} callback.onFailure Called on any error.\n   * @param {onSuccess<*>} callback.onSuccess Called on success with device data.\n   * @returns {void}\n   */\n\n\n  CognitoUser.prototype.getDevice = function getDevice(callback) {\n    if (this.signInUserSession == null || !this.signInUserSession.isValid()) {\n      return callback.onFailure(new Error('User is not authenticated'));\n    }\n\n    this.client.request('GetDevice', {\n      AccessToken: this.signInUserSession.getAccessToken().getJwtToken(),\n      DeviceKey: this.deviceKey\n    }, function (err, data) {\n      if (err) {\n        return callback.onFailure(err);\n      }\n      return callback.onSuccess(data);\n    });\n    return undefined;\n  };\n\n  /**\n   * This is used to forget a specific device\n   * @param {string} deviceKey Device key.\n   * @param {object} callback Result callback map.\n   * @param {onFailure} callback.onFailure Called on any error.\n   * @param {onSuccess<string>} callback.onSuccess Called on success.\n   * @returns {void}\n   */\n\n\n  CognitoUser.prototype.forgetSpecificDevice = function forgetSpecificDevice(deviceKey, callback) {\n    if (this.signInUserSession == null || !this.signInUserSession.isValid()) {\n      return callback.onFailure(new Error('User is not authenticated'));\n    }\n\n    this.client.request('ForgetDevice', {\n      AccessToken: this.signInUserSession.getAccessToken().getJwtToken(),\n      DeviceKey: deviceKey\n    }, function (err) {\n      if (err) {\n        return callback.onFailure(err);\n      }\n      return callback.onSuccess('SUCCESS');\n    });\n    return undefined;\n  };\n\n  /**\n   * This is used to forget the current device\n   * @param {object} callback Result callback map.\n   * @param {onFailure} callback.onFailure Called on any error.\n   * @param {onSuccess<string>} callback.onSuccess Called on success.\n   * @returns {void}\n   */\n\n\n  CognitoUser.prototype.forgetDevice = function forgetDevice(callback) {\n    var _this12 = this;\n\n    this.forgetSpecificDevice(this.deviceKey, {\n      onFailure: callback.onFailure,\n      onSuccess: function onSuccess(result) {\n        _this12.deviceKey = null;\n        _this12.deviceGroupKey = null;\n        _this12.randomPassword = null;\n        _this12.clearCachedDeviceKeyAndPassword();\n        return callback.onSuccess(result);\n      }\n    });\n  };\n\n  /**\n   * This is used to set the device status as remembered\n   * @param {object} callback Result callback map.\n   * @param {onFailure} callback.onFailure Called on any error.\n   * @param {onSuccess<string>} callback.onSuccess Called on success.\n   * @returns {void}\n   */\n\n\n  CognitoUser.prototype.setDeviceStatusRemembered = function setDeviceStatusRemembered(callback) {\n    if (this.signInUserSession == null || !this.signInUserSession.isValid()) {\n      return callback.onFailure(new Error('User is not authenticated'));\n    }\n\n    this.client.request('UpdateDeviceStatus', {\n      AccessToken: this.signInUserSession.getAccessToken().getJwtToken(),\n      DeviceKey: this.deviceKey,\n      DeviceRememberedStatus: 'remembered'\n    }, function (err) {\n      if (err) {\n        return callback.onFailure(err);\n      }\n      return callback.onSuccess('SUCCESS');\n    });\n    return undefined;\n  };\n\n  /**\n   * This is used to set the device status as not remembered\n   * @param {object} callback Result callback map.\n   * @param {onFailure} callback.onFailure Called on any error.\n   * @param {onSuccess<string>} callback.onSuccess Called on success.\n   * @returns {void}\n   */\n\n\n  CognitoUser.prototype.setDeviceStatusNotRemembered = function setDeviceStatusNotRemembered(callback) {\n    if (this.signInUserSession == null || !this.signInUserSession.isValid()) {\n      return callback.onFailure(new Error('User is not authenticated'));\n    }\n\n    this.client.request('UpdateDeviceStatus', {\n      AccessToken: this.signInUserSession.getAccessToken().getJwtToken(),\n      DeviceKey: this.deviceKey,\n      DeviceRememberedStatus: 'not_remembered'\n    }, function (err) {\n      if (err) {\n        return callback.onFailure(err);\n      }\n      return callback.onSuccess('SUCCESS');\n    });\n    return undefined;\n  };\n\n  /**\n   * This is used to list all devices for a user\n   *\n   * @param {int} limit the number of devices returned in a call\n   * @param {string} paginationToken the pagination token in case any was returned before\n   * @param {object} callback Result callback map.\n   * @param {onFailure} callback.onFailure Called on any error.\n   * @param {onSuccess<*>} callback.onSuccess Called on success with device list.\n   * @returns {void}\n   */\n\n\n  CognitoUser.prototype.listDevices = function listDevices(limit, paginationToken, callback) {\n    if (this.signInUserSession == null || !this.signInUserSession.isValid()) {\n      return callback.onFailure(new Error('User is not authenticated'));\n    }\n\n    this.client.request('ListDevices', {\n      AccessToken: this.signInUserSession.getAccessToken().getJwtToken(),\n      Limit: limit,\n      PaginationToken: paginationToken\n    }, function (err, data) {\n      if (err) {\n        return callback.onFailure(err);\n      }\n      return callback.onSuccess(data);\n    });\n    return undefined;\n  };\n\n  /**\n   * This is used to globally revoke all tokens issued to a user\n   * @param {object} callback Result callback map.\n   * @param {onFailure} callback.onFailure Called on any error.\n   * @param {onSuccess<string>} callback.onSuccess Called on success.\n   * @returns {void}\n   */\n\n\n  CognitoUser.prototype.globalSignOut = function globalSignOut(callback) {\n    var _this13 = this;\n\n    if (this.signInUserSession == null || !this.signInUserSession.isValid()) {\n      return callback.onFailure(new Error('User is not authenticated'));\n    }\n\n    this.client.request('GlobalSignOut', {\n      AccessToken: this.signInUserSession.getAccessToken().getJwtToken()\n    }, function (err) {\n      if (err) {\n        return callback.onFailure(err);\n      }\n      _this13.clearCachedUser();\n      return callback.onSuccess('SUCCESS');\n    });\n    return undefined;\n  };\n\n  /**\n   * This is used for the user to signOut of the application and clear the cached tokens.\n   * @returns {void}\n   */\n\n\n  CognitoUser.prototype.signOut = function signOut() {\n    this.signInUserSession = null;\n    this.clearCachedUser();\n  };\n\n  /**\n   * This is used by a user trying to select a given MFA\n   * @param {string} answerChallenge the mfa the user wants\n   * @param {nodeCallback<string>} callback Called on success or error.\n   * @returns {void}\n   */\n\n\n  CognitoUser.prototype.sendMFASelectionAnswer = function sendMFASelectionAnswer(answerChallenge, callback) {\n    var _this14 = this;\n\n    var challengeResponses = {};\n    challengeResponses.USERNAME = this.username;\n    challengeResponses.ANSWER = answerChallenge;\n\n    var jsonReq = {\n      ChallengeName: 'SELECT_MFA_TYPE',\n      ChallengeResponses: challengeResponses,\n      ClientId: this.pool.getClientId(),\n      Session: this.Session\n    };\n    if (this.getUserContextData()) {\n      jsonReq.UserContextData = this.getUserContextData();\n    }\n    this.client.request('RespondToAuthChallenge', jsonReq, function (err, data) {\n      if (err) {\n        return callback.onFailure(err);\n      }\n      _this14.Session = data.Session;\n      if (answerChallenge === 'SMS_MFA') {\n        return callback.mfaRequired(data.challengeName, data.challengeParameters);\n      }\n      if (answerChallenge === 'SOFTWARE_TOKEN_MFA') {\n        return callback.totpRequired(data.challengeName, data.challengeParameters);\n      }\n      return undefined;\n    });\n  };\n\n  /**\n   * This returns the user context data for advanced security feature.\n   * @returns {void}\n   */\n\n\n  CognitoUser.prototype.getUserContextData = function getUserContextData() {\n    var pool = this.pool;\n    return pool.getUserContextData(this.username);\n  };\n\n  /**\n   * This is used by an authenticated or a user trying to authenticate to associate a TOTP MFA\n   * @param {nodeCallback<string>} callback Called on success or error.\n   * @returns {void}\n   */\n\n\n  CognitoUser.prototype.associateSoftwareToken = function associateSoftwareToken(callback) {\n    var _this15 = this;\n\n    if (!(this.signInUserSession != null && this.signInUserSession.isValid())) {\n      this.client.request('AssociateSoftwareToken', {\n        Session: this.Session\n      }, function (err, data) {\n        if (err) {\n          return callback.onFailure(err);\n        }\n        _this15.Session = data.Session;\n        return callback.associateSecretCode(data.SecretCode);\n      });\n    } else {\n      this.client.request('AssociateSoftwareToken', {\n        AccessToken: this.signInUserSession.getAccessToken().getJwtToken()\n      }, function (err, data) {\n        if (err) {\n          return callback.onFailure(err);\n        }\n        return callback.associateSecretCode(data.SecretCode);\n      });\n    }\n  };\n\n  /**\n   * This is used by an authenticated or a user trying to authenticate to verify a TOTP MFA\n   * @param {string} totpCode The MFA code entered by the user.\n   * @param {string} friendlyDeviceName The device name we are assigning to the device.\n   * @param {nodeCallback<string>} callback Called on success or error.\n   * @returns {void}\n   */\n\n\n  CognitoUser.prototype.verifySoftwareToken = function verifySoftwareToken(totpCode, friendlyDeviceName, callback) {\n    var _this16 = this;\n\n    if (!(this.signInUserSession != null && this.signInUserSession.isValid())) {\n      this.client.request('VerifySoftwareToken', {\n        Session: this.Session,\n        UserCode: totpCode,\n        FriendlyDeviceName: friendlyDeviceName\n      }, function (err, data) {\n        if (err) {\n          return callback.onFailure(err);\n        }\n        _this16.Session = data.Session;\n        var challengeResponses = {};\n        challengeResponses.USERNAME = _this16.username;\n        var jsonReq = {\n          ChallengeName: 'MFA_SETUP',\n          ClientId: _this16.pool.getClientId(),\n          ChallengeResponses: challengeResponses,\n          Session: _this16.Session\n        };\n        if (_this16.getUserContextData()) {\n          jsonReq.UserContextData = _this16.getUserContextData();\n        }\n        _this16.client.request('RespondToAuthChallenge', jsonReq, function (errRespond, dataRespond) {\n          if (errRespond) {\n            return callback.onFailure(errRespond);\n          }\n          _this16.signInUserSession = _this16.getCognitoUserSession(dataRespond.AuthenticationResult);\n          _this16.cacheTokens();\n          return callback.onSuccess(_this16.signInUserSession);\n        });\n        return undefined;\n      });\n    } else {\n      this.client.request('VerifySoftwareToken', {\n        AccessToken: this.signInUserSession.getAccessToken().getJwtToken(),\n        UserCode: totpCode,\n        FriendlyDeviceName: friendlyDeviceName\n      }, function (err, data) {\n        if (err) {\n          return callback.onFailure(err);\n        }\n        return callback.onSuccess(data);\n      });\n    }\n  };\n\n  return CognitoUser;\n}();\n\nexport default CognitoUser;","// class for defining the amzn user-agent\nexport default UserAgent;\n// constructor\nfunction UserAgent() {}\n// public\nUserAgent.prototype.userAgent = 'aws-amplify/0.1.x js';","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nimport UserAgent from './UserAgent';\n/** @class */\n\nvar Client = function () {\n  /**\n   * Constructs a new AWS Cognito Identity Provider client object\n   * @param {string} region AWS region\n   * @param {string} endpoint endpoint\n   */\n  function Client(region, endpoint) {\n    _classCallCheck(this, Client);\n\n    this.endpoint = endpoint || 'https://cognito-idp.' + region + '.amazonaws.com/';\n    this.userAgent = UserAgent.prototype.userAgent || 'aws-amplify/0.1.x js';\n  }\n\n  /**\n   * Makes an unauthenticated request on AWS Cognito Identity Provider API\n   * using fetch\n   * @param {string} operation API operation\n   * @param {object} params Input parameters\n   * @param {function} callback Callback called when a response is returned\n   * @returns {void}\n  */\n\n\n  Client.prototype.request = function request(operation, params, callback) {\n    var headers = {\n      'Content-Type': 'application/x-amz-json-1.1',\n      'X-Amz-Target': 'AWSCognitoIdentityProviderService.' + operation,\n      'X-Amz-User-Agent': this.userAgent\n    };\n\n    var options = {\n      headers: headers,\n      method: 'POST',\n      mode: 'cors',\n      cache: 'no-cache',\n      body: JSON.stringify(params)\n    };\n\n    var response = void 0;\n    var responseJsonData = void 0;\n\n    fetch(this.endpoint, options).then(function (resp) {\n      response = resp;\n      return resp;\n    }, function (err) {\n      // If error happens here, the request failed\n      // if it is TypeError throw network error\n      if (err instanceof TypeError) {\n        throw new Error('Network error');\n      }\n      throw err;\n    }).then(function (resp) {\n      return resp.json().catch(function () {\n        return {};\n      });\n    }).then(function (data) {\n      // return parsed body stream\n      if (response.ok) return callback(null, data);\n      responseJsonData = data;\n\n      // Taken from aws-sdk-js/lib/protocol/json.js\n      // eslint-disable-next-line no-underscore-dangle\n      var code = (data.__type || data.code).split('#').pop();\n      var error = {\n        code: code,\n        name: code,\n        message: data.message || data.Message || null\n      };\n      return callback(error);\n    }).catch(function (err) {\n      // first check if we have a service error\n      if (response && response.headers && response.headers.get('x-amzn-errortype')) {\n        try {\n          var code = response.headers.get('x-amzn-errortype').split(':')[0];\n          var error = {\n            code: code,\n            name: code,\n            statusCode: response.status,\n            message: response.status ? response.status.toString() : null\n          };\n          return callback(error);\n        } catch (ex) {\n          return callback(err);\n        }\n        // otherwise check if error is Network error\n      } else if (err instanceof Error && err.message === 'Network error') {\n        var _error = {\n          code: 'NetworkError',\n          name: err.name,\n          message: err.message\n        };\n        return callback(_error);\n      } else {\n        return callback(err);\n      }\n    });\n  };\n\n  return Client;\n}();\n\nexport default Client;","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/*!\n * Copyright 2016 Amazon.com,\n * Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Amazon Software License (the \"License\").\n * You may not use this file except in compliance with the\n * License. A copy of the License is located at\n *\n *     http://aws.amazon.com/asl/\n *\n * or in the \"license\" file accompanying this file. This file is\n * distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, express or implied. See the License\n * for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Client from './Client';\nimport CognitoUser from './CognitoUser';\nimport StorageHelper from './StorageHelper';\n\n/** @class */\n\nvar CognitoUserPool = function () {\n  /**\n   * Constructs a new CognitoUserPool object\n   * @param {object} data Creation options.\n   * @param {string} data.UserPoolId Cognito user pool id.\n   * @param {string} data.ClientId User pool application client id.\n   * @param {object} data.Storage Optional storage object.\n   * @param {boolean} data.AdvancedSecurityDataCollectionFlag Optional:\n   *        boolean flag indicating if the data collection is enabled\n   *        to support cognito advanced security features. By default, this\n   *        flag is set to true.\n   */\n  function CognitoUserPool(data) {\n    _classCallCheck(this, CognitoUserPool);\n\n    var _ref = data || {},\n        UserPoolId = _ref.UserPoolId,\n        ClientId = _ref.ClientId,\n        endpoint = _ref.endpoint,\n        AdvancedSecurityDataCollectionFlag = _ref.AdvancedSecurityDataCollectionFlag;\n\n    if (!UserPoolId || !ClientId) {\n      throw new Error('Both UserPoolId and ClientId are required.');\n    }\n    if (!/^[\\w-]+_.+$/.test(UserPoolId)) {\n      throw new Error('Invalid UserPoolId format.');\n    }\n    var region = UserPoolId.split('_')[0];\n\n    this.userPoolId = UserPoolId;\n    this.clientId = ClientId;\n\n    this.client = new Client(region, endpoint);\n\n    /**\n     * By default, AdvancedSecurityDataCollectionFlag is set to true,\n     * if no input value is provided.\n     */\n    this.advancedSecurityDataCollectionFlag = AdvancedSecurityDataCollectionFlag !== false;\n\n    this.storage = data.Storage || new StorageHelper().getStorage();\n  }\n\n  /**\n   * @returns {string} the user pool id\n   */\n\n\n  CognitoUserPool.prototype.getUserPoolId = function getUserPoolId() {\n    return this.userPoolId;\n  };\n\n  /**\n   * @returns {string} the client id\n   */\n\n\n  CognitoUserPool.prototype.getClientId = function getClientId() {\n    return this.clientId;\n  };\n\n  /**\n   * @typedef {object} SignUpResult\n   * @property {CognitoUser} user New user.\n   * @property {bool} userConfirmed If the user is already confirmed.\n   */\n  /**\n   * method for signing up a user\n   * @param {string} username User's username.\n   * @param {string} password Plain-text initial password entered by user.\n   * @param {(AttributeArg[])=} userAttributes New user attributes.\n   * @param {(AttributeArg[])=} validationData Application metadata.\n   * @param {nodeCallback<SignUpResult>} callback Called on error or with the new user.\n   * @returns {void}\n   */\n\n\n  CognitoUserPool.prototype.signUp = function signUp(username, password, userAttributes, validationData, callback) {\n    var _this = this;\n\n    var jsonReq = {\n      ClientId: this.clientId,\n      Username: username,\n      Password: password,\n      UserAttributes: userAttributes,\n      ValidationData: validationData\n    };\n    if (this.getUserContextData(username)) {\n      jsonReq.UserContextData = this.getUserContextData(username);\n    }\n    this.client.request('SignUp', jsonReq, function (err, data) {\n      if (err) {\n        return callback(err, null);\n      }\n\n      var cognitoUser = {\n        Username: username,\n        Pool: _this,\n        Storage: _this.storage\n      };\n\n      var returnData = {\n        user: new CognitoUser(cognitoUser),\n        userConfirmed: data.UserConfirmed,\n        userSub: data.UserSub\n      };\n\n      return callback(null, returnData);\n    });\n  };\n\n  /**\n   * method for getting the current user of the application from the local storage\n   *\n   * @returns {CognitoUser} the user retrieved from storage\n   */\n\n\n  CognitoUserPool.prototype.getCurrentUser = function getCurrentUser() {\n    var lastUserKey = 'CognitoIdentityServiceProvider.' + this.clientId + '.LastAuthUser';\n\n    var lastAuthUser = this.storage.getItem(lastUserKey);\n    if (lastAuthUser) {\n      var cognitoUser = {\n        Username: lastAuthUser,\n        Pool: this,\n        Storage: this.storage\n      };\n\n      return new CognitoUser(cognitoUser);\n    }\n\n    return null;\n  };\n\n  /**\n   * This method returns the encoded data string used for cognito advanced security feature.\n   * This would be generated only when developer has included the JS used for collecting the\n   * data on their client. Please refer to documentation to know more about using AdvancedSecurity\n   * features\n   * @param {string} username the username for the context data\n   * @returns {string} the user context data\n   **/\n\n\n  CognitoUserPool.prototype.getUserContextData = function getUserContextData(username) {\n    if (typeof AmazonCognitoAdvancedSecurityData === 'undefined') {\n      return undefined;\n    }\n    /* eslint-disable */\n    var amazonCognitoAdvancedSecurityDataConst = AmazonCognitoAdvancedSecurityData;\n    /* eslint-enable */\n\n    if (this.advancedSecurityDataCollectionFlag) {\n      var advancedSecurityData = amazonCognitoAdvancedSecurityDataConst.getData(username, this.userPoolId, this.clientId);\n      if (advancedSecurityData) {\n        var userContextData = {\n          EncodedData: advancedSecurityData\n        };\n        return userContextData;\n      }\n    }\n    return {};\n  };\n\n  return CognitoUserPool;\n}();\n\nexport default CognitoUserPool;","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nimport * as Cookies from 'js-cookie';\n\n/** @class */\n\nvar CookieStorage = function () {\n\n  /**\n   * Constructs a new CookieStorage object\n   * @param {object} data Creation options.\n   * @param {string} data.domain Cookies domain (mandatory).\n   * @param {string} data.path Cookies path (default: '/')\n   * @param {integer} data.expires Cookie expiration (in days, default: 365)\n   * @param {boolean} data.secure Cookie secure flag (default: true)\n   */\n  function CookieStorage(data) {\n    _classCallCheck(this, CookieStorage);\n\n    this.domain = data.domain;\n    if (data.path) {\n      this.path = data.path;\n    } else {\n      this.path = '/';\n    }\n    if (Object.prototype.hasOwnProperty.call(data, 'expires')) {\n      this.expires = data.expires;\n    } else {\n      this.expires = 365;\n    }\n    if (Object.prototype.hasOwnProperty.call(data, 'secure')) {\n      this.secure = data.secure;\n    } else {\n      this.secure = true;\n    }\n  }\n\n  /**\n   * This is used to set a specific item in storage\n   * @param {string} key - the key for the item\n   * @param {object} value - the value\n   * @returns {string} value that was set\n   */\n\n\n  CookieStorage.prototype.setItem = function setItem(key, value) {\n    Cookies.set(key, value, {\n      path: this.path,\n      expires: this.expires,\n      domain: this.domain,\n      secure: this.secure\n    });\n    return Cookies.get(key);\n  };\n\n  /**\n   * This is used to get a specific key from storage\n   * @param {string} key - the key for the item\n   * This is used to clear the storage\n   * @returns {string} the data item\n   */\n\n\n  CookieStorage.prototype.getItem = function getItem(key) {\n    return Cookies.get(key);\n  };\n\n  /**\n   * This is used to remove an item from storage\n   * @param {string} key - the key being set\n   * @returns {string} value - value that was deleted\n   */\n\n\n  CookieStorage.prototype.removeItem = function removeItem(key) {\n    return Cookies.remove(key, {\n      path: this.path,\n      domain: this.domain,\n      secure: this.secure\n    });\n  };\n\n  /**\n   * This is used to clear the storage\n   * @returns {string} nothing\n   */\n\n\n  CookieStorage.prototype.clear = function clear() {\n    var cookies = Cookies.get();\n    var index = void 0;\n    for (index = 0; index < cookies.length; ++index) {\n      Cookies.remove(cookies[index]);\n    }\n    return {};\n  };\n\n  return CookieStorage;\n}();\n\nexport default CookieStorage;","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nconst directives = new WeakMap();\n/**\n * Brands a function as a directive so that lit-html will call the function\n * during template rendering, rather than passing as a value.\n *\n * @param f The directive factory function. Must be a function that returns a\n * function of the signature `(part: Part) => void`. The returned function will\n * be called with the part object\n *\n * @example\n *\n * ```\n * import {directive, html} from 'lit-html';\n *\n * const immutable = directive((v) => (part) => {\n *   if (part.value !== v) {\n *     part.setValue(v)\n *   }\n * });\n * ```\n */\n// tslint:disable-next-line:no-any\nexport const directive = (f) => ((...args) => {\n    const d = f(...args);\n    directives.set(d, true);\n    return d;\n});\nexport const isDirective = (o) => {\n    return typeof o === 'function' && directives.has(o);\n};\n//# sourceMappingURL=directive.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * True if the custom elements polyfill is in use.\n */\nexport const isCEPolyfill = window.customElements !== undefined &&\n    window.customElements.polyfillWrapFlushCallback !==\n        undefined;\n/**\n * Reparents nodes, starting from `startNode` (inclusive) to `endNode`\n * (exclusive), into another container (could be the same container), before\n * `beforeNode`. If `beforeNode` is null, it appends the nodes to the\n * container.\n */\nexport const reparentNodes = (container, start, end = null, before = null) => {\n    let node = start;\n    while (node !== end) {\n        const n = node.nextSibling;\n        container.insertBefore(node, before);\n        node = n;\n    }\n};\n/**\n * Removes nodes, starting from `startNode` (inclusive) to `endNode`\n * (exclusive), from `container`.\n */\nexport const removeNodes = (container, startNode, endNode = null) => {\n    let node = startNode;\n    while (node !== endNode) {\n        const n = node.nextSibling;\n        container.removeChild(node);\n        node = n;\n    }\n};\n//# sourceMappingURL=dom.js.map","/**\n * @license\n * Copyright (c) 2018 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * A sentinel value that signals that a value was handled by a directive and\n * should not be written to the DOM.\n */\nexport const noChange = {};\n/**\n * A sentinel value that signals a NodePart to fully clear its content.\n */\nexport const nothing = {};\n//# sourceMappingURL=part.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * An expression marker with embedded unique key to avoid collision with\n * possible text in templates.\n */\nexport const marker = `{{lit-${String(Math.random()).slice(2)}}}`;\n/**\n * An expression marker used text-positions, multi-binding attributes, and\n * attributes with markup-like text values.\n */\nexport const nodeMarker = `<!--${marker}-->`;\nexport const markerRegex = new RegExp(`${marker}|${nodeMarker}`);\n/**\n * Suffix appended to all bound attribute names.\n */\nexport const boundAttributeSuffix = '$lit$';\n/**\n * An updateable Template that tracks the location of dynamic parts.\n */\nexport class Template {\n    constructor(result, element) {\n        this.parts = [];\n        this.element = element;\n        let index = -1;\n        let partIndex = 0;\n        const nodesToRemove = [];\n        const _prepareTemplate = (template) => {\n            const content = template.content;\n            // Edge needs all 4 parameters present; IE11 needs 3rd parameter to be\n            // null\n            const walker = document.createTreeWalker(content, 133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */, null, false);\n            // Keeps track of the last index associated with a part. We try to delete\n            // unnecessary nodes, but we never want to associate two different parts\n            // to the same index. They must have a constant node between.\n            let lastPartIndex = 0;\n            while (walker.nextNode()) {\n                index++;\n                const node = walker.currentNode;\n                if (node.nodeType === 1 /* Node.ELEMENT_NODE */) {\n                    if (node.hasAttributes()) {\n                        const attributes = node.attributes;\n                        // Per\n                        // https://developer.mozilla.org/en-US/docs/Web/API/NamedNodeMap,\n                        // attributes are not guaranteed to be returned in document order.\n                        // In particular, Edge/IE can return them out of order, so we cannot\n                        // assume a correspondance between part index and attribute index.\n                        let count = 0;\n                        for (let i = 0; i < attributes.length; i++) {\n                            if (attributes[i].value.indexOf(marker) >= 0) {\n                                count++;\n                            }\n                        }\n                        while (count-- > 0) {\n                            // Get the template literal section leading up to the first\n                            // expression in this attribute\n                            const stringForPart = result.strings[partIndex];\n                            // Find the attribute name\n                            const name = lastAttributeNameRegex.exec(stringForPart)[2];\n                            // Find the corresponding attribute\n                            // All bound attributes have had a suffix added in\n                            // TemplateResult#getHTML to opt out of special attribute\n                            // handling. To look up the attribute value we also need to add\n                            // the suffix.\n                            const attributeLookupName = name.toLowerCase() + boundAttributeSuffix;\n                            const attributeValue = node.getAttribute(attributeLookupName);\n                            const strings = attributeValue.split(markerRegex);\n                            this.parts.push({ type: 'attribute', index, name, strings });\n                            node.removeAttribute(attributeLookupName);\n                            partIndex += strings.length - 1;\n                        }\n                    }\n                    if (node.tagName === 'TEMPLATE') {\n                        _prepareTemplate(node);\n                    }\n                }\n                else if (node.nodeType === 3 /* Node.TEXT_NODE */) {\n                    const data = node.data;\n                    if (data.indexOf(marker) >= 0) {\n                        const parent = node.parentNode;\n                        const strings = data.split(markerRegex);\n                        const lastIndex = strings.length - 1;\n                        // Generate a new text node for each literal section\n                        // These nodes are also used as the markers for node parts\n                        for (let i = 0; i < lastIndex; i++) {\n                            parent.insertBefore((strings[i] === '') ? createMarker() :\n                                document.createTextNode(strings[i]), node);\n                            this.parts.push({ type: 'node', index: ++index });\n                        }\n                        // If there's no text, we must insert a comment to mark our place.\n                        // Else, we can trust it will stick around after cloning.\n                        if (strings[lastIndex] === '') {\n                            parent.insertBefore(createMarker(), node);\n                            nodesToRemove.push(node);\n                        }\n                        else {\n                            node.data = strings[lastIndex];\n                        }\n                        // We have a part for each match found\n                        partIndex += lastIndex;\n                    }\n                }\n                else if (node.nodeType === 8 /* Node.COMMENT_NODE */) {\n                    if (node.data === marker) {\n                        const parent = node.parentNode;\n                        // Add a new marker node to be the startNode of the Part if any of\n                        // the following are true:\n                        //  * We don't have a previousSibling\n                        //  * The previousSibling is already the start of a previous part\n                        if (node.previousSibling === null || index === lastPartIndex) {\n                            index++;\n                            parent.insertBefore(createMarker(), node);\n                        }\n                        lastPartIndex = index;\n                        this.parts.push({ type: 'node', index });\n                        // If we don't have a nextSibling, keep this node so we have an end.\n                        // Else, we can remove it to save future costs.\n                        if (node.nextSibling === null) {\n                            node.data = '';\n                        }\n                        else {\n                            nodesToRemove.push(node);\n                            index--;\n                        }\n                        partIndex++;\n                    }\n                    else {\n                        let i = -1;\n                        while ((i = node.data.indexOf(marker, i + 1)) !==\n                            -1) {\n                            // Comment node has a binding marker inside, make an inactive part\n                            // The binding won't work, but subsequent bindings will\n                            // TODO (justinfagnani): consider whether it's even worth it to\n                            // make bindings in comments work\n                            this.parts.push({ type: 'node', index: -1 });\n                        }\n                    }\n                }\n            }\n        };\n        _prepareTemplate(element);\n        // Remove text binding nodes after the walk to not disturb the TreeWalker\n        for (const n of nodesToRemove) {\n            n.parentNode.removeChild(n);\n        }\n    }\n}\nexport const isTemplatePartActive = (part) => part.index !== -1;\n// Allows `document.createComment('')` to be renamed for a\n// small manual size-savings.\nexport const createMarker = () => document.createComment('');\n/**\n * This regex extracts the attribute name preceding an attribute-position\n * expression. It does this by matching the syntax allowed for attributes\n * against the string literal directly preceding the expression, assuming that\n * the expression is in an attribute-value position.\n *\n * See attributes in the HTML spec:\n * https://www.w3.org/TR/html5/syntax.html#attributes-0\n *\n * \"\\0-\\x1F\\x7F-\\x9F\" are Unicode control characters\n *\n * \" \\x09\\x0a\\x0c\\x0d\" are HTML space characters:\n * https://www.w3.org/TR/html5/infrastructure.html#space-character\n *\n * So an attribute is:\n *  * The name: any character except a control character, space character, ('),\n *    (\"), \">\", \"=\", or \"/\"\n *  * Followed by zero or more space characters\n *  * Followed by \"=\"\n *  * Followed by zero or more space characters\n *  * Followed by:\n *    * Any character except space, ('), (\"), \"<\", \">\", \"=\", (`), or\n *    * (\") then any non-(\"), or\n *    * (') then any non-(')\n */\nexport const lastAttributeNameRegex = /([ \\x09\\x0a\\x0c\\x0d])([^\\0-\\x1F\\x7F-\\x9F \\x09\\x0a\\x0c\\x0d\"'>=/]+)([ \\x09\\x0a\\x0c\\x0d]*=[ \\x09\\x0a\\x0c\\x0d]*(?:[^ \\x09\\x0a\\x0c\\x0d\"'`<>=]*|\"[^\"]*|'[^']*))$/;\n//# sourceMappingURL=template.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * @module lit-html\n */\nimport { isCEPolyfill } from './dom.js';\nimport { isTemplatePartActive } from './template.js';\n/**\n * An instance of a `Template` that can be attached to the DOM and updated\n * with new values.\n */\nexport class TemplateInstance {\n    constructor(template, processor, options) {\n        this._parts = [];\n        this.template = template;\n        this.processor = processor;\n        this.options = options;\n    }\n    update(values) {\n        let i = 0;\n        for (const part of this._parts) {\n            if (part !== undefined) {\n                part.setValue(values[i]);\n            }\n            i++;\n        }\n        for (const part of this._parts) {\n            if (part !== undefined) {\n                part.commit();\n            }\n        }\n    }\n    _clone() {\n        // When using the Custom Elements polyfill, clone the node, rather than\n        // importing it, to keep the fragment in the template's document. This\n        // leaves the fragment inert so custom elements won't upgrade and\n        // potentially modify their contents by creating a polyfilled ShadowRoot\n        // while we traverse the tree.\n        const fragment = isCEPolyfill ?\n            this.template.element.content.cloneNode(true) :\n            document.importNode(this.template.element.content, true);\n        const parts = this.template.parts;\n        let partIndex = 0;\n        let nodeIndex = 0;\n        const _prepareInstance = (fragment) => {\n            // Edge needs all 4 parameters present; IE11 needs 3rd parameter to be\n            // null\n            const walker = document.createTreeWalker(fragment, 133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */, null, false);\n            let node = walker.nextNode();\n            // Loop through all the nodes and parts of a template\n            while (partIndex < parts.length && node !== null) {\n                const part = parts[partIndex];\n                // Consecutive Parts may have the same node index, in the case of\n                // multiple bound attributes on an element. So each iteration we either\n                // increment the nodeIndex, if we aren't on a node with a part, or the\n                // partIndex if we are. By not incrementing the nodeIndex when we find a\n                // part, we allow for the next part to be associated with the current\n                // node if neccessasry.\n                if (!isTemplatePartActive(part)) {\n                    this._parts.push(undefined);\n                    partIndex++;\n                }\n                else if (nodeIndex === part.index) {\n                    if (part.type === 'node') {\n                        const part = this.processor.handleTextExpression(this.options);\n                        part.insertAfterNode(node.previousSibling);\n                        this._parts.push(part);\n                    }\n                    else {\n                        this._parts.push(...this.processor.handleAttributeExpressions(node, part.name, part.strings, this.options));\n                    }\n                    partIndex++;\n                }\n                else {\n                    nodeIndex++;\n                    if (node.nodeName === 'TEMPLATE') {\n                        _prepareInstance(node.content);\n                    }\n                    node = walker.nextNode();\n                }\n            }\n        };\n        _prepareInstance(fragment);\n        if (isCEPolyfill) {\n            document.adoptNode(fragment);\n            customElements.upgrade(fragment);\n        }\n        return fragment;\n    }\n}\n//# sourceMappingURL=template-instance.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * @module lit-html\n */\nimport { reparentNodes } from './dom.js';\nimport { boundAttributeSuffix, lastAttributeNameRegex, marker, nodeMarker } from './template.js';\n/**\n * The return type of `html`, which holds a Template and the values from\n * interpolated expressions.\n */\nexport class TemplateResult {\n    constructor(strings, values, type, processor) {\n        this.strings = strings;\n        this.values = values;\n        this.type = type;\n        this.processor = processor;\n    }\n    /**\n     * Returns a string of HTML used to create a `<template>` element.\n     */\n    getHTML() {\n        const endIndex = this.strings.length - 1;\n        let html = '';\n        for (let i = 0; i < endIndex; i++) {\n            const s = this.strings[i];\n            // This exec() call does two things:\n            // 1) Appends a suffix to the bound attribute name to opt out of special\n            // attribute value parsing that IE11 and Edge do, like for style and\n            // many SVG attributes. The Template class also appends the same suffix\n            // when looking up attributes to create Parts.\n            // 2) Adds an unquoted-attribute-safe marker for the first expression in\n            // an attribute. Subsequent attribute expressions will use node markers,\n            // and this is safe since attributes with multiple expressions are\n            // guaranteed to be quoted.\n            const match = lastAttributeNameRegex.exec(s);\n            if (match) {\n                // We're starting a new bound attribute.\n                // Add the safe attribute suffix, and use unquoted-attribute-safe\n                // marker.\n                html += s.substr(0, match.index) + match[1] + match[2] +\n                    boundAttributeSuffix + match[3] + marker;\n            }\n            else {\n                // We're either in a bound node, or trailing bound attribute.\n                // Either way, nodeMarker is safe to use.\n                html += s + nodeMarker;\n            }\n        }\n        return html + this.strings[endIndex];\n    }\n    getTemplateElement() {\n        const template = document.createElement('template');\n        template.innerHTML = this.getHTML();\n        return template;\n    }\n}\n/**\n * A TemplateResult for SVG fragments.\n *\n * This class wraps HTMl in an `<svg>` tag in order to parse its contents in the\n * SVG namespace, then modifies the template to remove the `<svg>` tag so that\n * clones only container the original fragment.\n */\nexport class SVGTemplateResult extends TemplateResult {\n    getHTML() {\n        return `<svg>${super.getHTML()}</svg>`;\n    }\n    getTemplateElement() {\n        const template = super.getTemplateElement();\n        const content = template.content;\n        const svgElement = content.firstChild;\n        content.removeChild(svgElement);\n        reparentNodes(content, svgElement.firstChild);\n        return template;\n    }\n}\n//# sourceMappingURL=template-result.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * @module lit-html\n */\nimport { isDirective } from './directive.js';\nimport { removeNodes } from './dom.js';\nimport { noChange, nothing } from './part.js';\nimport { TemplateInstance } from './template-instance.js';\nimport { TemplateResult } from './template-result.js';\nimport { createMarker } from './template.js';\nexport const isPrimitive = (value) => {\n    return (value === null ||\n        !(typeof value === 'object' || typeof value === 'function'));\n};\n/**\n * Sets attribute values for AttributeParts, so that the value is only set once\n * even if there are multiple parts for an attribute.\n */\nexport class AttributeCommitter {\n    constructor(element, name, strings) {\n        this.dirty = true;\n        this.element = element;\n        this.name = name;\n        this.strings = strings;\n        this.parts = [];\n        for (let i = 0; i < strings.length - 1; i++) {\n            this.parts[i] = this._createPart();\n        }\n    }\n    /**\n     * Creates a single part. Override this to create a differnt type of part.\n     */\n    _createPart() {\n        return new AttributePart(this);\n    }\n    _getValue() {\n        const strings = this.strings;\n        const l = strings.length - 1;\n        let text = '';\n        for (let i = 0; i < l; i++) {\n            text += strings[i];\n            const part = this.parts[i];\n            if (part !== undefined) {\n                const v = part.value;\n                if (v != null &&\n                    (Array.isArray(v) ||\n                        // tslint:disable-next-line:no-any\n                        typeof v !== 'string' && v[Symbol.iterator])) {\n                    for (const t of v) {\n                        text += typeof t === 'string' ? t : String(t);\n                    }\n                }\n                else {\n                    text += typeof v === 'string' ? v : String(v);\n                }\n            }\n        }\n        text += strings[l];\n        return text;\n    }\n    commit() {\n        if (this.dirty) {\n            this.dirty = false;\n            this.element.setAttribute(this.name, this._getValue());\n        }\n    }\n}\nexport class AttributePart {\n    constructor(comitter) {\n        this.value = undefined;\n        this.committer = comitter;\n    }\n    setValue(value) {\n        if (value !== noChange && (!isPrimitive(value) || value !== this.value)) {\n            this.value = value;\n            // If the value is a not a directive, dirty the committer so that it'll\n            // call setAttribute. If the value is a directive, it'll dirty the\n            // committer if it calls setValue().\n            if (!isDirective(value)) {\n                this.committer.dirty = true;\n            }\n        }\n    }\n    commit() {\n        while (isDirective(this.value)) {\n            const directive = this.value;\n            this.value = noChange;\n            directive(this);\n        }\n        if (this.value === noChange) {\n            return;\n        }\n        this.committer.commit();\n    }\n}\nexport class NodePart {\n    constructor(options) {\n        this.value = undefined;\n        this._pendingValue = undefined;\n        this.options = options;\n    }\n    /**\n     * Inserts this part into a container.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    appendInto(container) {\n        this.startNode = container.appendChild(createMarker());\n        this.endNode = container.appendChild(createMarker());\n    }\n    /**\n     * Inserts this part between `ref` and `ref`'s next sibling. Both `ref` and\n     * its next sibling must be static, unchanging nodes such as those that appear\n     * in a literal section of a template.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    insertAfterNode(ref) {\n        this.startNode = ref;\n        this.endNode = ref.nextSibling;\n    }\n    /**\n     * Appends this part into a parent part.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    appendIntoPart(part) {\n        part._insert(this.startNode = createMarker());\n        part._insert(this.endNode = createMarker());\n    }\n    /**\n     * Appends this part after `ref`\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    insertAfterPart(ref) {\n        ref._insert(this.startNode = createMarker());\n        this.endNode = ref.endNode;\n        ref.endNode = this.startNode;\n    }\n    setValue(value) {\n        this._pendingValue = value;\n    }\n    commit() {\n        while (isDirective(this._pendingValue)) {\n            const directive = this._pendingValue;\n            this._pendingValue = noChange;\n            directive(this);\n        }\n        const value = this._pendingValue;\n        if (value === noChange) {\n            return;\n        }\n        if (isPrimitive(value)) {\n            if (value !== this.value) {\n                this._commitText(value);\n            }\n        }\n        else if (value instanceof TemplateResult) {\n            this._commitTemplateResult(value);\n        }\n        else if (value instanceof Node) {\n            this._commitNode(value);\n        }\n        else if (Array.isArray(value) ||\n            // tslint:disable-next-line:no-any\n            value[Symbol.iterator]) {\n            this._commitIterable(value);\n        }\n        else if (value === nothing) {\n            this.value = nothing;\n            this.clear();\n        }\n        else {\n            // Fallback, will render the string representation\n            this._commitText(value);\n        }\n    }\n    _insert(node) {\n        this.endNode.parentNode.insertBefore(node, this.endNode);\n    }\n    _commitNode(value) {\n        if (this.value === value) {\n            return;\n        }\n        this.clear();\n        this._insert(value);\n        this.value = value;\n    }\n    _commitText(value) {\n        const node = this.startNode.nextSibling;\n        value = value == null ? '' : value;\n        if (node === this.endNode.previousSibling &&\n            node.nodeType === 3 /* Node.TEXT_NODE */) {\n            // If we only have a single text node between the markers, we can just\n            // set its value, rather than replacing it.\n            // TODO(justinfagnani): Can we just check if this.value is primitive?\n            node.data = value;\n        }\n        else {\n            this._commitNode(document.createTextNode(typeof value === 'string' ? value : String(value)));\n        }\n        this.value = value;\n    }\n    _commitTemplateResult(value) {\n        const template = this.options.templateFactory(value);\n        if (this.value instanceof TemplateInstance &&\n            this.value.template === template) {\n            this.value.update(value.values);\n        }\n        else {\n            // Make sure we propagate the template processor from the TemplateResult\n            // so that we use its syntax extension, etc. The template factory comes\n            // from the render function options so that it can control template\n            // caching and preprocessing.\n            const instance = new TemplateInstance(template, value.processor, this.options);\n            const fragment = instance._clone();\n            instance.update(value.values);\n            this._commitNode(fragment);\n            this.value = instance;\n        }\n    }\n    _commitIterable(value) {\n        // For an Iterable, we create a new InstancePart per item, then set its\n        // value to the item. This is a little bit of overhead for every item in\n        // an Iterable, but it lets us recurse easily and efficiently update Arrays\n        // of TemplateResults that will be commonly returned from expressions like:\n        // array.map((i) => html`${i}`), by reusing existing TemplateInstances.\n        // If _value is an array, then the previous render was of an\n        // iterable and _value will contain the NodeParts from the previous\n        // render. If _value is not an array, clear this part and make a new\n        // array for NodeParts.\n        if (!Array.isArray(this.value)) {\n            this.value = [];\n            this.clear();\n        }\n        // Lets us keep track of how many items we stamped so we can clear leftover\n        // items from a previous render\n        const itemParts = this.value;\n        let partIndex = 0;\n        let itemPart;\n        for (const item of value) {\n            // Try to reuse an existing part\n            itemPart = itemParts[partIndex];\n            // If no existing part, create a new one\n            if (itemPart === undefined) {\n                itemPart = new NodePart(this.options);\n                itemParts.push(itemPart);\n                if (partIndex === 0) {\n                    itemPart.appendIntoPart(this);\n                }\n                else {\n                    itemPart.insertAfterPart(itemParts[partIndex - 1]);\n                }\n            }\n            itemPart.setValue(item);\n            itemPart.commit();\n            partIndex++;\n        }\n        if (partIndex < itemParts.length) {\n            // Truncate the parts array so _value reflects the current state\n            itemParts.length = partIndex;\n            this.clear(itemPart && itemPart.endNode);\n        }\n    }\n    clear(startNode = this.startNode) {\n        removeNodes(this.startNode.parentNode, startNode.nextSibling, this.endNode);\n    }\n}\n/**\n * Implements a boolean attribute, roughly as defined in the HTML\n * specification.\n *\n * If the value is truthy, then the attribute is present with a value of\n * ''. If the value is falsey, the attribute is removed.\n */\nexport class BooleanAttributePart {\n    constructor(element, name, strings) {\n        this.value = undefined;\n        this._pendingValue = undefined;\n        if (strings.length !== 2 || strings[0] !== '' || strings[1] !== '') {\n            throw new Error('Boolean attributes can only contain a single expression');\n        }\n        this.element = element;\n        this.name = name;\n        this.strings = strings;\n    }\n    setValue(value) {\n        this._pendingValue = value;\n    }\n    commit() {\n        while (isDirective(this._pendingValue)) {\n            const directive = this._pendingValue;\n            this._pendingValue = noChange;\n            directive(this);\n        }\n        if (this._pendingValue === noChange) {\n            return;\n        }\n        const value = !!this._pendingValue;\n        if (this.value !== value) {\n            if (value) {\n                this.element.setAttribute(this.name, '');\n            }\n            else {\n                this.element.removeAttribute(this.name);\n            }\n        }\n        this.value = value;\n        this._pendingValue = noChange;\n    }\n}\n/**\n * Sets attribute values for PropertyParts, so that the value is only set once\n * even if there are multiple parts for a property.\n *\n * If an expression controls the whole property value, then the value is simply\n * assigned to the property under control. If there are string literals or\n * multiple expressions, then the strings are expressions are interpolated into\n * a string first.\n */\nexport class PropertyCommitter extends AttributeCommitter {\n    constructor(element, name, strings) {\n        super(element, name, strings);\n        this.single =\n            (strings.length === 2 && strings[0] === '' && strings[1] === '');\n    }\n    _createPart() {\n        return new PropertyPart(this);\n    }\n    _getValue() {\n        if (this.single) {\n            return this.parts[0].value;\n        }\n        return super._getValue();\n    }\n    commit() {\n        if (this.dirty) {\n            this.dirty = false;\n            // tslint:disable-next-line:no-any\n            this.element[this.name] = this._getValue();\n        }\n    }\n}\nexport class PropertyPart extends AttributePart {\n}\n// Detect event listener options support. If the `capture` property is read\n// from the options object, then options are supported. If not, then the thrid\n// argument to add/removeEventListener is interpreted as the boolean capture\n// value so we should only pass the `capture` property.\nlet eventOptionsSupported = false;\ntry {\n    const options = {\n        get capture() {\n            eventOptionsSupported = true;\n            return false;\n        }\n    };\n    // tslint:disable-next-line:no-any\n    window.addEventListener('test', options, options);\n    // tslint:disable-next-line:no-any\n    window.removeEventListener('test', options, options);\n}\ncatch (_e) {\n}\nexport class EventPart {\n    constructor(element, eventName, eventContext) {\n        this.value = undefined;\n        this._pendingValue = undefined;\n        this.element = element;\n        this.eventName = eventName;\n        this.eventContext = eventContext;\n        this._boundHandleEvent = (e) => this.handleEvent(e);\n    }\n    setValue(value) {\n        this._pendingValue = value;\n    }\n    commit() {\n        while (isDirective(this._pendingValue)) {\n            const directive = this._pendingValue;\n            this._pendingValue = noChange;\n            directive(this);\n        }\n        if (this._pendingValue === noChange) {\n            return;\n        }\n        const newListener = this._pendingValue;\n        const oldListener = this.value;\n        const shouldRemoveListener = newListener == null ||\n            oldListener != null &&\n                (newListener.capture !== oldListener.capture ||\n                    newListener.once !== oldListener.once ||\n                    newListener.passive !== oldListener.passive);\n        const shouldAddListener = newListener != null && (oldListener == null || shouldRemoveListener);\n        if (shouldRemoveListener) {\n            this.element.removeEventListener(this.eventName, this._boundHandleEvent, this._options);\n        }\n        if (shouldAddListener) {\n            this._options = getOptions(newListener);\n            this.element.addEventListener(this.eventName, this._boundHandleEvent, this._options);\n        }\n        this.value = newListener;\n        this._pendingValue = noChange;\n    }\n    handleEvent(event) {\n        if (typeof this.value === 'function') {\n            this.value.call(this.eventContext || this.element, event);\n        }\n        else {\n            this.value.handleEvent(event);\n        }\n    }\n}\n// We copy options because of the inconsistent behavior of browsers when reading\n// the third argument of add/removeEventListener. IE11 doesn't support options\n// at all. Chrome 41 only reads `capture` if the argument is an object.\nconst getOptions = (o) => o &&\n    (eventOptionsSupported ?\n        { capture: o.capture, passive: o.passive, once: o.once } :\n        o.capture);\n//# sourceMappingURL=parts.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { AttributeCommitter, BooleanAttributePart, EventPart, NodePart, PropertyCommitter } from './parts.js';\n/**\n * Creates Parts when a template is instantiated.\n */\nexport class DefaultTemplateProcessor {\n    /**\n     * Create parts for an attribute-position binding, given the event, attribute\n     * name, and string literals.\n     *\n     * @param element The element containing the binding\n     * @param name  The attribute name\n     * @param strings The string literals. There are always at least two strings,\n     *   event for fully-controlled bindings with a single expression.\n     */\n    handleAttributeExpressions(element, name, strings, options) {\n        const prefix = name[0];\n        if (prefix === '.') {\n            const comitter = new PropertyCommitter(element, name.slice(1), strings);\n            return comitter.parts;\n        }\n        if (prefix === '@') {\n            return [new EventPart(element, name.slice(1), options.eventContext)];\n        }\n        if (prefix === '?') {\n            return [new BooleanAttributePart(element, name.slice(1), strings)];\n        }\n        const comitter = new AttributeCommitter(element, name, strings);\n        return comitter.parts;\n    }\n    /**\n     * Create parts for a text-position binding.\n     * @param templateFactory\n     */\n    handleTextExpression(options) {\n        return new NodePart(options);\n    }\n}\nexport const defaultTemplateProcessor = new DefaultTemplateProcessor();\n//# sourceMappingURL=default-template-processor.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { marker, Template } from './template.js';\n/**\n * The default TemplateFactory which caches Templates keyed on\n * result.type and result.strings.\n */\nexport function templateFactory(result) {\n    let templateCache = templateCaches.get(result.type);\n    if (templateCache === undefined) {\n        templateCache = {\n            stringsArray: new WeakMap(),\n            keyString: new Map()\n        };\n        templateCaches.set(result.type, templateCache);\n    }\n    let template = templateCache.stringsArray.get(result.strings);\n    if (template !== undefined) {\n        return template;\n    }\n    // If the TemplateStringsArray is new, generate a key from the strings\n    // This key is shared between all templates with identical content\n    const key = result.strings.join(marker);\n    // Check if we already have a Template for this key\n    template = templateCache.keyString.get(key);\n    if (template === undefined) {\n        // If we have not seen this key before, create a new Template\n        template = new Template(result, result.getTemplateElement());\n        // Cache the Template for this key\n        templateCache.keyString.set(key, template);\n    }\n    // Cache all future queries for this TemplateStringsArray\n    templateCache.stringsArray.set(result.strings, template);\n    return template;\n}\nexport const templateCaches = new Map();\n//# sourceMappingURL=template-factory.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * @module lit-html\n */\nimport { removeNodes } from './dom.js';\nimport { NodePart } from './parts.js';\nimport { templateFactory } from './template-factory.js';\nexport const parts = new WeakMap();\n/**\n * Renders a template to a container.\n *\n * To update a container with new values, reevaluate the template literal and\n * call `render` with the new result.\n *\n * @param result a TemplateResult created by evaluating a template tag like\n *     `html` or `svg`.\n * @param container A DOM parent to render to. The entire contents are either\n *     replaced, or efficiently updated if the same result type was previous\n *     rendered there.\n * @param options RenderOptions for the entire render tree rendered to this\n *     container. Render options must *not* change between renders to the same\n *     container, as those changes will not effect previously rendered DOM.\n */\nexport const render = (result, container, options) => {\n    let part = parts.get(container);\n    if (part === undefined) {\n        removeNodes(container, container.firstChild);\n        parts.set(container, part = new NodePart(Object.assign({ templateFactory }, options)));\n        part.appendInto(container);\n    }\n    part.setValue(result);\n    part.commit();\n};\n//# sourceMappingURL=render.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n *\n * Main lit-html module.\n *\n * Main exports:\n *\n * -  [[html]]\n * -  [[svg]]\n * -  [[render]]\n *\n * @module lit-html\n * @preferred\n */\n/**\n * Do not remove this comment; it keeps typedoc from misplacing the module\n * docs.\n */\nimport { defaultTemplateProcessor } from './lib/default-template-processor.js';\nimport { SVGTemplateResult, TemplateResult } from './lib/template-result.js';\nexport { DefaultTemplateProcessor, defaultTemplateProcessor } from './lib/default-template-processor.js';\nexport { directive, isDirective } from './lib/directive.js';\n// TODO(justinfagnani): remove line when we get NodePart moving methods\nexport { removeNodes, reparentNodes } from './lib/dom.js';\nexport { noChange, nothing } from './lib/part.js';\nexport { AttributeCommitter, AttributePart, BooleanAttributePart, EventPart, isPrimitive, NodePart, PropertyCommitter, PropertyPart } from './lib/parts.js';\nexport { parts, render } from './lib/render.js';\nexport { templateCaches, templateFactory } from './lib/template-factory.js';\nexport { TemplateInstance } from './lib/template-instance.js';\nexport { SVGTemplateResult, TemplateResult } from './lib/template-result.js';\nexport { createMarker, isTemplatePartActive, Template } from './lib/template.js';\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for lit-html usage.\n// TODO(justinfagnani): inject version number at build time\n(window['litHtmlVersions'] || (window['litHtmlVersions'] = [])).push('1.0.0');\n/**\n * Interprets a template literal as an HTML template that can efficiently\n * render to and update a container.\n */\nexport const html = (strings, ...values) => new TemplateResult(strings, values, 'html', defaultTemplateProcessor);\n/**\n * Interprets a template literal as an SVG template that can efficiently\n * render to and update a container.\n */\nexport const svg = (strings, ...values) => new SVGTemplateResult(strings, values, 'svg', defaultTemplateProcessor);\n//# sourceMappingURL=lit-html.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * @module shady-render\n */\nimport { isTemplatePartActive } from './template.js';\nconst walkerNodeFilter = 133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */;\n/**\n * Removes the list of nodes from a Template safely. In addition to removing\n * nodes from the Template, the Template part indices are updated to match\n * the mutated Template DOM.\n *\n * As the template is walked the removal state is tracked and\n * part indices are adjusted as needed.\n *\n * div\n *   div#1 (remove) <-- start removing (removing node is div#1)\n *     div\n *       div#2 (remove)  <-- continue removing (removing node is still div#1)\n *         div\n * div <-- stop removing since previous sibling is the removing node (div#1,\n * removed 4 nodes)\n */\nexport function removeNodesFromTemplate(template, nodesToRemove) {\n    const { element: { content }, parts } = template;\n    const walker = document.createTreeWalker(content, walkerNodeFilter, null, false);\n    let partIndex = nextActiveIndexInTemplateParts(parts);\n    let part = parts[partIndex];\n    let nodeIndex = -1;\n    let removeCount = 0;\n    const nodesToRemoveInTemplate = [];\n    let currentRemovingNode = null;\n    while (walker.nextNode()) {\n        nodeIndex++;\n        const node = walker.currentNode;\n        // End removal if stepped past the removing node\n        if (node.previousSibling === currentRemovingNode) {\n            currentRemovingNode = null;\n        }\n        // A node to remove was found in the template\n        if (nodesToRemove.has(node)) {\n            nodesToRemoveInTemplate.push(node);\n            // Track node we're removing\n            if (currentRemovingNode === null) {\n                currentRemovingNode = node;\n            }\n        }\n        // When removing, increment count by which to adjust subsequent part indices\n        if (currentRemovingNode !== null) {\n            removeCount++;\n        }\n        while (part !== undefined && part.index === nodeIndex) {\n            // If part is in a removed node deactivate it by setting index to -1 or\n            // adjust the index as needed.\n            part.index = currentRemovingNode !== null ? -1 : part.index - removeCount;\n            // go to the next active part.\n            partIndex = nextActiveIndexInTemplateParts(parts, partIndex);\n            part = parts[partIndex];\n        }\n    }\n    nodesToRemoveInTemplate.forEach((n) => n.parentNode.removeChild(n));\n}\nconst countNodes = (node) => {\n    let count = (node.nodeType === 11 /* Node.DOCUMENT_FRAGMENT_NODE */) ? 0 : 1;\n    const walker = document.createTreeWalker(node, walkerNodeFilter, null, false);\n    while (walker.nextNode()) {\n        count++;\n    }\n    return count;\n};\nconst nextActiveIndexInTemplateParts = (parts, startIndex = -1) => {\n    for (let i = startIndex + 1; i < parts.length; i++) {\n        const part = parts[i];\n        if (isTemplatePartActive(part)) {\n            return i;\n        }\n    }\n    return -1;\n};\n/**\n * Inserts the given node into the Template, optionally before the given\n * refNode. In addition to inserting the node into the Template, the Template\n * part indices are updated to match the mutated Template DOM.\n */\nexport function insertNodeIntoTemplate(template, node, refNode = null) {\n    const { element: { content }, parts } = template;\n    // If there's no refNode, then put node at end of template.\n    // No part indices need to be shifted in this case.\n    if (refNode === null || refNode === undefined) {\n        content.appendChild(node);\n        return;\n    }\n    const walker = document.createTreeWalker(content, walkerNodeFilter, null, false);\n    let partIndex = nextActiveIndexInTemplateParts(parts);\n    let insertCount = 0;\n    let walkerIndex = -1;\n    while (walker.nextNode()) {\n        walkerIndex++;\n        const walkerNode = walker.currentNode;\n        if (walkerNode === refNode) {\n            insertCount = countNodes(node);\n            refNode.parentNode.insertBefore(node, refNode);\n        }\n        while (partIndex !== -1 && parts[partIndex].index === walkerIndex) {\n            // If we've inserted the node, simply adjust all subsequent parts\n            if (insertCount > 0) {\n                while (partIndex !== -1) {\n                    parts[partIndex].index += insertCount;\n                    partIndex = nextActiveIndexInTemplateParts(parts, partIndex);\n                }\n                return;\n            }\n            partIndex = nextActiveIndexInTemplateParts(parts, partIndex);\n        }\n    }\n}\n//# sourceMappingURL=modify-template.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * Module to add shady DOM/shady CSS polyfill support to lit-html template\n * rendering. See the [[render]] method for details.\n *\n * @module shady-render\n * @preferred\n */\n/**\n * Do not remove this comment; it keeps typedoc from misplacing the module\n * docs.\n */\nimport { removeNodes } from './dom.js';\nimport { insertNodeIntoTemplate, removeNodesFromTemplate } from './modify-template.js';\nimport { parts, render as litRender } from './render.js';\nimport { templateCaches } from './template-factory.js';\nimport { TemplateInstance } from './template-instance.js';\nimport { TemplateResult } from './template-result.js';\nimport { marker, Template } from './template.js';\nexport { html, svg, TemplateResult } from '../lit-html.js';\n// Get a key to lookup in `templateCaches`.\nconst getTemplateCacheKey = (type, scopeName) => `${type}--${scopeName}`;\nlet compatibleShadyCSSVersion = true;\nif (typeof window.ShadyCSS === 'undefined') {\n    compatibleShadyCSSVersion = false;\n}\nelse if (typeof window.ShadyCSS.prepareTemplateDom === 'undefined') {\n    console.warn(`Incompatible ShadyCSS version detected.` +\n        `Please update to at least @webcomponents/webcomponentsjs@2.0.2 and` +\n        `@webcomponents/shadycss@1.3.1.`);\n    compatibleShadyCSSVersion = false;\n}\n/**\n * Template factory which scopes template DOM using ShadyCSS.\n * @param scopeName {string}\n */\nconst shadyTemplateFactory = (scopeName) => (result) => {\n    const cacheKey = getTemplateCacheKey(result.type, scopeName);\n    let templateCache = templateCaches.get(cacheKey);\n    if (templateCache === undefined) {\n        templateCache = {\n            stringsArray: new WeakMap(),\n            keyString: new Map()\n        };\n        templateCaches.set(cacheKey, templateCache);\n    }\n    let template = templateCache.stringsArray.get(result.strings);\n    if (template !== undefined) {\n        return template;\n    }\n    const key = result.strings.join(marker);\n    template = templateCache.keyString.get(key);\n    if (template === undefined) {\n        const element = result.getTemplateElement();\n        if (compatibleShadyCSSVersion) {\n            window.ShadyCSS.prepareTemplateDom(element, scopeName);\n        }\n        template = new Template(result, element);\n        templateCache.keyString.set(key, template);\n    }\n    templateCache.stringsArray.set(result.strings, template);\n    return template;\n};\nconst TEMPLATE_TYPES = ['html', 'svg'];\n/**\n * Removes all style elements from Templates for the given scopeName.\n */\nconst removeStylesFromLitTemplates = (scopeName) => {\n    TEMPLATE_TYPES.forEach((type) => {\n        const templates = templateCaches.get(getTemplateCacheKey(type, scopeName));\n        if (templates !== undefined) {\n            templates.keyString.forEach((template) => {\n                const { element: { content } } = template;\n                // IE 11 doesn't support the iterable param Set constructor\n                const styles = new Set();\n                Array.from(content.querySelectorAll('style')).forEach((s) => {\n                    styles.add(s);\n                });\n                removeNodesFromTemplate(template, styles);\n            });\n        }\n    });\n};\nconst shadyRenderSet = new Set();\n/**\n * For the given scope name, ensures that ShadyCSS style scoping is performed.\n * This is done just once per scope name so the fragment and template cannot\n * be modified.\n * (1) extracts styles from the rendered fragment and hands them to ShadyCSS\n * to be scoped and appended to the document\n * (2) removes style elements from all lit-html Templates for this scope name.\n *\n * Note, <style> elements can only be placed into templates for the\n * initial rendering of the scope. If <style> elements are included in templates\n * dynamically rendered to the scope (after the first scope render), they will\n * not be scoped and the <style> will be left in the template and rendered\n * output.\n */\nconst prepareTemplateStyles = (renderedDOM, template, scopeName) => {\n    shadyRenderSet.add(scopeName);\n    // Move styles out of rendered DOM and store.\n    const styles = renderedDOM.querySelectorAll('style');\n    // If there are no styles, skip unnecessary work\n    if (styles.length === 0) {\n        // Ensure prepareTemplateStyles is called to support adding\n        // styles via `prepareAdoptedCssText` since that requires that\n        // `prepareTemplateStyles` is called.\n        window.ShadyCSS.prepareTemplateStyles(template.element, scopeName);\n        return;\n    }\n    const condensedStyle = document.createElement('style');\n    // Collect styles into a single style. This helps us make sure ShadyCSS\n    // manipulations will not prevent us from being able to fix up template\n    // part indices.\n    // NOTE: collecting styles is inefficient for browsers but ShadyCSS\n    // currently does this anyway. When it does not, this should be changed.\n    for (let i = 0; i < styles.length; i++) {\n        const style = styles[i];\n        style.parentNode.removeChild(style);\n        condensedStyle.textContent += style.textContent;\n    }\n    // Remove styles from nested templates in this scope.\n    removeStylesFromLitTemplates(scopeName);\n    // And then put the condensed style into the \"root\" template passed in as\n    // `template`.\n    insertNodeIntoTemplate(template, condensedStyle, template.element.content.firstChild);\n    // Note, it's important that ShadyCSS gets the template that `lit-html`\n    // will actually render so that it can update the style inside when\n    // needed (e.g. @apply native Shadow DOM case).\n    window.ShadyCSS.prepareTemplateStyles(template.element, scopeName);\n    if (window.ShadyCSS.nativeShadow) {\n        // When in native Shadow DOM, re-add styling to rendered content using\n        // the style ShadyCSS produced.\n        const style = template.element.content.querySelector('style');\n        renderedDOM.insertBefore(style.cloneNode(true), renderedDOM.firstChild);\n    }\n    else {\n        // When not in native Shadow DOM, at this point ShadyCSS will have\n        // removed the style from the lit template and parts will be broken as a\n        // result. To fix this, we put back the style node ShadyCSS removed\n        // and then tell lit to remove that node from the template.\n        // NOTE, ShadyCSS creates its own style so we can safely add/remove\n        // `condensedStyle` here.\n        template.element.content.insertBefore(condensedStyle, template.element.content.firstChild);\n        const removes = new Set();\n        removes.add(condensedStyle);\n        removeNodesFromTemplate(template, removes);\n    }\n};\n/**\n * Extension to the standard `render` method which supports rendering\n * to ShadowRoots when the ShadyDOM (https://github.com/webcomponents/shadydom)\n * and ShadyCSS (https://github.com/webcomponents/shadycss) polyfills are used\n * or when the webcomponentsjs\n * (https://github.com/webcomponents/webcomponentsjs) polyfill is used.\n *\n * Adds a `scopeName` option which is used to scope element DOM and stylesheets\n * when native ShadowDOM is unavailable. The `scopeName` will be added to\n * the class attribute of all rendered DOM. In addition, any style elements will\n * be automatically re-written with this `scopeName` selector and moved out\n * of the rendered DOM and into the document `<head>`.\n *\n * It is common to use this render method in conjunction with a custom element\n * which renders a shadowRoot. When this is done, typically the element's\n * `localName` should be used as the `scopeName`.\n *\n * In addition to DOM scoping, ShadyCSS also supports a basic shim for css\n * custom properties (needed only on older browsers like IE11) and a shim for\n * a deprecated feature called `@apply` that supports applying a set of css\n * custom properties to a given location.\n *\n * Usage considerations:\n *\n * * Part values in `<style>` elements are only applied the first time a given\n * `scopeName` renders. Subsequent changes to parts in style elements will have\n * no effect. Because of this, parts in style elements should only be used for\n * values that will never change, for example parts that set scope-wide theme\n * values or parts which render shared style elements.\n *\n * * Note, due to a limitation of the ShadyDOM polyfill, rendering in a\n * custom element's `constructor` is not supported. Instead rendering should\n * either done asynchronously, for example at microtask timing (for example\n * `Promise.resolve()`), or be deferred until the first time the element's\n * `connectedCallback` runs.\n *\n * Usage considerations when using shimmed custom properties or `@apply`:\n *\n * * Whenever any dynamic changes are made which affect\n * css custom properties, `ShadyCSS.styleElement(element)` must be called\n * to update the element. There are two cases when this is needed:\n * (1) the element is connected to a new parent, (2) a class is added to the\n * element that causes it to match different custom properties.\n * To address the first case when rendering a custom element, `styleElement`\n * should be called in the element's `connectedCallback`.\n *\n * * Shimmed custom properties may only be defined either for an entire\n * shadowRoot (for example, in a `:host` rule) or via a rule that directly\n * matches an element with a shadowRoot. In other words, instead of flowing from\n * parent to child as do native css custom properties, shimmed custom properties\n * flow only from shadowRoots to nested shadowRoots.\n *\n * * When using `@apply` mixing css shorthand property names with\n * non-shorthand names (for example `border` and `border-width`) is not\n * supported.\n */\nexport const render = (result, container, options) => {\n    const scopeName = options.scopeName;\n    const hasRendered = parts.has(container);\n    const needsScoping = container instanceof ShadowRoot &&\n        compatibleShadyCSSVersion && result instanceof TemplateResult;\n    // Handle first render to a scope specially...\n    const firstScopeRender = needsScoping && !shadyRenderSet.has(scopeName);\n    // On first scope render, render into a fragment; this cannot be a single\n    // fragment that is reused since nested renders can occur synchronously.\n    const renderContainer = firstScopeRender ? document.createDocumentFragment() : container;\n    litRender(result, renderContainer, Object.assign({ templateFactory: shadyTemplateFactory(scopeName) }, options));\n    // When performing first scope render,\n    // (1) We've rendered into a fragment so that there's a chance to\n    // `prepareTemplateStyles` before sub-elements hit the DOM\n    // (which might cause them to render based on a common pattern of\n    // rendering in a custom element's `connectedCallback`);\n    // (2) Scope the template with ShadyCSS one time only for this scope.\n    // (3) Render the fragment into the container and make sure the\n    // container knows its `part` is the one we just rendered. This ensures\n    // DOM will be re-used on subsequent renders.\n    if (firstScopeRender) {\n        const part = parts.get(renderContainer);\n        parts.delete(renderContainer);\n        if (part.value instanceof TemplateInstance) {\n            prepareTemplateStyles(renderContainer, part.value.template, scopeName);\n        }\n        removeNodes(container, container.firstChild);\n        container.appendChild(renderContainer);\n        parts.set(container, part);\n    }\n    // After elements have hit the DOM, update styling if this is the\n    // initial render to this container.\n    // This is needed whenever dynamic changes are made so it would be\n    // safest to do every render; however, this would regress performance\n    // so we leave it up to the user to call `ShadyCSSS.styleElement`\n    // for dynamic changes.\n    if (!hasRendered && needsScoping) {\n        window.ShadyCSS.styleElement(container.host);\n    }\n};\n//# sourceMappingURL=shady-render.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * When using Closure Compiler, JSCompiler_renameProperty(property, object) is\n * replaced at compile time by the munged name for object[property]. We cannot\n * alias this function, so we have to use a small shim that has the same\n * behavior when not compiling.\n */\nwindow.JSCompiler_renameProperty =\n    (prop, _obj) => prop;\nexport const defaultConverter = {\n    toAttribute(value, type) {\n        switch (type) {\n            case Boolean:\n                return value ? '' : null;\n            case Object:\n            case Array:\n                // if the value is `null` or `undefined` pass this through\n                // to allow removing/no change behavior.\n                return value == null ? value : JSON.stringify(value);\n        }\n        return value;\n    },\n    fromAttribute(value, type) {\n        switch (type) {\n            case Boolean:\n                return value !== null;\n            case Number:\n                return value === null ? null : Number(value);\n            case Object:\n            case Array:\n                return JSON.parse(value);\n        }\n        return value;\n    }\n};\n/**\n * Change function that returns true if `value` is different from `oldValue`.\n * This method is used as the default for a property's `hasChanged` function.\n */\nexport const notEqual = (value, old) => {\n    // This ensures (old==NaN, value==NaN) always returns false\n    return old !== value && (old === old || value === value);\n};\nconst defaultPropertyDeclaration = {\n    attribute: true,\n    type: String,\n    converter: defaultConverter,\n    reflect: false,\n    hasChanged: notEqual\n};\nconst microtaskPromise = Promise.resolve(true);\nconst STATE_HAS_UPDATED = 1;\nconst STATE_UPDATE_REQUESTED = 1 << 2;\nconst STATE_IS_REFLECTING_TO_ATTRIBUTE = 1 << 3;\nconst STATE_IS_REFLECTING_TO_PROPERTY = 1 << 4;\nconst STATE_HAS_CONNECTED = 1 << 5;\n/**\n * Base element class which manages element properties and attributes. When\n * properties change, the `update` method is asynchronously called. This method\n * should be supplied by subclassers to render updates as desired.\n */\nexport class UpdatingElement extends HTMLElement {\n    constructor() {\n        super();\n        this._updateState = 0;\n        this._instanceProperties = undefined;\n        this._updatePromise = microtaskPromise;\n        this._hasConnectedResolver = undefined;\n        /**\n         * Map with keys for any properties that have changed since the last\n         * update cycle with previous values.\n         */\n        this._changedProperties = new Map();\n        /**\n         * Map with keys of properties that should be reflected when updated.\n         */\n        this._reflectingProperties = undefined;\n        this.initialize();\n    }\n    /**\n     * Returns a list of attributes corresponding to the registered properties.\n     * @nocollapse\n     */\n    static get observedAttributes() {\n        // note: piggy backing on this to ensure we're finalized.\n        this.finalize();\n        const attributes = [];\n        // Use forEach so this works even if for/of loops are compiled to for loops\n        // expecting arrays\n        this._classProperties.forEach((v, p) => {\n            const attr = this._attributeNameForProperty(p, v);\n            if (attr !== undefined) {\n                this._attributeToPropertyMap.set(attr, p);\n                attributes.push(attr);\n            }\n        });\n        return attributes;\n    }\n    /**\n     * Ensures the private `_classProperties` property metadata is created.\n     * In addition to `finalize` this is also called in `createProperty` to\n     * ensure the `@property` decorator can add property metadata.\n     */\n    /** @nocollapse */\n    static _ensureClassProperties() {\n        // ensure private storage for property declarations.\n        if (!this.hasOwnProperty(JSCompiler_renameProperty('_classProperties', this))) {\n            this._classProperties = new Map();\n            // NOTE: Workaround IE11 not supporting Map constructor argument.\n            const superProperties = Object.getPrototypeOf(this)._classProperties;\n            if (superProperties !== undefined) {\n                superProperties.forEach((v, k) => this._classProperties.set(k, v));\n            }\n        }\n    }\n    /**\n     * Creates a property accessor on the element prototype if one does not exist.\n     * The property setter calls the property's `hasChanged` property option\n     * or uses a strict identity check to determine whether or not to request\n     * an update.\n     * @nocollapse\n     */\n    static createProperty(name, options = defaultPropertyDeclaration) {\n        // Note, since this can be called by the `@property` decorator which\n        // is called before `finalize`, we ensure storage exists for property\n        // metadata.\n        this._ensureClassProperties();\n        this._classProperties.set(name, options);\n        // Do not generate an accessor if the prototype already has one, since\n        // it would be lost otherwise and that would never be the user's intention;\n        // Instead, we expect users to call `requestUpdate` themselves from\n        // user-defined accessors. Note that if the super has an accessor we will\n        // still overwrite it\n        if (options.noAccessor || this.prototype.hasOwnProperty(name)) {\n            return;\n        }\n        const key = typeof name === 'symbol' ? Symbol() : `__${name}`;\n        Object.defineProperty(this.prototype, name, {\n            // tslint:disable-next-line:no-any no symbol in index\n            get() {\n                return this[key];\n            },\n            set(value) {\n                // tslint:disable-next-line:no-any no symbol in index\n                const oldValue = this[name];\n                // tslint:disable-next-line:no-any no symbol in index\n                this[key] = value;\n                this._requestUpdate(name, oldValue);\n            },\n            configurable: true,\n            enumerable: true\n        });\n    }\n    /**\n     * Creates property accessors for registered properties and ensures\n     * any superclasses are also finalized.\n     * @nocollapse\n     */\n    static finalize() {\n        if (this.hasOwnProperty(JSCompiler_renameProperty('finalized', this)) &&\n            this.finalized) {\n            return;\n        }\n        // finalize any superclasses\n        const superCtor = Object.getPrototypeOf(this);\n        if (typeof superCtor.finalize === 'function') {\n            superCtor.finalize();\n        }\n        this.finalized = true;\n        this._ensureClassProperties();\n        // initialize Map populated in observedAttributes\n        this._attributeToPropertyMap = new Map();\n        // make any properties\n        // Note, only process \"own\" properties since this element will inherit\n        // any properties defined on the superClass, and finalization ensures\n        // the entire prototype chain is finalized.\n        if (this.hasOwnProperty(JSCompiler_renameProperty('properties', this))) {\n            const props = this.properties;\n            // support symbols in properties (IE11 does not support this)\n            const propKeys = [\n                ...Object.getOwnPropertyNames(props),\n                ...(typeof Object.getOwnPropertySymbols === 'function') ?\n                    Object.getOwnPropertySymbols(props) :\n                    []\n            ];\n            // This for/of is ok because propKeys is an array\n            for (const p of propKeys) {\n                // note, use of `any` is due to TypeSript lack of support for symbol in\n                // index types\n                // tslint:disable-next-line:no-any no symbol in index\n                this.createProperty(p, props[p]);\n            }\n        }\n    }\n    /**\n     * Returns the property name for the given attribute `name`.\n     * @nocollapse\n     */\n    static _attributeNameForProperty(name, options) {\n        const attribute = options.attribute;\n        return attribute === false ?\n            undefined :\n            (typeof attribute === 'string' ?\n                attribute :\n                (typeof name === 'string' ? name.toLowerCase() : undefined));\n    }\n    /**\n     * Returns true if a property should request an update.\n     * Called when a property value is set and uses the `hasChanged`\n     * option for the property if present or a strict identity check.\n     * @nocollapse\n     */\n    static _valueHasChanged(value, old, hasChanged = notEqual) {\n        return hasChanged(value, old);\n    }\n    /**\n     * Returns the property value for the given attribute value.\n     * Called via the `attributeChangedCallback` and uses the property's\n     * `converter` or `converter.fromAttribute` property option.\n     * @nocollapse\n     */\n    static _propertyValueFromAttribute(value, options) {\n        const type = options.type;\n        const converter = options.converter || defaultConverter;\n        const fromAttribute = (typeof converter === 'function' ? converter : converter.fromAttribute);\n        return fromAttribute ? fromAttribute(value, type) : value;\n    }\n    /**\n     * Returns the attribute value for the given property value. If this\n     * returns undefined, the property will *not* be reflected to an attribute.\n     * If this returns null, the attribute will be removed, otherwise the\n     * attribute will be set to the value.\n     * This uses the property's `reflect` and `type.toAttribute` property options.\n     * @nocollapse\n     */\n    static _propertyValueToAttribute(value, options) {\n        if (options.reflect === undefined) {\n            return;\n        }\n        const type = options.type;\n        const converter = options.converter;\n        const toAttribute = converter && converter.toAttribute ||\n            defaultConverter.toAttribute;\n        return toAttribute(value, type);\n    }\n    /**\n     * Performs element initialization. By default captures any pre-set values for\n     * registered properties.\n     */\n    initialize() {\n        this._saveInstanceProperties();\n        // ensures first update will be caught by an early access of `updateComplete`\n        this._requestUpdate();\n    }\n    /**\n     * Fixes any properties set on the instance before upgrade time.\n     * Otherwise these would shadow the accessor and break these properties.\n     * The properties are stored in a Map which is played back after the\n     * constructor runs. Note, on very old versions of Safari (<=9) or Chrome\n     * (<=41), properties created for native platform properties like (`id` or\n     * `name`) may not have default values set in the element constructor. On\n     * these browsers native properties appear on instances and therefore their\n     * default value will overwrite any element default (e.g. if the element sets\n     * this.id = 'id' in the constructor, the 'id' will become '' since this is\n     * the native platform default).\n     */\n    _saveInstanceProperties() {\n        // Use forEach so this works even if for/of loops are compiled to for loops\n        // expecting arrays\n        this.constructor\n            ._classProperties.forEach((_v, p) => {\n            if (this.hasOwnProperty(p)) {\n                const value = this[p];\n                delete this[p];\n                if (!this._instanceProperties) {\n                    this._instanceProperties = new Map();\n                }\n                this._instanceProperties.set(p, value);\n            }\n        });\n    }\n    /**\n     * Applies previously saved instance properties.\n     */\n    _applyInstanceProperties() {\n        // Use forEach so this works even if for/of loops are compiled to for loops\n        // expecting arrays\n        // tslint:disable-next-line:no-any\n        this._instanceProperties.forEach((v, p) => this[p] = v);\n        this._instanceProperties = undefined;\n    }\n    connectedCallback() {\n        this._updateState = this._updateState | STATE_HAS_CONNECTED;\n        // Ensure first connection completes an update. Updates cannot complete before\n        // connection and if one is pending connection the `_hasConnectionResolver`\n        // will exist. If so, resolve it to complete the update, otherwise\n        // requestUpdate.\n        if (this._hasConnectedResolver) {\n            this._hasConnectedResolver();\n            this._hasConnectedResolver = undefined;\n        }\n    }\n    /**\n     * Allows for `super.disconnectedCallback()` in extensions while\n     * reserving the possibility of making non-breaking feature additions\n     * when disconnecting at some point in the future.\n     */\n    disconnectedCallback() {\n    }\n    /**\n     * Synchronizes property values when attributes change.\n     */\n    attributeChangedCallback(name, old, value) {\n        if (old !== value) {\n            this._attributeToProperty(name, value);\n        }\n    }\n    _propertyToAttribute(name, value, options = defaultPropertyDeclaration) {\n        const ctor = this.constructor;\n        const attr = ctor._attributeNameForProperty(name, options);\n        if (attr !== undefined) {\n            const attrValue = ctor._propertyValueToAttribute(value, options);\n            // an undefined value does not change the attribute.\n            if (attrValue === undefined) {\n                return;\n            }\n            // Track if the property is being reflected to avoid\n            // setting the property again via `attributeChangedCallback`. Note:\n            // 1. this takes advantage of the fact that the callback is synchronous.\n            // 2. will behave incorrectly if multiple attributes are in the reaction\n            // stack at time of calling. However, since we process attributes\n            // in `update` this should not be possible (or an extreme corner case\n            // that we'd like to discover).\n            // mark state reflecting\n            this._updateState = this._updateState | STATE_IS_REFLECTING_TO_ATTRIBUTE;\n            if (attrValue == null) {\n                this.removeAttribute(attr);\n            }\n            else {\n                this.setAttribute(attr, attrValue);\n            }\n            // mark state not reflecting\n            this._updateState = this._updateState & ~STATE_IS_REFLECTING_TO_ATTRIBUTE;\n        }\n    }\n    _attributeToProperty(name, value) {\n        // Use tracking info to avoid deserializing attribute value if it was\n        // just set from a property setter.\n        if (this._updateState & STATE_IS_REFLECTING_TO_ATTRIBUTE) {\n            return;\n        }\n        const ctor = this.constructor;\n        const propName = ctor._attributeToPropertyMap.get(name);\n        if (propName !== undefined) {\n            const options = ctor._classProperties.get(propName) || defaultPropertyDeclaration;\n            // mark state reflecting\n            this._updateState = this._updateState | STATE_IS_REFLECTING_TO_PROPERTY;\n            this[propName] =\n                // tslint:disable-next-line:no-any\n                ctor._propertyValueFromAttribute(value, options);\n            // mark state not reflecting\n            this._updateState = this._updateState & ~STATE_IS_REFLECTING_TO_PROPERTY;\n        }\n    }\n    /**\n     * This private version of `requestUpdate` does not access or return the\n     * `updateComplete` promise. This promise can be overridden and is therefore\n     * not free to access.\n     */\n    _requestUpdate(name, oldValue) {\n        let shouldRequestUpdate = true;\n        // If we have a property key, perform property update steps.\n        if (name !== undefined) {\n            const ctor = this.constructor;\n            const options = ctor._classProperties.get(name) || defaultPropertyDeclaration;\n            if (ctor._valueHasChanged(this[name], oldValue, options.hasChanged)) {\n                if (!this._changedProperties.has(name)) {\n                    this._changedProperties.set(name, oldValue);\n                }\n                // Add to reflecting properties set.\n                // Note, it's important that every change has a chance to add the\n                // property to `_reflectingProperties`. This ensures setting\n                // attribute + property reflects correctly.\n                if (options.reflect === true &&\n                    !(this._updateState & STATE_IS_REFLECTING_TO_PROPERTY)) {\n                    if (this._reflectingProperties === undefined) {\n                        this._reflectingProperties = new Map();\n                    }\n                    this._reflectingProperties.set(name, options);\n                }\n            }\n            else {\n                // Abort the request if the property should not be considered changed.\n                shouldRequestUpdate = false;\n            }\n        }\n        if (!this._hasRequestedUpdate && shouldRequestUpdate) {\n            this._enqueueUpdate();\n        }\n    }\n    /**\n     * Requests an update which is processed asynchronously. This should\n     * be called when an element should update based on some state not triggered\n     * by setting a property. In this case, pass no arguments. It should also be\n     * called when manually implementing a property setter. In this case, pass the\n     * property `name` and `oldValue` to ensure that any configured property\n     * options are honored. Returns the `updateComplete` Promise which is resolved\n     * when the update completes.\n     *\n     * @param name {PropertyKey} (optional) name of requesting property\n     * @param oldValue {any} (optional) old value of requesting property\n     * @returns {Promise} A Promise that is resolved when the update completes.\n     */\n    requestUpdate(name, oldValue) {\n        this._requestUpdate(name, oldValue);\n        return this.updateComplete;\n    }\n    /**\n     * Sets up the element to asynchronously update.\n     */\n    async _enqueueUpdate() {\n        // Mark state updating...\n        this._updateState = this._updateState | STATE_UPDATE_REQUESTED;\n        let resolve;\n        let reject;\n        const previousUpdatePromise = this._updatePromise;\n        this._updatePromise = new Promise((res, rej) => {\n            resolve = res;\n            reject = rej;\n        });\n        try {\n            // Ensure any previous update has resolved before updating.\n            // This `await` also ensures that property changes are batched.\n            await previousUpdatePromise;\n        }\n        catch (e) {\n            // Ignore any previous errors. We only care that the previous cycle is\n            // done. Any error should have been handled in the previous update.\n        }\n        // Make sure the element has connected before updating.\n        if (!this._hasConnected) {\n            await new Promise((res) => this._hasConnectedResolver = res);\n        }\n        try {\n            const result = this.performUpdate();\n            // If `performUpdate` returns a Promise, we await it. This is done to\n            // enable coordinating updates with a scheduler. Note, the result is\n            // checked to avoid delaying an additional microtask unless we need to.\n            if (result != null) {\n                await result;\n            }\n        }\n        catch (e) {\n            reject(e);\n        }\n        resolve(!this._hasRequestedUpdate);\n    }\n    get _hasConnected() {\n        return (this._updateState & STATE_HAS_CONNECTED);\n    }\n    get _hasRequestedUpdate() {\n        return (this._updateState & STATE_UPDATE_REQUESTED);\n    }\n    get hasUpdated() {\n        return (this._updateState & STATE_HAS_UPDATED);\n    }\n    /**\n     * Performs an element update. Note, if an exception is thrown during the\n     * update, `firstUpdated` and `updated` will not be called.\n     *\n     * You can override this method to change the timing of updates. If this\n     * method is overridden, `super.performUpdate()` must be called.\n     *\n     * For instance, to schedule updates to occur just before the next frame:\n     *\n     * ```\n     * protected async performUpdate(): Promise<unknown> {\n     *   await new Promise((resolve) => requestAnimationFrame(() => resolve()));\n     *   super.performUpdate();\n     * }\n     * ```\n     */\n    performUpdate() {\n        // Mixin instance properties once, if they exist.\n        if (this._instanceProperties) {\n            this._applyInstanceProperties();\n        }\n        let shouldUpdate = false;\n        const changedProperties = this._changedProperties;\n        try {\n            shouldUpdate = this.shouldUpdate(changedProperties);\n            if (shouldUpdate) {\n                this.update(changedProperties);\n            }\n        }\n        catch (e) {\n            // Prevent `firstUpdated` and `updated` from running when there's an\n            // update exception.\n            shouldUpdate = false;\n            throw e;\n        }\n        finally {\n            // Ensure element can accept additional updates after an exception.\n            this._markUpdated();\n        }\n        if (shouldUpdate) {\n            if (!(this._updateState & STATE_HAS_UPDATED)) {\n                this._updateState = this._updateState | STATE_HAS_UPDATED;\n                this.firstUpdated(changedProperties);\n            }\n            this.updated(changedProperties);\n        }\n    }\n    _markUpdated() {\n        this._changedProperties = new Map();\n        this._updateState = this._updateState & ~STATE_UPDATE_REQUESTED;\n    }\n    /**\n     * Returns a Promise that resolves when the element has completed updating.\n     * The Promise value is a boolean that is `true` if the element completed the\n     * update without triggering another update. The Promise result is `false` if\n     * a property was set inside `updated()`. If the Promise is rejected, an\n     * exception was thrown during the update. This getter can be implemented to\n     * await additional state. For example, it is sometimes useful to await a\n     * rendered element before fulfilling this Promise. To do this, first await\n     * `super.updateComplete` then any subsequent state.\n     *\n     * @returns {Promise} The Promise returns a boolean that indicates if the\n     * update resolved without triggering another update.\n     */\n    get updateComplete() {\n        return this._updatePromise;\n    }\n    /**\n     * Controls whether or not `update` should be called when the element requests\n     * an update. By default, this method always returns `true`, but this can be\n     * customized to control when to update.\n     *\n     * * @param _changedProperties Map of changed properties with old values\n     */\n    shouldUpdate(_changedProperties) {\n        return true;\n    }\n    /**\n     * Updates the element. This method reflects property values to attributes.\n     * It can be overridden to render and keep updated element DOM.\n     * Setting properties inside this method will *not* trigger\n     * another update.\n     *\n     * * @param _changedProperties Map of changed properties with old values\n     */\n    update(_changedProperties) {\n        if (this._reflectingProperties !== undefined &&\n            this._reflectingProperties.size > 0) {\n            // Use forEach so this works even if for/of loops are compiled to for\n            // loops expecting arrays\n            this._reflectingProperties.forEach((v, k) => this._propertyToAttribute(k, this[k], v));\n            this._reflectingProperties = undefined;\n        }\n    }\n    /**\n     * Invoked whenever the element is updated. Implement to perform\n     * post-updating tasks via DOM APIs, for example, focusing an element.\n     *\n     * Setting properties inside this method will trigger the element to update\n     * again after this update cycle completes.\n     *\n     * * @param _changedProperties Map of changed properties with old values\n     */\n    updated(_changedProperties) {\n    }\n    /**\n     * Invoked when the element is first updated. Implement to perform one time\n     * work on the element after update.\n     *\n     * Setting properties inside this method will trigger the element to update\n     * again after this update cycle completes.\n     *\n     * * @param _changedProperties Map of changed properties with old values\n     */\n    firstUpdated(_changedProperties) {\n    }\n}\n/**\n * Marks class as having finished creating properties.\n */\nUpdatingElement.finalized = true;\n//# sourceMappingURL=updating-element.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nconst legacyCustomElement = (tagName, clazz) => {\n    window.customElements.define(tagName, clazz);\n    // Cast as any because TS doesn't recognize the return type as being a\n    // subtype of the decorated class when clazz is typed as\n    // `Constructor<HTMLElement>` for some reason.\n    // `Constructor<HTMLElement>` is helpful to make sure the decorator is\n    // applied to elements however.\n    // tslint:disable-next-line:no-any\n    return clazz;\n};\nconst standardCustomElement = (tagName, descriptor) => {\n    const { kind, elements } = descriptor;\n    return {\n        kind,\n        elements,\n        // This callback is called once the class is otherwise fully defined\n        finisher(clazz) {\n            window.customElements.define(tagName, clazz);\n        }\n    };\n};\n/**\n * Class decorator factory that defines the decorated class as a custom element.\n *\n * @param tagName the name of the custom element to define\n */\nexport const customElement = (tagName) => (classOrDescriptor) => (typeof classOrDescriptor === 'function') ?\n    legacyCustomElement(tagName, classOrDescriptor) :\n    standardCustomElement(tagName, classOrDescriptor);\nconst standardProperty = (options, element) => {\n    // When decorating an accessor, pass it through and add property metadata.\n    // Note, the `hasOwnProperty` check in `createProperty` ensures we don't\n    // stomp over the user's accessor.\n    if (element.kind === 'method' && element.descriptor &&\n        !('value' in element.descriptor)) {\n        return Object.assign({}, element, { finisher(clazz) {\n                clazz.createProperty(element.key, options);\n            } });\n    }\n    else {\n        // createProperty() takes care of defining the property, but we still\n        // must return some kind of descriptor, so return a descriptor for an\n        // unused prototype field. The finisher calls createProperty().\n        return {\n            kind: 'field',\n            key: Symbol(),\n            placement: 'own',\n            descriptor: {},\n            // When @babel/plugin-proposal-decorators implements initializers,\n            // do this instead of the initializer below. See:\n            // https://github.com/babel/babel/issues/9260 extras: [\n            //   {\n            //     kind: 'initializer',\n            //     placement: 'own',\n            //     initializer: descriptor.initializer,\n            //   }\n            // ],\n            // tslint:disable-next-line:no-any decorator\n            initializer() {\n                if (typeof element.initializer === 'function') {\n                    this[element.key] = element.initializer.call(this);\n                }\n            },\n            finisher(clazz) {\n                clazz.createProperty(element.key, options);\n            }\n        };\n    }\n};\nconst legacyProperty = (options, proto, name) => {\n    proto.constructor\n        .createProperty(name, options);\n};\n/**\n * A property decorator which creates a LitElement property which reflects a\n * corresponding attribute value. A `PropertyDeclaration` may optionally be\n * supplied to configure property features.\n *\n * @ExportDecoratedItems\n */\nexport function property(options) {\n    // tslint:disable-next-line:no-any decorator\n    return (protoOrDescriptor, name) => (name !== undefined) ?\n        legacyProperty(options, protoOrDescriptor, name) :\n        standardProperty(options, protoOrDescriptor);\n}\n/**\n * A property decorator that converts a class property into a getter that\n * executes a querySelector on the element's renderRoot.\n *\n * @ExportDecoratedItems\n */\nexport function query(selector) {\n    return (protoOrDescriptor, \n    // tslint:disable-next-line:no-any decorator\n    name) => {\n        const descriptor = {\n            get() {\n                return this.renderRoot.querySelector(selector);\n            },\n            enumerable: true,\n            configurable: true,\n        };\n        return (name !== undefined) ?\n            legacyQuery(descriptor, protoOrDescriptor, name) :\n            standardQuery(descriptor, protoOrDescriptor);\n    };\n}\n/**\n * A property decorator that converts a class property into a getter\n * that executes a querySelectorAll on the element's renderRoot.\n *\n * @ExportDecoratedItems\n */\nexport function queryAll(selector) {\n    return (protoOrDescriptor, \n    // tslint:disable-next-line:no-any decorator\n    name) => {\n        const descriptor = {\n            get() {\n                return this.renderRoot.querySelectorAll(selector);\n            },\n            enumerable: true,\n            configurable: true,\n        };\n        return (name !== undefined) ?\n            legacyQuery(descriptor, protoOrDescriptor, name) :\n            standardQuery(descriptor, protoOrDescriptor);\n    };\n}\nconst legacyQuery = (descriptor, proto, name) => {\n    Object.defineProperty(proto, name, descriptor);\n};\nconst standardQuery = (descriptor, element) => ({\n    kind: 'method',\n    placement: 'prototype',\n    key: element.key,\n    descriptor,\n});\nconst standardEventOptions = (options, element) => {\n    return Object.assign({}, element, { finisher(clazz) {\n            Object.assign(clazz.prototype[element.key], options);\n        } });\n};\nconst legacyEventOptions = \n// tslint:disable-next-line:no-any legacy decorator\n(options, proto, name) => {\n    Object.assign(proto[name], options);\n};\n/**\n * Adds event listener options to a method used as an event listener in a\n * lit-html template.\n *\n * @param options An object that specifis event listener options as accepted by\n * `EventTarget#addEventListener` and `EventTarget#removeEventListener`.\n *\n * Current browsers support the `capture`, `passive`, and `once` options. See:\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Parameters\n *\n * @example\n *\n *     class MyElement {\n *\n *       clicked = false;\n *\n *       render() {\n *         return html`<div @click=${this._onClick}`><button></button></div>`;\n *       }\n *\n *       @eventOptions({capture: true})\n *       _onClick(e) {\n *         this.clicked = true;\n *       }\n *     }\n */\nexport const eventOptions = (options) => \n// Return value typed as any to prevent TypeScript from complaining that\n// standard decorator function signature does not match TypeScript decorator\n// signature\n// TODO(kschaaf): unclear why it was only failing on this decorator and not\n// the others\n((protoOrDescriptor, name) => (name !== undefined) ?\n    legacyEventOptions(options, protoOrDescriptor, name) :\n    standardEventOptions(options, protoOrDescriptor));\n//# sourceMappingURL=decorators.js.map","/**\n@license\nCopyright (c) 2019 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nexport const supportsAdoptingStyleSheets = ('adoptedStyleSheets' in Document.prototype) &&\n    ('replace' in CSSStyleSheet.prototype);\nconst constructionToken = Symbol();\nexport class CSSResult {\n    constructor(cssText, safeToken) {\n        if (safeToken !== constructionToken) {\n            throw new Error('CSSResult is not constructable. Use `unsafeCSS` or `css` instead.');\n        }\n        this.cssText = cssText;\n    }\n    // Note, this is a getter so that it's lazy. In practice, this means\n    // stylesheets are not created until the first element instance is made.\n    get styleSheet() {\n        if (this._styleSheet === undefined) {\n            // Note, if `adoptedStyleSheets` is supported then we assume CSSStyleSheet\n            // is constructable.\n            if (supportsAdoptingStyleSheets) {\n                this._styleSheet = new CSSStyleSheet();\n                this._styleSheet.replaceSync(this.cssText);\n            }\n            else {\n                this._styleSheet = null;\n            }\n        }\n        return this._styleSheet;\n    }\n    toString() {\n        return this.cssText;\n    }\n}\n/**\n * Wrap a value for interpolation in a css tagged template literal.\n *\n * This is unsafe because untrusted CSS text can be used to phone home\n * or exfiltrate data to an attacker controlled site. Take care to only use\n * this with trusted input.\n */\nexport const unsafeCSS = (value) => {\n    return new CSSResult(String(value), constructionToken);\n};\nconst textFromCSSResult = (value) => {\n    if (value instanceof CSSResult) {\n        return value.cssText;\n    }\n    else {\n        throw new Error(`Value passed to 'css' function must be a 'css' function result: ${value}. Use 'unsafeCSS' to pass non-literal values, but\n            take care to ensure page security.`);\n    }\n};\n/**\n * Template tag which which can be used with LitElement's `style` property to\n * set element styles. For security reasons, only literal string values may be\n * used. To incorporate non-literal values `unsafeCSS` may be used inside a\n * template string part.\n */\nexport const css = (strings, ...values) => {\n    const cssText = values.reduce((acc, v, idx) => acc + textFromCSSResult(v) + strings[idx + 1], strings[0]);\n    return new CSSResult(cssText, constructionToken);\n};\n//# sourceMappingURL=css-tag.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { TemplateResult } from 'lit-html';\nimport { render } from 'lit-html/lib/shady-render.js';\nimport { UpdatingElement } from './lib/updating-element.js';\nexport * from './lib/updating-element.js';\nexport * from './lib/decorators.js';\nexport { html, svg, TemplateResult, SVGTemplateResult } from 'lit-html/lit-html.js';\nimport { supportsAdoptingStyleSheets } from './lib/css-tag.js';\nexport * from './lib/css-tag.js';\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for LitElement usage.\n// TODO(justinfagnani): inject version number at build time\n(window['litElementVersions'] || (window['litElementVersions'] = []))\n    .push('2.0.1');\n/**\n * Minimal implementation of Array.prototype.flat\n * @param arr the array to flatten\n * @param result the accumlated result\n */\nfunction arrayFlat(styles, result = []) {\n    for (let i = 0, length = styles.length; i < length; i++) {\n        const value = styles[i];\n        if (Array.isArray(value)) {\n            arrayFlat(value, result);\n        }\n        else {\n            result.push(value);\n        }\n    }\n    return result;\n}\n/** Deeply flattens styles array. Uses native flat if available. */\nconst flattenStyles = (styles) => styles.flat ? styles.flat(Infinity) : arrayFlat(styles);\nexport class LitElement extends UpdatingElement {\n    /** @nocollapse */\n    static finalize() {\n        super.finalize();\n        // Prepare styling that is stamped at first render time. Styling\n        // is built from user provided `styles` or is inherited from the superclass.\n        this._styles =\n            this.hasOwnProperty(JSCompiler_renameProperty('styles', this)) ?\n                this._getUniqueStyles() :\n                this._styles || [];\n    }\n    /** @nocollapse */\n    static _getUniqueStyles() {\n        // Take care not to call `this.styles` multiple times since this generates\n        // new CSSResults each time.\n        // TODO(sorvell): Since we do not cache CSSResults by input, any\n        // shared styles will generate new stylesheet objects, which is wasteful.\n        // This should be addressed when a browser ships constructable\n        // stylesheets.\n        const userStyles = this.styles;\n        const styles = [];\n        if (Array.isArray(userStyles)) {\n            const flatStyles = flattenStyles(userStyles);\n            // As a performance optimization to avoid duplicated styling that can\n            // occur especially when composing via subclassing, de-duplicate styles\n            // preserving the last item in the list. The last item is kept to\n            // try to preserve cascade order with the assumption that it's most\n            // important that last added styles override previous styles.\n            const styleSet = flatStyles.reduceRight((set, s) => {\n                set.add(s);\n                // on IE set.add does not return the set.\n                return set;\n            }, new Set());\n            // Array.from does not work on Set in IE\n            styleSet.forEach((v) => styles.unshift(v));\n        }\n        else if (userStyles) {\n            styles.push(userStyles);\n        }\n        return styles;\n    }\n    /**\n     * Performs element initialization. By default this calls `createRenderRoot`\n     * to create the element `renderRoot` node and captures any pre-set values for\n     * registered properties.\n     */\n    initialize() {\n        super.initialize();\n        this.renderRoot =\n            this.createRenderRoot();\n        // Note, if renderRoot is not a shadowRoot, styles would/could apply to the\n        // element's getRootNode(). While this could be done, we're choosing not to\n        // support this now since it would require different logic around de-duping.\n        if (window.ShadowRoot && this.renderRoot instanceof window.ShadowRoot) {\n            this.adoptStyles();\n        }\n    }\n    /**\n     * Returns the node into which the element should render and by default\n     * creates and returns an open shadowRoot. Implement to customize where the\n     * element's DOM is rendered. For example, to render into the element's\n     * childNodes, return `this`.\n     * @returns {Element|DocumentFragment} Returns a node into which to render.\n     */\n    createRenderRoot() {\n        return this.attachShadow({ mode: 'open' });\n    }\n    /**\n     * Applies styling to the element shadowRoot using the `static get styles`\n     * property. Styling will apply using `shadowRoot.adoptedStyleSheets` where\n     * available and will fallback otherwise. When Shadow DOM is polyfilled,\n     * ShadyCSS scopes styles and adds them to the document. When Shadow DOM\n     * is available but `adoptedStyleSheets` is not, styles are appended to the\n     * end of the `shadowRoot` to [mimic spec\n     * behavior](https://wicg.github.io/construct-stylesheets/#using-constructed-stylesheets).\n     */\n    adoptStyles() {\n        const styles = this.constructor._styles;\n        if (styles.length === 0) {\n            return;\n        }\n        // There are three separate cases here based on Shadow DOM support.\n        // (1) shadowRoot polyfilled: use ShadyCSS\n        // (2) shadowRoot.adoptedStyleSheets available: use it.\n        // (3) shadowRoot.adoptedStyleSheets polyfilled: append styles after\n        // rendering\n        if (window.ShadyCSS !== undefined && !window.ShadyCSS.nativeShadow) {\n            window.ShadyCSS.ScopingShim.prepareAdoptedCssText(styles.map((s) => s.cssText), this.localName);\n        }\n        else if (supportsAdoptingStyleSheets) {\n            this.renderRoot.adoptedStyleSheets =\n                styles.map((s) => s.styleSheet);\n        }\n        else {\n            // This must be done after rendering so the actual style insertion is done\n            // in `update`.\n            this._needsShimAdoptedStyleSheets = true;\n        }\n    }\n    connectedCallback() {\n        super.connectedCallback();\n        // Note, first update/render handles styleElement so we only call this if\n        // connected after first update.\n        if (this.hasUpdated && window.ShadyCSS !== undefined) {\n            window.ShadyCSS.styleElement(this);\n        }\n    }\n    /**\n     * Updates the element. This method reflects property values to attributes\n     * and calls `render` to render DOM via lit-html. Setting properties inside\n     * this method will *not* trigger another update.\n     * * @param _changedProperties Map of changed properties with old values\n     */\n    update(changedProperties) {\n        super.update(changedProperties);\n        const templateResult = this.render();\n        if (templateResult instanceof TemplateResult) {\n            this.constructor\n                .render(templateResult, this.renderRoot, { scopeName: this.localName, eventContext: this });\n        }\n        // When native Shadow DOM is used but adoptedStyles are not supported,\n        // insert styling after rendering to ensure adoptedStyles have highest\n        // priority.\n        if (this._needsShimAdoptedStyleSheets) {\n            this._needsShimAdoptedStyleSheets = false;\n            this.constructor._styles.forEach((s) => {\n                const style = document.createElement('style');\n                style.textContent = s.cssText;\n                this.renderRoot.appendChild(style);\n            });\n        }\n    }\n    /**\n     * Invoked on each update to perform rendering tasks. This method must return\n     * a lit-html TemplateResult. Setting properties inside this method will *not*\n     * trigger the element to update.\n     */\n    render() {\n    }\n}\n/**\n * Ensure this class is marked as `finalized` as an optimization ensuring\n * it will not needlessly try to `finalize`.\n */\nLitElement.finalized = true;\n/**\n * Render method used to render the lit-html TemplateResult to the element's\n * DOM.\n * @param {TemplateResult} Template to render.\n * @param {Element|DocumentFragment} Node into which to render.\n * @param {String} Element name.\n * @nocollapse\n */\nLitElement.render = render;\n//# sourceMappingURL=lit-element.js.map","import * as AmazonCognitoIdentity from 'amazon-cognito-identity-js'\nimport { LitElement, html, css } from 'lit-element'\n\nclass LoginComponent extends LitElement {\n  static get properties () {\n    return {\n      username: { type: String },\n      password: { type: String },\n      redirectUrl: { type: String },\n      userPoolId: { type: String },\n      clientId: { type: String },\n      errorMessage: { reflect: true }\n    }\n  }\n\n  static get styles () {\n    return css`\n        button {\n            background-color: #4CAF50;\n            color: white;\n            padding: 14px 20px;\n            margin: 8px 0;\n            border: none;\n            cursor: pointer;\n            width: 100%;\n          }\n          \n          button:hover {\n            opacity: 0.8;\n          }\n          \n          .container {\n            padding: 16px;\n          }\n\n          .warning {\n              padding: 16px;\n              color: red;\n          }\n\n          input[type=text], input[type=password] {\n            width: 100%;\n            padding: 12px 20px;\n            margin: 8px 0;\n            display: inline-block;\n            border: 1px solid #ccc;\n            box-sizing: border-box;\n          }          \n          `\n  }\n\n  constructor () {\n    super()\n    this.username = ''\n    this.password = ''\n    this.errorMessage = false\n  }\n\n  render () {\n    return html`<div class=\"container\">\n            <label for=\"uname\"><b>Username</b></label>\n            <input type=\"text\" placeholder=\"Enter Username\" name=\"uname\" .value=${this.username} @input=${this.handleUsername} required>\n            <label for=\"psw\"><b>Password</b></label>\n            <input type=\"password\" placeholder=\"Enter Password\" name=\"psw\" .value=${this.password} @input=${this.handlePassword} required>\n            ${this.errorMessage ? html`<div class=\"warning\">Invalid Username and/or Password</div>` : ''}    \n            <button @click=${this.clickHandler} type=\"submit\">Login</button>\n        </div>\n        `\n  }\n  attributeChangedCallback (name, oldval, newval) {\n    super.attributeChangedCallback(name, oldval, newval)\n  }\n\n  handleUsername (e) {\n    this.username = e.target.value\n  }\n\n  handlePassword (e) {\n    this.password = e.target.value\n  }\n\n  clickHandler () {\n    let poolData = {\n      UserPoolId: this.userPoolId,\n      ClientId: this.clientId\n    }\n    let userPool = new AmazonCognitoIdentity.CognitoUserPool(poolData)\n    let userData = {\n      Username: this.username,\n      Pool: userPool\n    }\n    let authenicationData = {\n      Username: this.username,\n      Password: this.password\n    }\n    let authenicationDetails = new AmazonCognitoIdentity.AuthenticationDetails(authenicationData)\n    let cognitoUser = new AmazonCognitoIdentity.CognitoUser(userData)\n\n    let promise = new Promise(function (resolve, reject) {\n      cognitoUser.authenticateUser(authenicationDetails, {\n        onSuccess: function () {\n          resolve('completed')\n        },\n        onFailure: function () {\n          reject(new Error('..'))\n        }\n      })\n    })\n    promise.then(data => {\n      if (data === 'completed') {\n        window.location.href = this.redirectUrl\n        this.errorMessage = false\n      }\n    },\n    error => {\n      console.log(error)\n      this.errorMessage = true\n    })\n  }\n}\ncustomElements.define('login-component', LoginComponent)\n"],"sourceRoot":""}